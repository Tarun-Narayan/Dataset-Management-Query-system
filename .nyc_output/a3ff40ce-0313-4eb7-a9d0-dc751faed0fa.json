{"/Users/tarunn/project_team222/src/controller/IInsightFacade.ts":{"path":"/Users/tarunn/project_team222/src/controller/IInsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":89}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":48}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":31},"end":{"line":8,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":25},"end":{"line":20,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":25},"end":{"line":27,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":87}},"type":"binary-expr","locations":[{"start":{"line":8,"column":24},"end":{"line":8,"column":50}},{"start":{"line":8,"column":55},"end":{"line":8,"column":86}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":182,"6":182,"7":1,"8":3,"9":3,"10":1,"11":1,"12":1,"13":1},"f":{"0":1,"1":182,"2":3,"3":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/tarunn/project_team222/src/controller/IInsightFacade.ts","sources":["/Users/tarunn/project_team222/src/controller/IInsightFacade.ts"],"names":[],"mappings":";;;AAMA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC7B,2CAAqB,CAAA;IACrB,qCAAe,CAAA;AAChB,CAAC,EAHW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAG7B;AAUD,MAAa,YAAa,SAAQ,KAAK;IACtC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;CACD;AALD,oCAKC;AAED,MAAa,aAAc,SAAQ,KAAK;IACvC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;CACD;AALD,sCAKC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC7C,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;CACD;AALD,kDAKC","sourcesContent":["/*\n * This is the primary high-level API for the project. In this folder there should be:\n * A class called InsightFacade, this should be in a file called InsightFacade.ts.\n * You should not change this interface at all or the test suite will not work.\n */\n\nexport enum InsightDatasetKind {\n\tSections = \"sections\",\n\tRooms = \"rooms\",\n}\n\nexport interface InsightDataset {\n\tid: string;\n\tkind: InsightDatasetKind;\n\tnumRows: number;\n}\n\nexport type InsightResult = Record<string, string | number>;\n\nexport class InsightError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, InsightError);\n\t}\n}\n\nexport class NotFoundError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, NotFoundError);\n\t}\n}\n\nexport class ResultTooLargeError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, ResultTooLargeError);\n\t}\n}\n\nexport interface IInsightFacade {\n\t/**\n\t * Add a dataset to insightUBC.\n\t *\n\t * @param id  The id of the dataset being added. Follows the format /^[^_]+$/\n\t * @param content  The base64 content of the dataset. This content should be in the form of a serialized zip file.\n\t * @param kind  The kind of the dataset\n\t *\n\t * @return Promise <string[]>\n\t *\n\t * The promise should fulfill on a successful add, reject for any failures.\n\t * The promise should fulfill with a string array,\n\t * containing the ids of all currently added datasets upon a successful add.\n\t * The promise should reject with an InsightError describing the error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t * If id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\n\t *\n\t * After receiving the dataset, it should be processed into a data structure of\n\t * your design. The processed data structure should be persisted to disk; your\n\t * system should be able to load this persisted value into memory for answering\n\t * queries.\n\t *\n\t * Ultimately, a dataset must be added or loaded from disk before queries can\n\t * be successfully answered.\n\t */\n\taddDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]>;\n\n\t/**\n\t * Remove a dataset from insightUBC.\n\t *\n\t * @param id  The id of the dataset to remove. Follows the format /^[^_]+$/\n\t *\n\t * @return Promise <string>\n\t *\n\t * The promise should fulfill upon a successful removal, reject on any error.\n\t * Attempting to remove a dataset that hasn't been added yet counts as an error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t *\n\t * The promise should fulfill the id of the dataset that was removed.\n\t * The promise should reject with a NotFoundError (if a valid id was not yet added)\n\t * or an InsightError (invalid id or any other source of failure) describing the error.\n\t *\n\t * This will delete both disk and memory caches for the dataset for the id meaning\n\t * that subsequent queries for that id should fail unless a new addDataset happens first.\n\t */\n\tremoveDataset(id: string): Promise<string>;\n\n\t/**\n\t * Perform a query on insightUBC.\n\t *\n\t * @param query  The query to be performed.\n\t *\n\t * If a query is incorrectly formatted, references a dataset not added (in memory or on disk),\n\t * or references multiple datasets, it should be rejected.\n\t *\n\t * @return Promise <InsightResult[]>\n\t *\n\t * The promise should fulfill with an array of results.\n\t * The promise should reject with a ResultTooLargeError (if the query returns too many results)\n\t * or an InsightError (for any other source of failure) describing the error.\n\t */\n\tperformQuery(query: unknown): Promise<InsightResult[]>;\n\n\t/**\n\t * List all currently added datasets, their types, and number of rows.\n\t *\n\t * @return Promise <InsightDataset[]>\n\t * The promise should fulfill an array of currently added InsightDatasets, and will only fulfill.\n\t */\n\tlistDatasets(): Promise<InsightDataset[]>;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ca312b62bad392362b6b2e941af1d1d08e098e61","contentHash":"ea71cb3dae9f20ed2609c6c48438582954d1f027948630286cf2e9af12ca2cf2"},"/Users/tarunn/project_team222/src/controller/InsightFacade.ts":{"path":"/Users/tarunn/project_team222/src/controller/InsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"25":{"start":{"line":26,"column":4},"end":{"line":26,"column":62}},"26":{"start":{"line":28,"column":0},"end":{"line":28,"column":62}},"27":{"start":{"line":29,"column":25},"end":{"line":29,"column":52}},"28":{"start":{"line":30,"column":21},"end":{"line":30,"column":44}},"29":{"start":{"line":31,"column":16},"end":{"line":31,"column":34}},"30":{"start":{"line":32,"column":21},"end":{"line":32,"column":44}},"31":{"start":{"line":33,"column":20},"end":{"line":33,"column":57}},"32":{"start":{"line":34,"column":11},"end":{"line":34,"column":44}},"33":{"start":{"line":37,"column":8},"end":{"line":57,"column":9}},"34":{"start":{"line":38,"column":12},"end":{"line":38,"column":56}},"35":{"start":{"line":39,"column":28},"end":{"line":39,"column":73}},"36":{"start":{"line":40,"column":12},"end":{"line":42,"column":13}},"37":{"start":{"line":41,"column":16},"end":{"line":41,"column":114}},"38":{"start":{"line":44,"column":28},"end":{"line":44,"column":79}},"39":{"start":{"line":45,"column":12},"end":{"line":50,"column":13}},"40":{"start":{"line":46,"column":16},"end":{"line":46,"column":66}},"41":{"start":{"line":49,"column":16},"end":{"line":49,"column":69}},"42":{"start":{"line":51,"column":12},"end":{"line":51,"column":67}},"43":{"start":{"line":52,"column":31},"end":{"line":52,"column":76}},"44":{"start":{"line":53,"column":12},"end":{"line":53,"column":47}},"45":{"start":{"line":56,"column":12},"end":{"line":56,"column":39}},"46":{"start":{"line":60,"column":8},"end":{"line":78,"column":9}},"47":{"start":{"line":61,"column":12},"end":{"line":63,"column":13}},"48":{"start":{"line":62,"column":16},"end":{"line":62,"column":145}},"49":{"start":{"line":64,"column":37},"end":{"line":64,"column":82}},"50":{"start":{"line":65,"column":12},"end":{"line":67,"column":13}},"51":{"start":{"line":66,"column":16},"end":{"line":66,"column":110}},"52":{"start":{"line":68,"column":29},"end":{"line":68,"column":77}},"53":{"start":{"line":69,"column":31},"end":{"line":69,"column":60}},"54":{"start":{"line":70,"column":12},"end":{"line":72,"column":13}},"55":{"start":{"line":71,"column":16},"end":{"line":71,"column":118}},"56":{"start":{"line":73,"column":12},"end":{"line":73,"column":38}},"57":{"start":{"line":74,"column":12},"end":{"line":74,"column":39}},"58":{"start":{"line":77,"column":12},"end":{"line":77,"column":39}},"59":{"start":{"line":81,"column":8},"end":{"line":100,"column":9}},"60":{"start":{"line":84,"column":12},"end":{"line":99,"column":13}},"61":{"start":{"line":85,"column":16},"end":{"line":85,"column":64}},"62":{"start":{"line":86,"column":16},"end":{"line":94,"column":17}},"63":{"start":{"line":87,"column":20},"end":{"line":93,"column":21}},"64":{"start":{"line":88,"column":24},"end":{"line":88,"column":75}},"65":{"start":{"line":89,"column":24},"end":{"line":89,"column":55}},"66":{"start":{"line":92,"column":24},"end":{"line":92,"column":51}},"67":{"start":{"line":95,"column":16},"end":{"line":95,"column":97}},"68":{"start":{"line":98,"column":16},"end":{"line":98,"column":43}},"69":{"start":{"line":101,"column":8},"end":{"line":101,"column":88}},"70":{"start":{"line":104,"column":8},"end":{"line":121,"column":9}},"71":{"start":{"line":105,"column":31},"end":{"line":105,"column":76}},"72":{"start":{"line":106,"column":36},"end":{"line":116,"column":14}},"73":{"start":{"line":107,"column":33},"end":{"line":107,"column":81}},"74":{"start":{"line":108,"column":16},"end":{"line":115,"column":17}},"75":{"start":{"line":109,"column":36},"end":{"line":109,"column":63}},"76":{"start":{"line":110,"column":46},"end":{"line":110,"column":53}},"77":{"start":{"line":111,"column":20},"end":{"line":111,"column":49}},"78":{"start":{"line":114,"column":20},"end":{"line":114,"column":98}},"79":{"start":{"line":117,"column":12},"end":{"line":117,"column":54}},"80":{"start":{"line":120,"column":12},"end":{"line":120,"column":79}},"81":{"start":{"line":124,"column":0},"end":{"line":124,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":25,"column":56},"end":{"line":25,"column":57}},"loc":{"start":{"line":25,"column":71},"end":{"line":27,"column":1}},"line":25},"7":{"name":"(anonymous_7)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":40},"end":{"line":58,"column":5}},"line":36},"8":{"name":"(anonymous_8)","decl":{"start":{"line":59,"column":4},"end":{"line":59,"column":5}},"loc":{"start":{"line":59,"column":28},"end":{"line":79,"column":5}},"line":59},"9":{"name":"(anonymous_9)","decl":{"start":{"line":80,"column":4},"end":{"line":80,"column":5}},"loc":{"start":{"line":80,"column":30},"end":{"line":102,"column":5}},"line":80},"10":{"name":"(anonymous_10)","decl":{"start":{"line":103,"column":4},"end":{"line":103,"column":5}},"loc":{"start":{"line":103,"column":25},"end":{"line":122,"column":5}},"line":103},"11":{"name":"(anonymous_11)","decl":{"start":{"line":106,"column":51},"end":{"line":106,"column":52}},"loc":{"start":{"line":106,"column":65},"end":{"line":116,"column":13}},"line":106}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":27}},{"start":{"line":25,"column":31},"end":{"line":25,"column":51}},{"start":{"line":25,"column":56},"end":{"line":27,"column":1}}],"line":25},"17":{"loc":{"start":{"line":26,"column":11},"end":{"line":26,"column":61}},"type":"cond-expr","locations":[{"start":{"line":26,"column":37},"end":{"line":26,"column":40}},{"start":{"line":26,"column":43},"end":{"line":26,"column":61}}],"line":26},"18":{"loc":{"start":{"line":26,"column":12},"end":{"line":26,"column":33}},"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":15}},{"start":{"line":26,"column":19},"end":{"line":26,"column":33}}],"line":26},"19":{"loc":{"start":{"line":40,"column":12},"end":{"line":42,"column":13}},"type":"if","locations":[{"start":{"line":40,"column":12},"end":{"line":42,"column":13}},{"start":{"line":40,"column":12},"end":{"line":42,"column":13}}],"line":40},"20":{"loc":{"start":{"line":45,"column":12},"end":{"line":50,"column":13}},"type":"if","locations":[{"start":{"line":45,"column":12},"end":{"line":50,"column":13}},{"start":{"line":45,"column":12},"end":{"line":50,"column":13}}],"line":45},"21":{"loc":{"start":{"line":61,"column":12},"end":{"line":63,"column":13}},"type":"if","locations":[{"start":{"line":61,"column":12},"end":{"line":63,"column":13}},{"start":{"line":61,"column":12},"end":{"line":63,"column":13}}],"line":61},"22":{"loc":{"start":{"line":61,"column":16},"end":{"line":61,"column":58}},"type":"binary-expr","locations":[{"start":{"line":61,"column":16},"end":{"line":61,"column":38}},{"start":{"line":61,"column":42},"end":{"line":61,"column":58}}],"line":61},"23":{"loc":{"start":{"line":65,"column":12},"end":{"line":67,"column":13}},"type":"if","locations":[{"start":{"line":65,"column":12},"end":{"line":67,"column":13}},{"start":{"line":65,"column":12},"end":{"line":67,"column":13}}],"line":65},"24":{"loc":{"start":{"line":70,"column":12},"end":{"line":72,"column":13}},"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":72,"column":13}},{"start":{"line":70,"column":12},"end":{"line":72,"column":13}}],"line":70},"25":{"loc":{"start":{"line":81,"column":8},"end":{"line":100,"column":9}},"type":"if","locations":[{"start":{"line":81,"column":8},"end":{"line":100,"column":9}},{"start":{"line":81,"column":8},"end":{"line":100,"column":9}}],"line":81},"26":{"loc":{"start":{"line":86,"column":16},"end":{"line":94,"column":17}},"type":"if","locations":[{"start":{"line":86,"column":16},"end":{"line":94,"column":17}},{"start":{"line":86,"column":16},"end":{"line":94,"column":17}}],"line":86}},"s":{"0":1,"1":148,"2":148,"3":148,"4":148,"5":148,"6":3,"7":148,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":148,"21":148,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":24,"34":24,"35":20,"36":20,"37":1,"38":19,"39":10,"40":4,"41":6,"42":10,"43":10,"44":10,"45":13,"46":8,"47":8,"48":4,"49":4,"50":4,"51":3,"52":1,"53":1,"54":1,"55":0,"56":1,"57":1,"58":0,"59":47,"60":46,"61":46,"62":29,"63":29,"64":29,"65":27,"66":2,"67":0,"68":17,"69":1,"70":3,"71":3,"72":3,"73":1,"74":1,"75":1,"76":1,"77":1,"78":0,"79":3,"80":0,"81":1},"f":{"0":148,"1":3,"2":0,"3":1,"4":0,"5":1,"6":1,"7":24,"8":8,"9":47,"10":3,"11":1},"b":{"0":[1,1,1],"1":[1,0],"2":[148,0],"3":[148,0],"4":[148,148],"5":[0,148],"6":[148,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[148,0],"15":[148,148],"16":[1,1,1],"17":[0,1],"18":[1,1],"19":[1,19],"20":[4,6],"21":[4,4],"22":[8,6],"23":[3,1],"24":[0,1],"25":[46,1],"26":[29,0]},"inputSourceMap":{"version":3,"file":"/Users/tarunn/project_team222/src/controller/InsightFacade.ts","sources":["/Users/tarunn/project_team222/src/controller/InsightFacade.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qDAO0B;AAC1B,6CAOsB;AACtB,mCAA+C;AAC/C,6CAA0C;AAC1C,0DAA6B;AAC7B,6CAA+B;AAS/B,MAAqB,aAAa;IAC1B,KAAK,CAAC,UAAU,CAAC,EAAU,EAAE,OAAe,EAAE,IAAwB;QAC5E,IAAI;YACH,IAAA,4BAAe,EAAC,EAAE,EAAE,IAAI,CAAC,CAAC;YAC1B,MAAM,OAAO,GAAG,MAAM,IAAA,gCAAmB,GAAE,CAAC;YAC5C,IAAI,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE;gBACzB,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,6BAAY,CAAC,mBAAmB,EAAE,kBAAkB,CAAC,CAAC,CAAC;aACjF;YACD,IAAI,OAAc,CAAC;YAEnB,MAAM,OAAO,GAAG,MAAM,IAAA,yBAAY,EAAC,OAAO,EAAE,IAAI,CAAC,CAAC;YAClD,IAAI,IAAI,KAAK,mCAAkB,CAAC,KAAK,EAAE;gBACtC,OAAO,GAAG,IAAA,yBAAY,EAAC,OAAO,CAAC,CAAC;aAChC;iBAAM;gBACN,OAAO,GAAG,IAAA,4BAAe,EAAC,OAAO,CAAC,CAAC;aACnC;YAED,MAAM,IAAA,wBAAW,EAAC,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;YAIrC,MAAM,UAAU,GAAG,MAAM,IAAA,gCAAmB,GAAE,CAAC;YAC/C,OAAO,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;SACnC;QAAC,OAAO,GAAG,EAAE;YAEb,OAAO,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SAC3B;IACF,CAAC;IAEM,KAAK,CAAC,aAAa,CAAC,EAAU;QACpC,IAAI;YAEH,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;gBAC/C,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,6BAAY,CAAC,sEAAsE,CAAC,CAAC,CAAC;aAChH;YAGD,MAAM,gBAAgB,GAAG,MAAM,IAAA,gCAAmB,GAAE,CAAC;YAGrD,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE;gBACnC,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,8BAAa,CAAC,mBAAmB,EAAE,aAAa,CAAC,CAAC,CAAC;aAC7E;YAGD,MAAM,QAAQ,GAAG,mBAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;YAGnD,MAAM,UAAU,GAAG,MAAM,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,IAAI,CAAC,UAAU,EAAE;gBAChB,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,8BAAa,CAAC,mBAAmB,EAAE,qBAAqB,CAAC,CAAC,CAAC;aACrF;YAGD,MAAM,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAC1B,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;SAC3B;QAAC,OAAO,GAAG,EAAE;YACb,OAAO,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SAC3B;IACF,CAAC;IAEM,KAAK,CAAC,YAAY,CAAC,KAAc;QACvC,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC9B,IAAI,MAAuB,CAAC;YAC5B,IAAI,KAAc,CAAC;YACnB,IAAI;gBACH,KAAK,GAAG,MAAM,IAAA,qBAAa,EAAC,KAAc,CAAC,CAAC;gBAC5C,IAAI,KAAK,EAAE;oBACV,IAAI;wBACH,MAAM,GAAG,MAAM,IAAA,uBAAU,EAAC,KAAc,CAAC,CAAC;wBAC1C,OAAO,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;qBAC/B;oBAAC,OAAO,GAAG,EAAE;wBACb,OAAO,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;qBAC3B;iBACD;gBACD,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,6BAAY,CAAC,sBAAsB,CAAC,CAAC,CAAC;aAChE;YAAC,OAAO,GAAG,EAAE;gBACb,OAAO,OAAO,CAAC,MAAM,CAAC,GAAmB,CAAC,CAAC;aAC3C;SACD;QACD,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,6BAAY,CAAC,qBAAqB,CAAC,CAAC,CAAC;IAChE,CAAC;IAEM,KAAK,CAAC,YAAY;QACxB,IAAI;YAEH,MAAM,UAAU,GAAG,MAAM,IAAA,gCAAmB,GAAE,CAAC;YAI/C,MAAM,eAAe,GAAG,UAAU,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE;gBACnD,MAAM,QAAQ,GAAG,mBAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;gBAEnD,IAAI;oBACH,MAAM,OAAO,GAAG,MAAM,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;oBAG5C,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC;oBAClC,OAAO,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;iBAC7B;gBAAC,OAAO,IAAI,EAAE;oBACd,MAAM,IAAI,6BAAY,CAAC,gCAAgC,EAAE,EAAE,CAAC,CAAC;iBAC7D;YACF,CAAC,CAAC,CAAC;YAEH,OAAO,MAAM,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;SAC1C;QAAC,OAAO,IAAI,EAAE;YACd,MAAM,IAAI,6BAAY,CAAC,yBAAyB,CAAC,CAAC;SAClD;IACF,CAAC;CACD;AA7GD,gCA6GC","sourcesContent":["import {\n\tIInsightFacade,\n\tInsightDataset,\n\tInsightDatasetKind,\n\tInsightError,\n\tInsightResult,\n\tNotFoundError,\n} from \"./IInsightFacade\";\nimport {\n\tgetStoredDatasetIds,\n\tparseZipFile,\n\tprocessRooms,\n\tprocessSections,\n\tsaveDataset,\n\tvalidateDataset,\n} from \"./ZipDecoder\";\nimport { Query, validateQuery } from \"./Query\";\nimport { getResults } from \"./GetResults\";\nimport path from \"node:path\";\nimport * as fs from \"fs-extra\";\n\n/**\n * This is the main programmatic entry point for the project.\n * Method documentation is in IInsightFacade\n *\n */\n// const datasets = new Map<string, { id: string; kind: InsightDatasetKind }>();\n\nexport default class InsightFacade implements IInsightFacade {\n\tpublic async addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\n\t\ttry {\n\t\t\tvalidateDataset(id, kind);\n\t\t\tconst idsList = await getStoredDatasetIds();\n\t\t\tif (idsList.includes(id)) {\n\t\t\t\treturn Promise.reject(new InsightError(`Dataset with id ${id} already exists.`));\n\t\t\t}\n\t\t\tlet dataset: any[];\n\n\t\t\tconst fileMap = await parseZipFile(content, kind);\n\t\t\tif (kind === InsightDatasetKind.Rooms) {\n\t\t\t\tdataset = processRooms(fileMap);\n\t\t\t} else {\n\t\t\t\tdataset = processSections(fileMap);\n\t\t\t}\n\n\t\t\tawait saveDataset(id, dataset, kind);\n\t\t\t// console.log(dataset);\n\n\t\t\t// Return the list of all dataset IDs on disk\n\t\t\tconst updatedIds = await getStoredDatasetIds();\n\t\t\treturn Promise.resolve(updatedIds);\n\t\t} catch (err) {\n\t\t\t// _err used everywhere to avoid ESLint no-unused-vars error\n\t\t\treturn Promise.reject(err);\n\t\t}\n\t}\n\n\tpublic async removeDataset(id: string): Promise<string> {\n\t\ttry {\n\t\t\t// Validate dataset ID (no underscores and not empty/whitespace)\n\t\t\tif (id.trim().length === 0 || id.includes(\"_\")) {\n\t\t\t\treturn Promise.reject(new InsightError(\"Invalid ID: ID is empty, only whitespace, or contains an underscore.\"));\n\t\t\t}\n\n\t\t\t// List of stored dataset IDs\n\t\t\tconst storedDatasetIds = await getStoredDatasetIds();\n\n\t\t\t// Check if dataset exists\n\t\t\tif (!storedDatasetIds.includes(id)) {\n\t\t\t\treturn Promise.reject(new NotFoundError(`Dataset with id ${id} not found.`));\n\t\t\t}\n\n\t\t\t// File path for the dataset\n\t\t\tconst filePath = path.join(\"./data\", `${id}.json`);\n\n\t\t\t// Check if the file exists on disk\n\t\t\tconst fileExists = await fs.pathExists(filePath);\n\t\t\tif (!fileExists) {\n\t\t\t\treturn Promise.reject(new NotFoundError(`Dataset with id ${id} not found on disk.`));\n\t\t\t}\n\n\t\t\t// Remove the file from disk\n\t\t\tawait fs.remove(filePath);\n\t\t\treturn Promise.resolve(id);\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(err);\n\t\t}\n\t}\n\n\tpublic async performQuery(query: unknown): Promise<InsightResult[]> {\n\t\tif (typeof query === \"object\") {\n\t\t\tlet result: InsightResult[];\n\t\t\tlet valid: boolean;\n\t\t\ttry {\n\t\t\t\tvalid = await validateQuery(query as Query);\n\t\t\t\tif (valid) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tresult = await getResults(query as Query);\n\t\t\t\t\t\treturn Promise.resolve(result);\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn Promise.reject(new InsightError(\"Invalid query syntax\"));\n\t\t\t} catch (err) {\n\t\t\t\treturn Promise.reject(err as InsightError);\n\t\t\t}\n\t\t}\n\t\treturn Promise.reject(new InsightError(\"Query not an object\"));\n\t}\n\n\tpublic async listDatasets(): Promise<InsightDataset[]> {\n\t\ttry {\n\t\t\t// Stored dataset IDs\n\t\t\tconst datasetIds = await getStoredDatasetIds();\n\n\t\t\t// Map dataset IDs to promises for reading the dataset files. Used Chatgpt for logic to avoid ESLint error\n\t\t\t// for const dataset = await fs.readJson(filePath); Created an ID->Promise mapping\n\t\t\tconst datasetPromises = datasetIds.map(async (id) => {\n\t\t\t\tconst filePath = path.join(\"./data\", `${id}.json`);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst dataset = await fs.readJson(filePath);\n\n\t\t\t\t\t// Extract (id, kind, numRows)\n\t\t\t\t\tconst { kind, numRows } = dataset;\n\t\t\t\t\treturn { id, kind, numRows };\n\t\t\t\t} catch (_err) {\n\t\t\t\t\tthrow new InsightError(`Failed to read dataset file: ${id}`);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn await Promise.all(datasetPromises);\n\t\t} catch (_err) {\n\t\t\tthrow new InsightError(\"Failed to list datasets\");\n\t\t}\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ab3625a00fb9c5eeb7a3f30ada3f4cb640607e21","contentHash":"2bba45a49a1878a572036a3f941e961b0c3b17c755a178cbb51d4b067fdbe729"},"/Users/tarunn/project_team222/src/controller/ZipDecoder.ts":{"path":"/Users/tarunn/project_team222/src/controller/ZipDecoder.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"25":{"start":{"line":26,"column":4},"end":{"line":26,"column":62}},"26":{"start":{"line":28,"column":0},"end":{"line":28,"column":62}},"27":{"start":{"line":29,"column":0},"end":{"line":29,"column":157}},"28":{"start":{"line":30,"column":16},"end":{"line":30,"column":49}},"29":{"start":{"line":31,"column":25},"end":{"line":31,"column":52}},"30":{"start":{"line":32,"column":11},"end":{"line":32,"column":44}},"31":{"start":{"line":33,"column":13},"end":{"line":33,"column":42}},"32":{"start":{"line":34,"column":26},"end":{"line":34,"column":54}},"33":{"start":{"line":35,"column":26},"end":{"line":35,"column":34}},"34":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"35":{"start":{"line":38,"column":8},"end":{"line":38,"column":120}},"36":{"start":{"line":40,"column":4},"end":{"line":42,"column":5}},"37":{"start":{"line":41,"column":8},"end":{"line":41,"column":115}},"38":{"start":{"line":44,"column":0},"end":{"line":44,"column":42}},"39":{"start":{"line":46,"column":16},"end":{"line":46,"column":37}},"40":{"start":{"line":48,"column":4},"end":{"line":53,"column":5}},"41":{"start":{"line":49,"column":8},"end":{"line":49,"column":68}},"42":{"start":{"line":52,"column":8},"end":{"line":52,"column":69}},"43":{"start":{"line":54,"column":4},"end":{"line":62,"column":5}},"44":{"start":{"line":55,"column":8},"end":{"line":55,"column":74}},"45":{"start":{"line":57,"column":9},"end":{"line":62,"column":5}},"46":{"start":{"line":58,"column":8},"end":{"line":58,"column":54}},"47":{"start":{"line":61,"column":8},"end":{"line":61,"column":77}},"48":{"start":{"line":64,"column":0},"end":{"line":64,"column":36}},"49":{"start":{"line":66,"column":20},"end":{"line":66,"column":29}},"50":{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},"51":{"start":{"line":68,"column":8},"end":{"line":68,"column":96}},"52":{"start":{"line":70,"column":4},"end":{"line":83,"column":8}},"53":{"start":{"line":71,"column":21},"end":{"line":71,"column":47}},"54":{"start":{"line":72,"column":8},"end":{"line":82,"column":9}},"55":{"start":{"line":73,"column":12},"end":{"line":81,"column":13}},"56":{"start":{"line":74,"column":36},"end":{"line":74,"column":62}},"57":{"start":{"line":75,"column":16},"end":{"line":80,"column":17}},"58":{"start":{"line":76,"column":40},"end":{"line":76,"column":63}},"59":{"start":{"line":77,"column":20},"end":{"line":77,"column":55}},"60":{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},"61":{"start":{"line":85,"column":8},"end":{"line":85,"column":90}},"62":{"start":{"line":87,"column":4},"end":{"line":87,"column":19}},"63":{"start":{"line":90,"column":18},"end":{"line":90,"column":20}},"64":{"start":{"line":91,"column":4},"end":{"line":97,"column":7}},"65":{"start":{"line":92,"column":8},"end":{"line":96,"column":9}},"66":{"start":{"line":93,"column":12},"end":{"line":95,"column":13}},"67":{"start":{"line":94,"column":16},"end":{"line":94,"column":33}},"68":{"start":{"line":98,"column":4},"end":{"line":100,"column":5}},"69":{"start":{"line":99,"column":8},"end":{"line":99,"column":84}},"70":{"start":{"line":101,"column":4},"end":{"line":101,"column":17}},"71":{"start":{"line":103,"column":0},"end":{"line":103,"column":36}},"72":{"start":{"line":105,"column":25},"end":{"line":117,"column":5}},"73":{"start":{"line":118,"column":4},"end":{"line":121,"column":7}},"74":{"start":{"line":119,"column":22},"end":{"line":119,"column":31}},"75":{"start":{"line":120,"column":8},"end":{"line":120,"column":78}},"76":{"start":{"line":124,"column":21},"end":{"line":124,"column":23}},"77":{"start":{"line":125,"column":4},"end":{"line":134,"column":7}},"78":{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},"79":{"start":{"line":127,"column":12},"end":{"line":127,"column":19}},"80":{"start":{"line":129,"column":8},"end":{"line":133,"column":9}},"81":{"start":{"line":130,"column":12},"end":{"line":132,"column":13}},"82":{"start":{"line":131,"column":16},"end":{"line":131,"column":39}},"83":{"start":{"line":135,"column":4},"end":{"line":137,"column":5}},"84":{"start":{"line":136,"column":8},"end":{"line":136,"column":87}},"85":{"start":{"line":138,"column":4},"end":{"line":138,"column":20}},"86":{"start":{"line":140,"column":0},"end":{"line":140,"column":42}},"87":{"start":{"line":142,"column":25},"end":{"line":142,"column":114}},"88":{"start":{"line":143,"column":4},"end":{"line":143,"column":91}},"89":{"start":{"line":143,"column":39},"end":{"line":143,"column":89}},"90":{"start":{"line":146,"column":20},"end":{"line":151,"column":5}},"91":{"start":{"line":152,"column":4},"end":{"line":157,"column":5}},"92":{"start":{"line":153,"column":8},"end":{"line":153,"column":46}},"93":{"start":{"line":156,"column":8},"end":{"line":156,"column":86}},"94":{"start":{"line":158,"column":21},"end":{"line":158,"column":63}},"95":{"start":{"line":159,"column":4},"end":{"line":164,"column":5}},"96":{"start":{"line":160,"column":8},"end":{"line":160,"column":79}},"97":{"start":{"line":163,"column":8},"end":{"line":163,"column":82}},"98":{"start":{"line":166,"column":0},"end":{"line":166,"column":34}},"99":{"start":{"line":168,"column":4},"end":{"line":181,"column":5}},"100":{"start":{"line":169,"column":26},"end":{"line":169,"column":64}},"101":{"start":{"line":170,"column":8},"end":{"line":172,"column":9}},"102":{"start":{"line":171,"column":12},"end":{"line":171,"column":22}},"103":{"start":{"line":173,"column":22},"end":{"line":173,"column":57}},"104":{"start":{"line":174,"column":8},"end":{"line":176,"column":9}},"105":{"start":{"line":175,"column":12},"end":{"line":175,"column":22}},"106":{"start":{"line":177,"column":8},"end":{"line":177,"column":106}},"107":{"start":{"line":177,"column":38},"end":{"line":177,"column":60}},"108":{"start":{"line":177,"column":76},"end":{"line":177,"column":104}},"109":{"start":{"line":180,"column":8},"end":{"line":180,"column":84}},"110":{"start":{"line":183,"column":0},"end":{"line":183,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":25,"column":56},"end":{"line":25,"column":57}},"loc":{"start":{"line":25,"column":71},"end":{"line":27,"column":1}},"line":25},"7":{"name":"validateDataset","decl":{"start":{"line":36,"column":9},"end":{"line":36,"column":24}},"loc":{"start":{"line":36,"column":35},"end":{"line":43,"column":1}},"line":36},"8":{"name":"parseZipFile","decl":{"start":{"line":45,"column":15},"end":{"line":45,"column":27}},"loc":{"start":{"line":45,"column":43},"end":{"line":63,"column":1}},"line":45},"9":{"name":"parseSectionsZipFile","decl":{"start":{"line":65,"column":15},"end":{"line":65,"column":35}},"loc":{"start":{"line":65,"column":48},"end":{"line":88,"column":1}},"line":65},"10":{"name":"(anonymous_10)","decl":{"start":{"line":70,"column":56},"end":{"line":70,"column":57}},"loc":{"start":{"line":70,"column":76},"end":{"line":83,"column":5}},"line":70},"11":{"name":"processRooms","decl":{"start":{"line":89,"column":9},"end":{"line":89,"column":21}},"loc":{"start":{"line":89,"column":31},"end":{"line":102,"column":1}},"line":89},"12":{"name":"(anonymous_12)","decl":{"start":{"line":91,"column":20},"end":{"line":91,"column":21}},"loc":{"start":{"line":91,"column":39},"end":{"line":97,"column":5}},"line":91},"13":{"name":"isValidRoom","decl":{"start":{"line":104,"column":9},"end":{"line":104,"column":20}},"loc":{"start":{"line":104,"column":27},"end":{"line":122,"column":1}},"line":104},"14":{"name":"(anonymous_14)","decl":{"start":{"line":118,"column":30},"end":{"line":118,"column":31}},"loc":{"start":{"line":118,"column":49},"end":{"line":121,"column":5}},"line":118},"15":{"name":"processSections","decl":{"start":{"line":123,"column":9},"end":{"line":123,"column":24}},"loc":{"start":{"line":123,"column":34},"end":{"line":139,"column":1}},"line":123},"16":{"name":"(anonymous_16)","decl":{"start":{"line":125,"column":20},"end":{"line":125,"column":21}},"loc":{"start":{"line":125,"column":48},"end":{"line":134,"column":5}},"line":125},"17":{"name":"isValidSection","decl":{"start":{"line":141,"column":9},"end":{"line":141,"column":23}},"loc":{"start":{"line":141,"column":33},"end":{"line":144,"column":1}},"line":141},"18":{"name":"(anonymous_18)","decl":{"start":{"line":143,"column":30},"end":{"line":143,"column":31}},"loc":{"start":{"line":143,"column":39},"end":{"line":143,"column":89}},"line":143},"19":{"name":"saveDataset","decl":{"start":{"line":145,"column":15},"end":{"line":145,"column":26}},"loc":{"start":{"line":145,"column":47},"end":{"line":165,"column":1}},"line":145},"20":{"name":"getStoredDatasetIds","decl":{"start":{"line":167,"column":15},"end":{"line":167,"column":34}},"loc":{"start":{"line":167,"column":37},"end":{"line":182,"column":1}},"line":167},"21":{"name":"(anonymous_21)","decl":{"start":{"line":177,"column":28},"end":{"line":177,"column":29}},"loc":{"start":{"line":177,"column":38},"end":{"line":177,"column":60}},"line":177},"22":{"name":"(anonymous_22)","decl":{"start":{"line":177,"column":66},"end":{"line":177,"column":67}},"loc":{"start":{"line":177,"column":76},"end":{"line":177,"column":104}},"line":177}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":27}},{"start":{"line":25,"column":31},"end":{"line":25,"column":51}},{"start":{"line":25,"column":56},"end":{"line":27,"column":1}}],"line":25},"17":{"loc":{"start":{"line":26,"column":11},"end":{"line":26,"column":61}},"type":"cond-expr","locations":[{"start":{"line":26,"column":37},"end":{"line":26,"column":40}},{"start":{"line":26,"column":43},"end":{"line":26,"column":61}}],"line":26},"18":{"loc":{"start":{"line":26,"column":12},"end":{"line":26,"column":33}},"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":15}},{"start":{"line":26,"column":19},"end":{"line":26,"column":33}}],"line":26},"19":{"loc":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},{"start":{"line":37,"column":4},"end":{"line":39,"column":5}}],"line":37},"20":{"loc":{"start":{"line":37,"column":8},"end":{"line":37,"column":50}},"type":"binary-expr","locations":[{"start":{"line":37,"column":8},"end":{"line":37,"column":30}},{"start":{"line":37,"column":34},"end":{"line":37,"column":50}}],"line":37},"21":{"loc":{"start":{"line":40,"column":4},"end":{"line":42,"column":5}},"type":"if","locations":[{"start":{"line":40,"column":4},"end":{"line":42,"column":5}},{"start":{"line":40,"column":4},"end":{"line":42,"column":5}}],"line":40},"22":{"loc":{"start":{"line":40,"column":8},"end":{"line":40,"column":115}},"type":"binary-expr","locations":[{"start":{"line":40,"column":8},"end":{"line":40,"column":61}},{"start":{"line":40,"column":65},"end":{"line":40,"column":115}}],"line":40},"23":{"loc":{"start":{"line":54,"column":4},"end":{"line":62,"column":5}},"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":62,"column":5}},{"start":{"line":54,"column":4},"end":{"line":62,"column":5}}],"line":54},"24":{"loc":{"start":{"line":57,"column":9},"end":{"line":62,"column":5}},"type":"if","locations":[{"start":{"line":57,"column":9},"end":{"line":62,"column":5}},{"start":{"line":57,"column":9},"end":{"line":62,"column":5}}],"line":57},"25":{"loc":{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},{"start":{"line":67,"column":4},"end":{"line":69,"column":5}}],"line":67},"26":{"loc":{"start":{"line":72,"column":8},"end":{"line":82,"column":9}},"type":"if","locations":[{"start":{"line":72,"column":8},"end":{"line":82,"column":9}},{"start":{"line":72,"column":8},"end":{"line":82,"column":9}}],"line":72},"27":{"loc":{"start":{"line":73,"column":12},"end":{"line":81,"column":13}},"type":"if","locations":[{"start":{"line":73,"column":12},"end":{"line":81,"column":13}},{"start":{"line":73,"column":12},"end":{"line":81,"column":13}}],"line":73},"28":{"loc":{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},{"start":{"line":84,"column":4},"end":{"line":86,"column":5}}],"line":84},"29":{"loc":{"start":{"line":93,"column":12},"end":{"line":95,"column":13}},"type":"if","locations":[{"start":{"line":93,"column":12},"end":{"line":95,"column":13}},{"start":{"line":93,"column":12},"end":{"line":95,"column":13}}],"line":93},"30":{"loc":{"start":{"line":98,"column":4},"end":{"line":100,"column":5}},"type":"if","locations":[{"start":{"line":98,"column":4},"end":{"line":100,"column":5}},{"start":{"line":98,"column":4},"end":{"line":100,"column":5}}],"line":98},"31":{"loc":{"start":{"line":120,"column":15},"end":{"line":120,"column":77}},"type":"binary-expr","locations":[{"start":{"line":120,"column":15},"end":{"line":120,"column":36}},{"start":{"line":120,"column":40},"end":{"line":120,"column":54}},{"start":{"line":120,"column":58},"end":{"line":120,"column":77}}],"line":120},"32":{"loc":{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},"type":"if","locations":[{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},{"start":{"line":126,"column":8},"end":{"line":128,"column":9}}],"line":126},"33":{"loc":{"start":{"line":126,"column":12},"end":{"line":126,"column":69}},"type":"binary-expr","locations":[{"start":{"line":126,"column":12},"end":{"line":126,"column":31}},{"start":{"line":126,"column":35},"end":{"line":126,"column":69}}],"line":126},"34":{"loc":{"start":{"line":130,"column":12},"end":{"line":132,"column":13}},"type":"if","locations":[{"start":{"line":130,"column":12},"end":{"line":132,"column":13}},{"start":{"line":130,"column":12},"end":{"line":132,"column":13}}],"line":130},"35":{"loc":{"start":{"line":135,"column":4},"end":{"line":137,"column":5}},"type":"if","locations":[{"start":{"line":135,"column":4},"end":{"line":137,"column":5}},{"start":{"line":135,"column":4},"end":{"line":137,"column":5}}],"line":135},"36":{"loc":{"start":{"line":170,"column":8},"end":{"line":172,"column":9}},"type":"if","locations":[{"start":{"line":170,"column":8},"end":{"line":172,"column":9}},{"start":{"line":170,"column":8},"end":{"line":172,"column":9}}],"line":170},"37":{"loc":{"start":{"line":174,"column":8},"end":{"line":176,"column":9}},"type":"if","locations":[{"start":{"line":174,"column":8},"end":{"line":176,"column":9}},{"start":{"line":174,"column":8},"end":{"line":176,"column":9}}],"line":174}},"s":{"0":1,"1":164,"2":164,"3":164,"4":164,"5":164,"6":98,"7":164,"8":0,"9":0,"10":0,"11":1,"12":2,"13":0,"14":1,"15":2,"16":0,"17":2,"18":2,"19":2,"20":164,"21":164,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":24,"35":4,"36":20,"37":0,"38":1,"39":19,"40":19,"41":19,"42":3,"43":16,"44":7,"45":9,"46":9,"47":0,"48":1,"49":9,"50":9,"51":3,"52":6,"53":35670,"54":35670,"55":35670,"56":35664,"57":35664,"58":35664,"59":35664,"60":6,"61":0,"62":6,"63":4,"64":4,"65":176,"66":1456,"67":1456,"68":4,"69":0,"70":4,"71":1,"72":1456,"73":1456,"74":16016,"75":16016,"76":6,"77":6,"78":35664,"79":0,"80":35664,"81":387672,"82":387672,"83":6,"84":0,"85":6,"86":1,"87":387672,"88":387672,"89":3876720,"90":10,"91":10,"92":10,"93":0,"94":10,"95":10,"96":10,"97":0,"98":1,"99":37,"100":37,"101":37,"102":22,"103":15,"104":15,"105":1,"106":14,"107":16,"108":16,"109":0,"110":1},"f":{"0":164,"1":98,"2":0,"3":2,"4":0,"5":2,"6":1,"7":24,"8":19,"9":9,"10":35670,"11":4,"12":176,"13":1456,"14":16016,"15":6,"16":35664,"17":387672,"18":3876720,"19":10,"20":37,"21":16,"22":16},"b":{"0":[1,1,1],"1":[1,0],"2":[164,0],"3":[164,0],"4":[164,164],"5":[0,164],"6":[164,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,2],"12":[2,2],"13":[2,0],"14":[164,0],"15":[164,164],"16":[1,1,1],"17":[0,1],"18":[1,1],"19":[4,20],"20":[24,21],"21":[0,20],"22":[20,7],"23":[7,9],"24":[9,0],"25":[3,6],"26":[35670,0],"27":[35664,6],"28":[0,6],"29":[1456,0],"30":[0,4],"31":[16016,16016,16016],"32":[0,35664],"33":[35664,35664],"34":[387672,0],"35":[0,6],"36":[22,15],"37":[1,14]},"inputSourceMap":{"version":3,"file":"/Users/tarunn/project_team222/src/controller/ZipDecoder.ts","sources":["/Users/tarunn/project_team222/src/controller/ZipDecoder.ts"],"names":[],"mappings":"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","sourcesContent":["import JSZip from \"jszip\";\nimport { InsightDatasetKind, InsightError } from \"./IInsightFacade\";\nimport * as fs from \"fs-extra\";\nimport * as path from \"path\";\nimport { parseRoomsZipFile } from \"./RoomsAddHelpers\";\n\n// Path for storing datasets\nconst DATASET_DIRECTORY = \"./data\";\n\n// Validate the dataset based on rules for a valid UBC course dataset.\nexport function validateDataset(id: string, kind: InsightDatasetKind): void {\n\tif (id.trim().length === 0 || id.includes(\"_\")) {\n\t\tthrow new InsightError(\"Invalid ID: ID is empty, only whitespace, or contains an underscore.\");\n\t}\n\tif (kind !== InsightDatasetKind.Sections && kind !== InsightDatasetKind.Rooms) {\n\t\tthrow new InsightError(\"Invalid Dataset Kind: Only 'Sections' and 'Rooms' is supported.\");\n\t}\n}\n\n//Parse the zip file: either rooms or sections\nexport async function parseZipFile(content: string, kind: InsightDatasetKind): Promise<Map<string, any>> {\n\tconst zip = new JSZip();\n\tlet zipContent: JSZip;\n\n\t// Check if the content is a valid zip file\n\ttry {\n\t\tzipContent = await zip.loadAsync(content, { base64: true });\n\t} catch (_error) {\n\t\tthrow new InsightError(\"Invalid Zip File!\");\n\t}\n\n\tif (kind === InsightDatasetKind.Rooms) {\n\t\treturn await parseRoomsZipFile(zipContent);\n\t} else if (kind === InsightDatasetKind.Sections) {\n\t\treturn await parseSectionsZipFile(zipContent);\n\t} else {\n\t\tthrow new InsightError(\"Unsupported dataset kind!\");\n\t}\n}\n// Function to parse sections dataset\nasync function parseSectionsZipFile(zipContent: JSZip): Promise<Map<string, any>> {\n\tconst fileMap = new Map<string, any>();\n\n\t// Check if the zip file contains the \"courses\" folder\n\tif (!zipContent.files?.[\"courses/\"]) {\n\t\tthrow new InsightError(\"'courses' folder is missing in the zip file!\");\n\t}\n\n\t// Parse files in the courses folder\n\tawait Promise.all(\n\t\tObject.keys(zipContent.files).map(async (fileName) => {\n\t\t\tconst file = zipContent.files[fileName];\n\n\t\t\tif (fileName.startsWith(\"courses/\")) {\n\t\t\t\tif (!file.dir) {\n\t\t\t\t\tconst fileContent = await file.async(\"string\");\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// Parse the file content as JSON\n\t\t\t\t\t\tconst jsonContent = JSON.parse(fileContent);\n\t\t\t\t\t\tfileMap.set(fileName, jsonContent);\n\t\t\t\t\t} catch (_err) {\n\t\t\t\t\t\t// Do nothing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t);\n\n\t// No Valid course sections\n\tif (fileMap.size === 0) {\n\t\tthrow new InsightError(\"No valid course sections found in zip!\");\n\t}\n\n\treturn fileMap;\n}\n\n// Process rooms based on the room dataset specification\nexport function processRooms(fileMap: Map<string, any>): any[] {\n\tconst rooms: any[] = [];\n\tfileMap.forEach((buildingRooms) => {\n\t\tfor (const room of buildingRooms) {\n\t\t\tif (isValidRoom(room)) {\n\t\t\t\trooms.push(room);\n\t\t\t}\n\t\t}\n\t});\n\n\tif (rooms.length === 0) {\n\t\tthrow new InsightError(\"No valid rooms found in dataset!\");\n\t}\n\treturn rooms;\n}\n\n// Validate if a room contains all required fields with correct types\nfunction isValidRoom(room: any): boolean {\n\tconst requiredKeys = [\n\t\t{ key: \"fullname\", type: \"string\" },\n\t\t{ key: \"shortname\", type: \"string\" },\n\t\t{ key: \"number\", type: \"string\" },\n\t\t{ key: \"name\", type: \"string\" },\n\t\t{ key: \"address\", type: \"string\" },\n\t\t{ key: \"lat\", type: \"number\" },\n\t\t{ key: \"lon\", type: \"number\" },\n\t\t{ key: \"seats\", type: \"number\" },\n\t\t{ key: \"type\", type: \"string\" },\n\t\t{ key: \"furniture\", type: \"string\" },\n\t\t{ key: \"href\", type: \"string\" },\n\t];\n\n\treturn requiredKeys.every(({ key, type }) => {\n\t\tconst value = room[key];\n\t\treturn typeof value === type && value !== null && value !== undefined;\n\t});\n}\n\n// Processes sections\nexport function processSections(fileMap: Map<string, any>): any[] {\n\tconst sections: any[] = [];\n\n\t// Iterate through each file and extract valid sections\n\tfileMap.forEach((fileContent, _fileName) => {\n\t\tif (!fileContent.result || !Array.isArray(fileContent.result)) {\n\t\t\treturn; //Invalid structure of json\n\t\t}\n\n\t\tfor (const section of fileContent.result) {\n\t\t\tif (isValidSection(section)) {\n\t\t\t\tsections.push(section);\n\t\t\t}\n\t\t}\n\t});\n\n\t// no valid sections found\n\tif (sections.length === 0) {\n\t\tthrow new InsightError(\"No valid sections found in dataset!\");\n\t}\n\treturn sections;\n}\n\n// Checks if a section is valid\nfunction isValidSection(section: any): boolean {\n\tconst requiredKeys = [\"Subject\", \"Course\", \"Avg\", \"Professor\", \"Title\", \"Pass\", \"Fail\", \"Audit\", \"id\", \"Year\"];\n\treturn requiredKeys.every((key) => Object.prototype.hasOwnProperty.call(section, key));\n}\n\n// Saves the processed dataset.\nexport async function saveDataset(id: string, sections: any[], kind: InsightDatasetKind): Promise<void> {\n\tconst dataset = {\n\t\tid,\n\t\tkind,\n\t\tnumRows: sections.length,\n\t\tsections,\n\t};\n\n\ttry {\n\t\tawait fs.ensureDir(DATASET_DIRECTORY);\n\t} catch (_err) {\n\t\tthrow new InsightError(`Failed to create dataset directory`);\n\t}\n\n\t// file path where datasets will be saved\n\tconst filePath = path.join(DATASET_DIRECTORY, `${id}.json`);\n\n\ttry {\n\t\t// Write the dataset to a file\n\t\tawait fs.writeJson(filePath, dataset, { encoding: \"utf8\", spaces: 2 });\n\t} catch (_err) {\n\t\tthrow new InsightError(`Failed to save dataset to disk`);\n\t}\n}\n\nexport async function getStoredDatasetIds(): Promise<string[]> {\n\ttry {\n\t\tconst dirExists = await fs.pathExists(DATASET_DIRECTORY);\n\n\t\tif (!dirExists) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst files = await fs.readdir(DATASET_DIRECTORY);\n\n\t\tif (files.length === 0) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn files.filter((file) => file.endsWith(\".json\")).map((file) => path.basename(file, \".json\"));\n\t} catch (_err) {\n\t\tthrow new InsightError(\"Failed to read dataset directory\");\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a6d2b71956ea8a71e8c31b1d329dac2a90ed4947","contentHash":"9615945b46c484c76af0355b05967bc120d4fab50860092e826da32b19ebf846"},"/Users/tarunn/project_team222/src/controller/RoomsAddHelpers.ts":{"path":"/Users/tarunn/project_team222/src/controller/RoomsAddHelpers.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"25":{"start":{"line":26,"column":4},"end":{"line":26,"column":62}},"26":{"start":{"line":28,"column":0},"end":{"line":28,"column":62}},"27":{"start":{"line":29,"column":0},"end":{"line":29,"column":104}},"28":{"start":{"line":30,"column":25},"end":{"line":30,"column":52}},"29":{"start":{"line":31,"column":15},"end":{"line":31,"column":46}},"30":{"start":{"line":32,"column":15},"end":{"line":32,"column":47}},"31":{"start":{"line":34,"column":20},"end":{"line":34,"column":29}},"32":{"start":{"line":35,"column":26},"end":{"line":35,"column":37}},"33":{"start":{"line":36,"column":22},"end":{"line":36,"column":53}},"34":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"35":{"start":{"line":38,"column":8},"end":{"line":38,"column":86}},"36":{"start":{"line":40,"column":25},"end":{"line":40,"column":56}},"37":{"start":{"line":41,"column":22},"end":{"line":41,"column":61}},"38":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"39":{"start":{"line":43,"column":8},"end":{"line":43,"column":90}},"40":{"start":{"line":45,"column":21},"end":{"line":58,"column":6}},"41":{"start":{"line":46,"column":8},"end":{"line":57,"column":9}},"42":{"start":{"line":47,"column":24},"end":{"line":47,"column":25}},"43":{"start":{"line":48,"column":24},"end":{"line":48,"column":71}},"44":{"start":{"line":49,"column":33},"end":{"line":49,"column":54}},"45":{"start":{"line":50,"column":12},"end":{"line":56,"column":13}},"46":{"start":{"line":51,"column":40},"end":{"line":51,"column":74}},"47":{"start":{"line":52,"column":30},"end":{"line":52,"column":84}},"48":{"start":{"line":53,"column":16},"end":{"line":55,"column":17}},"49":{"start":{"line":54,"column":20},"end":{"line":54,"column":62}},"50":{"start":{"line":59,"column":4},"end":{"line":59,"column":32}},"51":{"start":{"line":60,"column":4},"end":{"line":62,"column":5}},"52":{"start":{"line":61,"column":8},"end":{"line":61,"column":84}},"53":{"start":{"line":63,"column":4},"end":{"line":63,"column":19}},"54":{"start":{"line":65,"column":0},"end":{"line":65,"column":46}},"55":{"start":{"line":67,"column":21},"end":{"line":67,"column":46}},"56":{"start":{"line":68,"column":18},"end":{"line":68,"column":20}},"57":{"start":{"line":69,"column":26},"end":{"line":69,"column":86}},"58":{"start":{"line":70,"column":4},"end":{"line":80,"column":5}},"59":{"start":{"line":71,"column":26},"end":{"line":71,"column":92}},"60":{"start":{"line":71,"column":66},"end":{"line":71,"column":91}},"61":{"start":{"line":72,"column":8},"end":{"line":79,"column":9}},"62":{"start":{"line":73,"column":12},"end":{"line":78,"column":13}},"63":{"start":{"line":74,"column":16},"end":{"line":77,"column":17}},"64":{"start":{"line":75,"column":44},"end":{"line":75,"column":74}},"65":{"start":{"line":76,"column":20},"end":{"line":76,"column":48}},"66":{"start":{"line":81,"column":4},"end":{"line":81,"column":36}},"67":{"start":{"line":84,"column":27},"end":{"line":84,"column":54}},"68":{"start":{"line":85,"column":16},"end":{"line":85,"column":96}},"69":{"start":{"line":86,"column":4},"end":{"line":106,"column":7}},"70":{"start":{"line":87,"column":8},"end":{"line":105,"column":11}},"71":{"start":{"line":89,"column":23},"end":{"line":89,"column":25}},"72":{"start":{"line":90,"column":12},"end":{"line":92,"column":15}},"73":{"start":{"line":91,"column":16},"end":{"line":91,"column":30}},"74":{"start":{"line":93,"column":12},"end":{"line":101,"column":15}},"75":{"start":{"line":94,"column":16},"end":{"line":100,"column":17}},"76":{"start":{"line":95,"column":40},"end":{"line":95,"column":56}},"77":{"start":{"line":96,"column":20},"end":{"line":96,"column":41}},"78":{"start":{"line":99,"column":20},"end":{"line":99,"column":34}},"79":{"start":{"line":104,"column":12},"end":{"line":104,"column":24}},"80":{"start":{"line":109,"column":27},"end":{"line":109,"column":87}},"81":{"start":{"line":110,"column":25},"end":{"line":110,"column":87}},"82":{"start":{"line":111,"column":30},"end":{"line":111,"column":93}},"83":{"start":{"line":112,"column":25},"end":{"line":112,"column":83}},"84":{"start":{"line":113,"column":25},"end":{"line":113,"column":87}},"85":{"start":{"line":114,"column":21},"end":{"line":114,"column":72}},"86":{"start":{"line":115,"column":26},"end":{"line":115,"column":70}},"87":{"start":{"line":116,"column":21},"end":{"line":116,"column":60}},"88":{"start":{"line":117,"column":25},"end":{"line":117,"column":58}},"89":{"start":{"line":118,"column":17},"end":{"line":118,"column":80}},"90":{"start":{"line":119,"column":4},"end":{"line":140,"column":5}},"91":{"start":{"line":120,"column":28},"end":{"line":120,"column":76}},"92":{"start":{"line":121,"column":8},"end":{"line":123,"column":9}},"93":{"start":{"line":122,"column":12},"end":{"line":122,"column":37}},"94":{"start":{"line":124,"column":8},"end":{"line":136,"column":10}},"95":{"start":{"line":139,"column":8},"end":{"line":139,"column":37}},"96":{"start":{"line":143,"column":23},"end":{"line":143,"column":89}},"97":{"start":{"line":143,"column":66},"end":{"line":143,"column":88}},"98":{"start":{"line":144,"column":4},"end":{"line":144,"column":59}},"99":{"start":{"line":147,"column":4},"end":{"line":153,"column":5}},"100":{"start":{"line":148,"column":8},"end":{"line":152,"column":9}},"101":{"start":{"line":149,"column":12},"end":{"line":151,"column":13}},"102":{"start":{"line":150,"column":16},"end":{"line":150,"column":28}},"103":{"start":{"line":154,"column":4},"end":{"line":161,"column":5}},"104":{"start":{"line":155,"column":8},"end":{"line":160,"column":9}},"105":{"start":{"line":156,"column":26},"end":{"line":156,"column":66}},"106":{"start":{"line":157,"column":12},"end":{"line":159,"column":13}},"107":{"start":{"line":158,"column":16},"end":{"line":158,"column":29}},"108":{"start":{"line":162,"column":4},"end":{"line":162,"column":16}},"109":{"start":{"line":164,"column":0},"end":{"line":164,"column":56}},"110":{"start":{"line":166,"column":4},"end":{"line":166,"column":72}},"111":{"start":{"line":169,"column":23},"end":{"line":169,"column":91}},"112":{"start":{"line":169,"column":68},"end":{"line":169,"column":90}},"113":{"start":{"line":170,"column":4},"end":{"line":170,"column":82}},"114":{"start":{"line":170,"column":45},"end":{"line":170,"column":65}},"115":{"start":{"line":173,"column":23},"end":{"line":173,"column":87}},"116":{"start":{"line":173,"column":64},"end":{"line":173,"column":86}},"117":{"start":{"line":174,"column":4},"end":{"line":174,"column":82}},"118":{"start":{"line":174,"column":45},"end":{"line":174,"column":65}},"119":{"start":{"line":177,"column":23},"end":{"line":177,"column":91}},"120":{"start":{"line":177,"column":68},"end":{"line":177,"column":90}},"121":{"start":{"line":178,"column":4},"end":{"line":178,"column":59}},"122":{"start":{"line":181,"column":29},"end":{"line":181,"column":91}},"123":{"start":{"line":182,"column":29},"end":{"line":182,"column":77}},"124":{"start":{"line":183,"column":32},"end":{"line":183,"column":97}},"125":{"start":{"line":184,"column":25},"end":{"line":184,"column":78}},"126":{"start":{"line":185,"column":25},"end":{"line":185,"column":62}},"127":{"start":{"line":186,"column":28},"end":{"line":186,"column":84}},"128":{"start":{"line":187,"column":24},"end":{"line":187,"column":60}},"129":{"start":{"line":188,"column":4},"end":{"line":195,"column":15}},"130":{"start":{"line":198,"column":21},"end":{"line":198,"column":46}},"131":{"start":{"line":199,"column":22},"end":{"line":199,"column":24}},"132":{"start":{"line":200,"column":22},"end":{"line":200,"column":44}},"133":{"start":{"line":201,"column":4},"end":{"line":213,"column":5}},"134":{"start":{"line":202,"column":26},"end":{"line":202,"column":88}},"135":{"start":{"line":202,"column":62},"end":{"line":202,"column":87}},"136":{"start":{"line":203,"column":8},"end":{"line":212,"column":9}},"137":{"start":{"line":204,"column":12},"end":{"line":211,"column":15}},"138":{"start":{"line":205,"column":16},"end":{"line":210,"column":17}},"139":{"start":{"line":206,"column":41},"end":{"line":206,"column":65}},"140":{"start":{"line":207,"column":20},"end":{"line":209,"column":21}},"141":{"start":{"line":208,"column":24},"end":{"line":208,"column":53}},"142":{"start":{"line":214,"column":4},"end":{"line":214,"column":21}},"143":{"start":{"line":216,"column":0},"end":{"line":216,"column":62}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":25,"column":56},"end":{"line":25,"column":57}},"loc":{"start":{"line":25,"column":71},"end":{"line":27,"column":1}},"line":25},"7":{"name":"parseRoomsZipFile","decl":{"start":{"line":33,"column":15},"end":{"line":33,"column":32}},"loc":{"start":{"line":33,"column":45},"end":{"line":64,"column":1}},"line":33},"8":{"name":"(anonymous_8)","decl":{"start":{"line":45,"column":35},"end":{"line":45,"column":36}},"loc":{"start":{"line":45,"column":55},"end":{"line":58,"column":5}},"line":45},"9":{"name":"parseRoomDataFromHtml","decl":{"start":{"line":66,"column":15},"end":{"line":66,"column":36}},"loc":{"start":{"line":66,"column":60},"end":{"line":82,"column":1}},"line":66},"10":{"name":"(anonymous_10)","decl":{"start":{"line":71,"column":56},"end":{"line":71,"column":57}},"loc":{"start":{"line":71,"column":66},"end":{"line":71,"column":91}},"line":71},"11":{"name":"fetchGeolocation","decl":{"start":{"line":83,"column":15},"end":{"line":83,"column":31}},"loc":{"start":{"line":83,"column":41},"end":{"line":107,"column":1}},"line":83},"12":{"name":"(anonymous_12)","decl":{"start":{"line":86,"column":23},"end":{"line":86,"column":24}},"loc":{"start":{"line":86,"column":44},"end":{"line":106,"column":5}},"line":86},"13":{"name":"(anonymous_13)","decl":{"start":{"line":88,"column":22},"end":{"line":88,"column":23}},"loc":{"start":{"line":88,"column":32},"end":{"line":102,"column":9}},"line":88},"14":{"name":"(anonymous_14)","decl":{"start":{"line":90,"column":28},"end":{"line":90,"column":29}},"loc":{"start":{"line":90,"column":39},"end":{"line":92,"column":13}},"line":90},"15":{"name":"(anonymous_15)","decl":{"start":{"line":93,"column":27},"end":{"line":93,"column":28}},"loc":{"start":{"line":93,"column":33},"end":{"line":101,"column":13}},"line":93},"16":{"name":"(anonymous_16)","decl":{"start":{"line":103,"column":25},"end":{"line":103,"column":26}},"loc":{"start":{"line":103,"column":34},"end":{"line":105,"column":9}},"line":103},"17":{"name":"extractRoomData","decl":{"start":{"line":108,"column":15},"end":{"line":108,"column":30}},"loc":{"start":{"line":108,"column":46},"end":{"line":141,"column":1}},"line":108},"18":{"name":"extractRoomNumber","decl":{"start":{"line":142,"column":9},"end":{"line":142,"column":26}},"loc":{"start":{"line":142,"column":43},"end":{"line":145,"column":1}},"line":142},"19":{"name":"(anonymous_19)","decl":{"start":{"line":143,"column":55},"end":{"line":143,"column":56}},"loc":{"start":{"line":143,"column":66},"end":{"line":143,"column":88}},"line":143},"20":{"name":"findElementByClassName","decl":{"start":{"line":146,"column":9},"end":{"line":146,"column":31}},"loc":{"start":{"line":146,"column":49},"end":{"line":163,"column":1}},"line":146},"21":{"name":"getTableNode","decl":{"start":{"line":165,"column":9},"end":{"line":165,"column":21}},"loc":{"start":{"line":165,"column":32},"end":{"line":167,"column":1}},"line":165},"22":{"name":"extractDetailsLink","decl":{"start":{"line":168,"column":9},"end":{"line":168,"column":27}},"loc":{"start":{"line":168,"column":46},"end":{"line":171,"column":1}},"line":168},"23":{"name":"(anonymous_23)","decl":{"start":{"line":169,"column":57},"end":{"line":169,"column":58}},"loc":{"start":{"line":169,"column":68},"end":{"line":169,"column":90}},"line":169},"24":{"name":"(anonymous_24)","decl":{"start":{"line":170,"column":35},"end":{"line":170,"column":36}},"loc":{"start":{"line":170,"column":45},"end":{"line":170,"column":65}},"line":170},"25":{"name":"extractMoreInfoLink","decl":{"start":{"line":172,"column":9},"end":{"line":172,"column":28}},"loc":{"start":{"line":172,"column":43},"end":{"line":175,"column":1}},"line":172},"26":{"name":"(anonymous_26)","decl":{"start":{"line":173,"column":53},"end":{"line":173,"column":54}},"loc":{"start":{"line":173,"column":64},"end":{"line":173,"column":86}},"line":173},"27":{"name":"(anonymous_27)","decl":{"start":{"line":174,"column":35},"end":{"line":174,"column":36}},"loc":{"start":{"line":174,"column":45},"end":{"line":174,"column":65}},"line":174},"28":{"name":"extractBuildingName","decl":{"start":{"line":176,"column":9},"end":{"line":176,"column":28}},"loc":{"start":{"line":176,"column":47},"end":{"line":179,"column":1}},"line":176},"29":{"name":"(anonymous_29)","decl":{"start":{"line":177,"column":57},"end":{"line":177,"column":58}},"loc":{"start":{"line":177,"column":68},"end":{"line":177,"column":90}},"line":177},"30":{"name":"extractBuildingData","decl":{"start":{"line":180,"column":9},"end":{"line":180,"column":28}},"loc":{"start":{"line":180,"column":34},"end":{"line":196,"column":1}},"line":180},"31":{"name":"parseBuildingDataFromHtml","decl":{"start":{"line":197,"column":9},"end":{"line":197,"column":34}},"loc":{"start":{"line":197,"column":48},"end":{"line":215,"column":1}},"line":197},"32":{"name":"(anonymous_32)","decl":{"start":{"line":202,"column":52},"end":{"line":202,"column":53}},"loc":{"start":{"line":202,"column":62},"end":{"line":202,"column":87}},"line":202},"33":{"name":"(anonymous_33)","decl":{"start":{"line":204,"column":41},"end":{"line":204,"column":42}},"loc":{"start":{"line":204,"column":50},"end":{"line":211,"column":13}},"line":204}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":27}},{"start":{"line":25,"column":31},"end":{"line":25,"column":51}},{"start":{"line":25,"column":56},"end":{"line":27,"column":1}}],"line":25},"17":{"loc":{"start":{"line":26,"column":11},"end":{"line":26,"column":61}},"type":"cond-expr","locations":[{"start":{"line":26,"column":37},"end":{"line":26,"column":40}},{"start":{"line":26,"column":43},"end":{"line":26,"column":61}}],"line":26},"18":{"loc":{"start":{"line":26,"column":12},"end":{"line":26,"column":33}},"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":15}},{"start":{"line":26,"column":19},"end":{"line":26,"column":33}}],"line":26},"19":{"loc":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},{"start":{"line":37,"column":4},"end":{"line":39,"column":5}}],"line":37},"20":{"loc":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},{"start":{"line":42,"column":4},"end":{"line":44,"column":5}}],"line":42},"21":{"loc":{"start":{"line":46,"column":8},"end":{"line":57,"column":9}},"type":"if","locations":[{"start":{"line":46,"column":8},"end":{"line":57,"column":9}},{"start":{"line":46,"column":8},"end":{"line":57,"column":9}}],"line":46},"22":{"loc":{"start":{"line":50,"column":12},"end":{"line":56,"column":13}},"type":"if","locations":[{"start":{"line":50,"column":12},"end":{"line":56,"column":13}},{"start":{"line":50,"column":12},"end":{"line":56,"column":13}}],"line":50},"23":{"loc":{"start":{"line":53,"column":16},"end":{"line":55,"column":17}},"type":"if","locations":[{"start":{"line":53,"column":16},"end":{"line":55,"column":17}},{"start":{"line":53,"column":16},"end":{"line":55,"column":17}}],"line":53},"24":{"loc":{"start":{"line":60,"column":4},"end":{"line":62,"column":5}},"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":62,"column":5}},{"start":{"line":60,"column":4},"end":{"line":62,"column":5}}],"line":60},"25":{"loc":{"start":{"line":70,"column":4},"end":{"line":80,"column":5}},"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":80,"column":5}},{"start":{"line":70,"column":4},"end":{"line":80,"column":5}}],"line":70},"26":{"loc":{"start":{"line":72,"column":8},"end":{"line":79,"column":9}},"type":"if","locations":[{"start":{"line":72,"column":8},"end":{"line":79,"column":9}},{"start":{"line":72,"column":8},"end":{"line":79,"column":9}}],"line":72},"27":{"loc":{"start":{"line":74,"column":16},"end":{"line":77,"column":17}},"type":"if","locations":[{"start":{"line":74,"column":16},"end":{"line":77,"column":17}},{"start":{"line":74,"column":16},"end":{"line":77,"column":17}}],"line":74},"28":{"loc":{"start":{"line":121,"column":8},"end":{"line":123,"column":9}},"type":"if","locations":[{"start":{"line":121,"column":8},"end":{"line":123,"column":9}},{"start":{"line":121,"column":8},"end":{"line":123,"column":9}}],"line":121},"29":{"loc":{"start":{"line":144,"column":11},"end":{"line":144,"column":58}},"type":"binary-expr","locations":[{"start":{"line":144,"column":11},"end":{"line":144,"column":50}},{"start":{"line":144,"column":54},"end":{"line":144,"column":58}}],"line":144},"30":{"loc":{"start":{"line":147,"column":4},"end":{"line":153,"column":5}},"type":"if","locations":[{"start":{"line":147,"column":4},"end":{"line":153,"column":5}},{"start":{"line":147,"column":4},"end":{"line":153,"column":5}}],"line":147},"31":{"loc":{"start":{"line":149,"column":12},"end":{"line":151,"column":13}},"type":"if","locations":[{"start":{"line":149,"column":12},"end":{"line":151,"column":13}},{"start":{"line":149,"column":12},"end":{"line":151,"column":13}}],"line":149},"32":{"loc":{"start":{"line":149,"column":16},"end":{"line":149,"column":71}},"type":"binary-expr","locations":[{"start":{"line":149,"column":16},"end":{"line":149,"column":37}},{"start":{"line":149,"column":41},"end":{"line":149,"column":71}}],"line":149},"33":{"loc":{"start":{"line":154,"column":4},"end":{"line":161,"column":5}},"type":"if","locations":[{"start":{"line":154,"column":4},"end":{"line":161,"column":5}},{"start":{"line":154,"column":4},"end":{"line":161,"column":5}}],"line":154},"34":{"loc":{"start":{"line":157,"column":12},"end":{"line":159,"column":13}},"type":"if","locations":[{"start":{"line":157,"column":12},"end":{"line":159,"column":13}},{"start":{"line":157,"column":12},"end":{"line":159,"column":13}}],"line":157},"35":{"loc":{"start":{"line":170,"column":11},"end":{"line":170,"column":81}},"type":"binary-expr","locations":[{"start":{"line":170,"column":11},"end":{"line":170,"column":73}},{"start":{"line":170,"column":77},"end":{"line":170,"column":81}}],"line":170},"36":{"loc":{"start":{"line":174,"column":11},"end":{"line":174,"column":81}},"type":"binary-expr","locations":[{"start":{"line":174,"column":11},"end":{"line":174,"column":73}},{"start":{"line":174,"column":77},"end":{"line":174,"column":81}}],"line":174},"37":{"loc":{"start":{"line":178,"column":11},"end":{"line":178,"column":58}},"type":"binary-expr","locations":[{"start":{"line":178,"column":11},"end":{"line":178,"column":50}},{"start":{"line":178,"column":54},"end":{"line":178,"column":58}}],"line":178},"38":{"loc":{"start":{"line":184,"column":25},"end":{"line":184,"column":78}},"type":"binary-expr","locations":[{"start":{"line":184,"column":25},"end":{"line":184,"column":70}},{"start":{"line":184,"column":74},"end":{"line":184,"column":78}}],"line":184},"39":{"loc":{"start":{"line":186,"column":28},"end":{"line":186,"column":84}},"type":"binary-expr","locations":[{"start":{"line":186,"column":28},"end":{"line":186,"column":76}},{"start":{"line":186,"column":80},"end":{"line":186,"column":84}}],"line":186},"40":{"loc":{"start":{"line":188,"column":11},"end":{"line":195,"column":14}},"type":"cond-expr","locations":[{"start":{"line":189,"column":10},"end":{"line":194,"column":9}},{"start":{"line":195,"column":10},"end":{"line":195,"column":14}}],"line":188},"41":{"loc":{"start":{"line":188,"column":11},"end":{"line":188,"column":58}},"type":"binary-expr","locations":[{"start":{"line":188,"column":11},"end":{"line":188,"column":23}},{"start":{"line":188,"column":27},"end":{"line":188,"column":39}},{"start":{"line":188,"column":43},"end":{"line":188,"column":58}}],"line":188},"42":{"loc":{"start":{"line":201,"column":4},"end":{"line":213,"column":5}},"type":"if","locations":[{"start":{"line":201,"column":4},"end":{"line":213,"column":5}},{"start":{"line":201,"column":4},"end":{"line":213,"column":5}}],"line":201},"43":{"loc":{"start":{"line":203,"column":8},"end":{"line":212,"column":9}},"type":"if","locations":[{"start":{"line":203,"column":8},"end":{"line":212,"column":9}},{"start":{"line":203,"column":8},"end":{"line":212,"column":9}}],"line":203},"44":{"loc":{"start":{"line":205,"column":16},"end":{"line":210,"column":17}},"type":"if","locations":[{"start":{"line":205,"column":16},"end":{"line":210,"column":17}},{"start":{"line":205,"column":16},"end":{"line":210,"column":17}}],"line":205},"45":{"loc":{"start":{"line":207,"column":20},"end":{"line":209,"column":21}},"type":"if","locations":[{"start":{"line":207,"column":20},"end":{"line":209,"column":21}},{"start":{"line":207,"column":20},"end":{"line":209,"column":21}}],"line":207}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":1,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":7,"32":7,"33":7,"34":7,"35":3,"36":4,"37":4,"38":4,"39":0,"40":4,"41":296,"42":296,"43":296,"44":296,"45":296,"46":296,"47":296,"48":296,"49":176,"50":4,"51":4,"52":0,"53":4,"54":1,"55":296,"56":296,"57":296,"58":296,"59":176,"60":704,"61":176,"62":176,"63":3088,"64":1456,"65":1456,"66":296,"67":1456,"68":1456,"69":1456,"70":1456,"71":1456,"72":1456,"73":1456,"74":1456,"75":1456,"76":1456,"77":1456,"78":0,"79":0,"80":1456,"81":1456,"82":1456,"83":1456,"84":1456,"85":1456,"86":1456,"87":1456,"88":1456,"89":1456,"90":1456,"91":1456,"92":1456,"93":0,"94":1456,"95":0,"96":2912,"97":5824,"98":2912,"99":478460,"100":237956,"101":299148,"102":8348,"103":470112,"104":229908,"105":469992,"106":469992,"107":10140,"108":459972,"109":1,"110":4,"111":296,"112":592,"113":296,"114":296,"115":1456,"116":2912,"117":1456,"118":1456,"119":296,"120":592,"121":296,"122":296,"123":296,"124":296,"125":296,"126":296,"127":296,"128":296,"129":296,"130":4,"131":4,"132":4,"133":4,"134":4,"135":16,"136":4,"137":4,"138":596,"139":296,"140":296,"141":296,"142":4,"143":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":1,"6":1,"7":7,"8":296,"9":296,"10":704,"11":1456,"12":1456,"13":1456,"14":1456,"15":1456,"16":0,"17":1456,"18":2912,"19":5824,"20":478460,"21":4,"22":296,"23":592,"24":296,"25":1456,"26":2912,"27":1456,"28":296,"29":592,"30":296,"31":4,"32":16,"33":596},"b":{"0":[1,1,1],"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[1,0],"12":[1,1],"13":[0,0],"14":[0,0],"15":[0,0],"16":[1,1,1],"17":[0,1],"18":[1,1],"19":[3,4],"20":[0,4],"21":[296,0],"22":[296,0],"23":[176,120],"24":[0,4],"25":[176,120],"26":[176,0],"27":[1456,1632],"28":[0,1456],"29":[2912,0],"30":[237956,240504],"31":[8348,290800],"32":[299148,156656],"33":[229908,240204],"34":[10140,459852],"35":[296,0],"36":[1456,0],"37":[296,0],"38":[296,0],"39":[296,0],"40":[296,0],"41":[296,0,0],"42":[4,0],"43":[4,0],"44":[296,300],"45":[296,0]},"inputSourceMap":{"version":3,"file":"/Users/tarunn/project_team222/src/controller/RoomsAddHelpers.ts","sources":["/Users/tarunn/project_team222/src/controller/RoomsAddHelpers.ts"],"names":[],"mappings":"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","sourcesContent":["import JSZip from \"jszip\";\nimport { InsightError } from \"./IInsightFacade\";\nimport * as parse5 from \"parse5\";\nimport http from \"http\";\n\n// Function to parse rooms dataset\nexport async function parseRoomsZipFile(zipContent: JSZip): Promise<Map<string, any>> {\n\tconst fileMap = new Map<string, any>();\n\tconst indexFilePath = \"index.htm\";\n\tconst indexFile = zipContent.files[indexFilePath];\n\n\tif (!indexFile) {\n\t\tthrow new InsightError(\"Missing index.htm file in the zip!\");\n\t}\n\n\tconst indexContent = await indexFile.async(\"string\");\n\tconst buildings = parseBuildingDataFromHtml(indexContent);\n\n\tif (buildings.length === 0) {\n\t\tthrow new InsightError(\"No valid buildings found in index.htm!\");\n\t}\n\n\tconst promises: Promise<void>[] = buildings.map(async (building) => {\n\t\tif (building.detailsLink) {\n\t\t\tconst two = 2;\n\t\t\t//Accessing the building files\n\t\t\tconst res = `${building.detailsLink.substring(two).trim()}`;\n\t\t\tconst buildingFile = zipContent.files[res];\n\n\t\t\tif (buildingFile) {\n\t\t\t\tconst buildingContent = await buildingFile.async(\"string\");\n\t\t\t\tconst rooms = await parseRoomDataFromHtml(buildingContent, building);\n\n\t\t\t\t//Doing this to maintain fileMap structure\n\t\t\t\tif (rooms.length > 0) {\n\t\t\t\t\tfileMap.set(building.buildingCode, rooms);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tawait Promise.all(promises);\n\n\tif (fileMap.size === 0) {\n\t\tthrow new InsightError(\"No valid rooms found in dataset!\");\n\t}\n\treturn fileMap;\n}\n\n// Parse room data from HTML, using the building information\nasync function parseRoomDataFromHtml(htmlContent: string, building: any): Promise<any[]> {\n\tconst document = parse5.parse(htmlContent);\n\tconst rooms: Promise<any | null>[] = [];\n\t//Finding Room table in the HTML file\n\tconst roomTableNode = findElementByClassName(document, \"views-table cols-5 table\");\n\n\tif (roomTableNode) {\n\t\tconst tbodyNode = roomTableNode.childNodes.find((node: any) => node.nodeName === \"tbody\");\n\t\tif (tbodyNode) {\n\t\t\tfor (const row of tbodyNode.childNodes) {\n\t\t\t\tif (row.nodeName === \"tr\") {\n\t\t\t\t\tconst roomDataPromise = extractRoomData(row, building);\n\t\t\t\t\trooms.push(roomDataPromise);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn await Promise.all(rooms);\n}\n\n// Fetch geolocation data\nasync function fetchGeolocation(address: string): Promise<{ lat?: number; lon?: number; error?: string }> {\n\tconst encodedAddress = encodeURIComponent(address);\n\tconst url = `http://cs310.students.cs.ubc.ca:11316/api/v1/project_team222/${encodedAddress}`;\n\n\treturn new Promise((resolve, reject) => {\n\t\thttp\n\t\t\t.get(url, (resp) => {\n\t\t\t\tlet data = \"\";\n\t\t\t\t//ChatGPT help to understand how data is received\n\t\t\t\tresp.on(\"data\", (chunk) => {\n\t\t\t\t\tdata += chunk;\n\t\t\t\t});\n\t\t\t\tresp.on(\"end\", () => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst geoResponse = JSON.parse(data);\n\t\t\t\t\t\tresolve(geoResponse);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t})\n\t\t\t.on(\"error\", (err) => {\n\t\t\t\treject(err);\n\t\t\t});\n\t});\n}\n\n// Extract relevant room data for each room\nasync function extractRoomData(row: any, building: any): Promise<any | null> {\n\tconst roomNumberNode = findElementByClassName(row, \"views-field-field-room-number\");\n\tconst capacityNode = findElementByClassName(row, \"views-field-field-room-capacity\");\n\tconst furnitureTypeNode = findElementByClassName(row, \"views-field-field-room-furniture\");\n\tconst roomTypeNode = findElementByClassName(row, \"views-field-field-room-type\");\n\tconst roomInfoNode = findElementByClassName(row, \"views-field views-field-nothing\");\n\n\tconst capacity = parseFloat(capacityNode.childNodes[0].value.trim());\n\tconst furnitureType = furnitureTypeNode.childNodes[0].value.trim();\n\tconst roomType = roomTypeNode.childNodes[0].value.trim();\n\tconst roomInfoLink = extractMoreInfoLink(roomInfoNode);\n\tconst name = building.buildingCode + \"_\" + extractRoomNumber(roomNumberNode);\n\ttry {\n\t\t// geolocation data\n\t\tconst geoResponse = await fetchGeolocation(building.buildingAddress);\n\n\t\tif (geoResponse.error) {\n\t\t\treturn geoResponse.error;\n\t\t}\n\n\t\treturn {\n\t\t\tfullname: building.buildingName, // Full building name\n\t\t\tshortname: building.buildingCode, // Short building name\n\t\t\tnumber: extractRoomNumber(roomNumberNode), // Room number\n\t\t\tname: name, // Room ID (shortname + room number)\n\t\t\taddress: building.buildingAddress, // Building address\n\t\t\tlat: geoResponse.lat, // Latitude\n\t\t\tlon: geoResponse.lon, // Longitude\n\t\t\tseats: capacity, // Room capacity (number of seats)\n\t\t\ttype: roomType, // Room type\n\t\t\tfurniture: furnitureType, // Room furniture\n\t\t\thref: roomInfoLink, // Full details link\n\t\t};\n\t} catch (error) {\n\t\treturn Promise.reject(error);\n\t}\n}\n\n// Extract Room number from <a> tag\nfunction extractRoomNumber(roomNumberNode: any): string | null {\n\tconst anchorNode = roomNumberNode?.childNodes.find((child: any) => child.nodeName === \"a\");\n\treturn anchorNode?.childNodes[0]?.value.trim() || null;\n}\n\n// Helper function to find elements by class name\nexport function findElementByClassName(node: any, className: string): any {\n\tif (node.attrs) {\n\t\tfor (const attr of node.attrs) {\n\t\t\tif (attr.name === \"class\" && attr.value.includes(className)) {\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t}\n\tif (node.childNodes) {\n\t\tfor (const child of node.childNodes) {\n\t\t\tconst found = findElementByClassName(child, className);\n\t\t\tif (found) {\n\t\t\t\treturn found;\n\t\t\t}\n\t\t}\n\t}\n\treturn null;\n}\n\n// Extract the table containing building data\nfunction getTableNode(document: any): any | null {\n\treturn findElementByClassName(document, \"views-table cols-5 table\");\n}\n\n// Extract the building link (detailsLink)\nfunction extractDetailsLink(buildingNameNode: any): string | null {\n\tconst anchorNode = buildingNameNode?.childNodes.find((child: any) => child.nodeName === \"a\");\n\treturn anchorNode?.attrs?.find((attr: any) => attr.name === \"href\")?.value || null;\n}\n// Extract the More Info link\nfunction extractMoreInfoLink(RoomInfoNode: any): string | null {\n\tconst anchorNode = RoomInfoNode?.childNodes.find((child: any) => child.nodeName === \"a\");\n\treturn anchorNode?.attrs?.find((attr: any) => attr.name === \"href\")?.value || null;\n}\n// Extract Building Name from <a> tag\nfunction extractBuildingName(buildingNameNode: any): string | null {\n\tconst anchorNode = buildingNameNode?.childNodes.find((child: any) => child.nodeName === \"a\");\n\treturn anchorNode?.childNodes[0]?.value.trim() || null;\n}\n\n// Extract relevant building data for each building\nfunction extractBuildingData(row: any): any | null {\n\tconst buildingCodeNode = findElementByClassName(row, \"views-field-field-building-code\");\n\tconst buildingNameNode = findElementByClassName(row, \"views-field-title\");\n\tconst buildingAddressNode = findElementByClassName(row, \"views-field-field-building-address\");\n\n\tconst buildingCode = buildingCodeNode?.childNodes[0]?.value.trim() || null;\n\tconst buildingName = extractBuildingName(buildingNameNode);\n\tconst buildingAddress = buildingAddressNode?.childNodes[0]?.value.trim() || null;\n\tconst detailsLink = extractDetailsLink(buildingNameNode);\n\n\t// We may need to change this to && depending on the requirements\n\treturn buildingCode || buildingName || buildingAddress\n\t\t? {\n\t\t\t\tbuildingCode,\n\t\t\t\tbuildingName,\n\t\t\t\tbuildingAddress,\n\t\t\t\tdetailsLink,\n\t\t  }\n\t\t: null;\n}\n\n// Parse building data from HTML\nexport function parseBuildingDataFromHtml(htmlContent: string): any[] {\n\tconst document = parse5.parse(htmlContent);\n\tconst buildings: any[] = [];\n\n\tconst tableNode = getTableNode(document);\n\n\tif (tableNode) {\n\t\tconst tbodyNode = tableNode.childNodes.find((node: any) => node.nodeName === \"tbody\");\n\t\tif (tbodyNode) {\n\t\t\ttbodyNode.childNodes.forEach((row: any) => {\n\t\t\t\tif (row.nodeName === \"tr\") {\n\t\t\t\t\tconst buildingData = extractBuildingData(row);\n\t\t\t\t\tif (buildingData) {\n\t\t\t\t\t\tbuildings.push(buildingData);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\treturn buildings;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"069494342bbd957a9c9fa810c529b396705c54bf","contentHash":"8fe5fba949fc66b4f6e27ec2e0180f8981ec976057616b68b40d6965b50c5c1c"},"/Users/tarunn/project_team222/src/controller/Query.ts":{"path":"/Users/tarunn/project_team222/src/controller/Query.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":77}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":52}},"3":{"start":{"line":5,"column":21},"end":{"line":5,"column":44}},"4":{"start":{"line":6,"column":26},"end":{"line":6,"column":54}},"5":{"start":{"line":7,"column":18},"end":{"line":7,"column":27}},"6":{"start":{"line":9,"column":17},"end":{"line":9,"column":88}},"7":{"start":{"line":9,"column":76},"end":{"line":9,"column":87}},"8":{"start":{"line":10,"column":18},"end":{"line":10,"column":22}},"9":{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},"10":{"start":{"line":12,"column":8},"end":{"line":12,"column":64}},"11":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"12":{"start":{"line":15,"column":8},"end":{"line":15,"column":67}},"13":{"start":{"line":17,"column":22},"end":{"line":17,"column":23}},"14":{"start":{"line":18,"column":4},"end":{"line":23,"column":5}},"15":{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},"16":{"start":{"line":20,"column":12},"end":{"line":20,"column":79}},"17":{"start":{"line":22,"column":8},"end":{"line":22,"column":100}},"18":{"start":{"line":24,"column":4},"end":{"line":26,"column":5}},"19":{"start":{"line":25,"column":8},"end":{"line":25,"column":74}},"20":{"start":{"line":27,"column":20},"end":{"line":27,"column":57}},"21":{"start":{"line":28,"column":20},"end":{"line":28,"column":62}},"22":{"start":{"line":29,"column":4},"end":{"line":29,"column":22}},"23":{"start":{"line":30,"column":4},"end":{"line":30,"column":41}},"24":{"start":{"line":32,"column":0},"end":{"line":32,"column":38}},"25":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"26":{"start":{"line":35,"column":8},"end":{"line":35,"column":20}},"27":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"28":{"start":{"line":38,"column":8},"end":{"line":38,"column":53}},"29":{"start":{"line":40,"column":4},"end":{"line":42,"column":5}},"30":{"start":{"line":41,"column":8},"end":{"line":41,"column":49}},"31":{"start":{"line":43,"column":4},"end":{"line":45,"column":5}},"32":{"start":{"line":44,"column":8},"end":{"line":44,"column":49}},"33":{"start":{"line":46,"column":4},"end":{"line":48,"column":5}},"34":{"start":{"line":47,"column":8},"end":{"line":47,"column":46}},"35":{"start":{"line":49,"column":4},"end":{"line":49,"column":66}},"36":{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},"37":{"start":{"line":53,"column":8},"end":{"line":53,"column":91}},"38":{"start":{"line":55,"column":19},"end":{"line":55,"column":23}},"39":{"start":{"line":56,"column":4},"end":{"line":67,"column":5}},"40":{"start":{"line":57,"column":8},"end":{"line":61,"column":9}},"41":{"start":{"line":58,"column":12},"end":{"line":60,"column":13}},"42":{"start":{"line":59,"column":16},"end":{"line":59,"column":33}},"43":{"start":{"line":62,"column":29},"end":{"line":62,"column":102}},"44":{"start":{"line":62,"column":77},"end":{"line":62,"column":100}},"45":{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},"46":{"start":{"line":64,"column":12},"end":{"line":64,"column":95}},"47":{"start":{"line":66,"column":8},"end":{"line":66,"column":20}},"48":{"start":{"line":68,"column":4},"end":{"line":79,"column":5}},"49":{"start":{"line":69,"column":8},"end":{"line":73,"column":9}},"50":{"start":{"line":70,"column":12},"end":{"line":72,"column":13}},"51":{"start":{"line":71,"column":16},"end":{"line":71,"column":33}},"52":{"start":{"line":74,"column":29},"end":{"line":74,"column":101}},"53":{"start":{"line":74,"column":76},"end":{"line":74,"column":99}},"54":{"start":{"line":75,"column":8},"end":{"line":77,"column":9}},"55":{"start":{"line":76,"column":12},"end":{"line":76,"column":95}},"56":{"start":{"line":78,"column":8},"end":{"line":78,"column":20}},"57":{"start":{"line":80,"column":4},"end":{"line":80,"column":87}},"58":{"start":{"line":83,"column":4},"end":{"line":85,"column":5}},"59":{"start":{"line":84,"column":8},"end":{"line":84,"column":87}},"60":{"start":{"line":86,"column":16},"end":{"line":86,"column":38}},"61":{"start":{"line":87,"column":4},"end":{"line":97,"column":5}},"62":{"start":{"line":88,"column":23},"end":{"line":88,"column":34}},"63":{"start":{"line":89,"column":8},"end":{"line":95,"column":9}},"64":{"start":{"line":90,"column":12},"end":{"line":94,"column":13}},"65":{"start":{"line":93,"column":16},"end":{"line":93,"column":95}},"66":{"start":{"line":96,"column":8},"end":{"line":96,"column":20}},"67":{"start":{"line":98,"column":4},"end":{"line":98,"column":83}},"68":{"start":{"line":101,"column":4},"end":{"line":109,"column":5}},"69":{"start":{"line":102,"column":8},"end":{"line":107,"column":9}},"70":{"start":{"line":106,"column":12},"end":{"line":106,"column":91}},"71":{"start":{"line":108,"column":8},"end":{"line":108,"column":20}},"72":{"start":{"line":110,"column":4},"end":{"line":110,"column":83}},"73":{"start":{"line":113,"column":4},"end":{"line":115,"column":5}},"74":{"start":{"line":114,"column":8},"end":{"line":114,"column":52}},"75":{"start":{"line":116,"column":4},"end":{"line":116,"column":80}},"76":{"start":{"line":119,"column":20},"end":{"line":119,"column":21}},"77":{"start":{"line":120,"column":4},"end":{"line":122,"column":5}},"78":{"start":{"line":121,"column":8},"end":{"line":121,"column":83}},"79":{"start":{"line":123,"column":4},"end":{"line":125,"column":5}},"80":{"start":{"line":124,"column":8},"end":{"line":124,"column":90}},"81":{"start":{"line":126,"column":30},"end":{"line":128,"column":7}},"82":{"start":{"line":127,"column":8},"end":{"line":127,"column":112}},"83":{"start":{"line":127,"column":105},"end":{"line":127,"column":110}},"84":{"start":{"line":129,"column":4},"end":{"line":133,"column":5}},"85":{"start":{"line":130,"column":8},"end":{"line":132,"column":9}},"86":{"start":{"line":131,"column":12},"end":{"line":131,"column":84}},"87":{"start":{"line":134,"column":4},"end":{"line":136,"column":5}},"88":{"start":{"line":135,"column":8},"end":{"line":135,"column":58}},"89":{"start":{"line":137,"column":4},"end":{"line":137,"column":16}},"90":{"start":{"line":140,"column":4},"end":{"line":144,"column":5}},"91":{"start":{"line":141,"column":8},"end":{"line":143,"column":9}},"92":{"start":{"line":142,"column":12},"end":{"line":142,"column":84}},"93":{"start":{"line":145,"column":4},"end":{"line":157,"column":5}},"94":{"start":{"line":146,"column":8},"end":{"line":148,"column":9}},"95":{"start":{"line":147,"column":12},"end":{"line":147,"column":82}},"96":{"start":{"line":149,"column":8},"end":{"line":151,"column":9}},"97":{"start":{"line":150,"column":12},"end":{"line":150,"column":79}},"98":{"start":{"line":152,"column":8},"end":{"line":156,"column":9}},"99":{"start":{"line":153,"column":12},"end":{"line":155,"column":13}},"100":{"start":{"line":154,"column":16},"end":{"line":154,"column":88}},"101":{"start":{"line":158,"column":4},"end":{"line":158,"column":16}},"102":{"start":{"line":161,"column":28},"end":{"line":161,"column":53}},"103":{"start":{"line":162,"column":31},"end":{"line":162,"column":67}},"104":{"start":{"line":163,"column":4},"end":{"line":172,"column":5}},"105":{"start":{"line":164,"column":8},"end":{"line":166,"column":9}},"106":{"start":{"line":165,"column":12},"end":{"line":165,"column":24}},"107":{"start":{"line":169,"column":8},"end":{"line":171,"column":9}},"108":{"start":{"line":170,"column":12},"end":{"line":170,"column":24}},"109":{"start":{"line":173,"column":4},"end":{"line":173,"column":76}},"110":{"start":{"line":175,"column":0},"end":{"line":175,"column":36}},"111":{"start":{"line":177,"column":31},"end":{"line":177,"column":72}},"112":{"start":{"line":178,"column":28},"end":{"line":178,"column":98}},"113":{"start":{"line":179,"column":4},"end":{"line":188,"column":5}},"114":{"start":{"line":180,"column":8},"end":{"line":182,"column":9}},"115":{"start":{"line":181,"column":12},"end":{"line":181,"column":24}},"116":{"start":{"line":185,"column":8},"end":{"line":187,"column":9}},"117":{"start":{"line":186,"column":12},"end":{"line":186,"column":24}},"118":{"start":{"line":189,"column":4},"end":{"line":189,"column":76}},"119":{"start":{"line":191,"column":0},"end":{"line":191,"column":36}},"120":{"start":{"line":193,"column":26},"end":{"line":193,"column":41}},"121":{"start":{"line":194,"column":4},"end":{"line":196,"column":5}},"122":{"start":{"line":195,"column":8},"end":{"line":195,"column":20}},"123":{"start":{"line":197,"column":4},"end":{"line":197,"column":83}},"124":{"start":{"line":200,"column":4},"end":{"line":202,"column":5}},"125":{"start":{"line":201,"column":8},"end":{"line":201,"column":79}},"126":{"start":{"line":203,"column":4},"end":{"line":207,"column":5}},"127":{"start":{"line":204,"column":8},"end":{"line":206,"column":9}},"128":{"start":{"line":205,"column":12},"end":{"line":205,"column":107}},"129":{"start":{"line":208,"column":28},"end":{"line":210,"column":7}},"130":{"start":{"line":209,"column":8},"end":{"line":209,"column":98}},"131":{"start":{"line":209,"column":91},"end":{"line":209,"column":96}},"132":{"start":{"line":211,"column":4},"end":{"line":215,"column":5}},"133":{"start":{"line":212,"column":8},"end":{"line":214,"column":9}},"134":{"start":{"line":213,"column":12},"end":{"line":213,"column":88}},"135":{"start":{"line":216,"column":28},"end":{"line":218,"column":7}},"136":{"start":{"line":217,"column":8},"end":{"line":217,"column":51}},"137":{"start":{"line":219,"column":4},"end":{"line":223,"column":5}},"138":{"start":{"line":220,"column":8},"end":{"line":222,"column":9}},"139":{"start":{"line":221,"column":12},"end":{"line":221,"column":96}},"140":{"start":{"line":224,"column":4},"end":{"line":224,"column":16}},"141":{"start":{"line":227,"column":4},"end":{"line":229,"column":5}},"142":{"start":{"line":228,"column":8},"end":{"line":228,"column":78}},"143":{"start":{"line":230,"column":21},"end":{"line":230,"column":41}},"144":{"start":{"line":231,"column":4},"end":{"line":233,"column":5}},"145":{"start":{"line":232,"column":8},"end":{"line":232,"column":84}},"146":{"start":{"line":234,"column":4},"end":{"line":234,"column":28}},"147":{"start":{"line":235,"column":19},"end":{"line":235,"column":41}},"148":{"start":{"line":236,"column":4},"end":{"line":236,"column":74}},"149":{"start":{"line":239,"column":28},"end":{"line":239,"column":37}},"150":{"start":{"line":240,"column":4},"end":{"line":242,"column":5}},"151":{"start":{"line":241,"column":8},"end":{"line":241,"column":77}},"152":{"start":{"line":243,"column":4},"end":{"line":243,"column":37}}},"fnMap":{"0":{"name":"validateQuery","decl":{"start":{"line":8,"column":15},"end":{"line":8,"column":28}},"loc":{"start":{"line":8,"column":36},"end":{"line":31,"column":1}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":64},"end":{"line":9,"column":65}},"loc":{"start":{"line":9,"column":76},"end":{"line":9,"column":87}},"line":9},"2":{"name":"validateBody","decl":{"start":{"line":33,"column":15},"end":{"line":33,"column":27}},"loc":{"start":{"line":33,"column":42},"end":{"line":50,"column":1}},"line":33},"3":{"name":"validateLogicComparison","decl":{"start":{"line":51,"column":15},"end":{"line":51,"column":38}},"loc":{"start":{"line":51,"column":53},"end":{"line":81,"column":1}},"line":51},"4":{"name":"(anonymous_4)","decl":{"start":{"line":62,"column":62},"end":{"line":62,"column":63}},"loc":{"start":{"line":62,"column":77},"end":{"line":62,"column":100}},"line":62},"5":{"name":"(anonymous_5)","decl":{"start":{"line":74,"column":61},"end":{"line":74,"column":62}},"loc":{"start":{"line":74,"column":76},"end":{"line":74,"column":99}},"line":74},"6":{"name":"validateMComparison","decl":{"start":{"line":82,"column":15},"end":{"line":82,"column":34}},"loc":{"start":{"line":82,"column":49},"end":{"line":99,"column":1}},"line":82},"7":{"name":"validateSComparison","decl":{"start":{"line":100,"column":15},"end":{"line":100,"column":34}},"loc":{"start":{"line":100,"column":49},"end":{"line":111,"column":1}},"line":100},"8":{"name":"validateNegation","decl":{"start":{"line":112,"column":15},"end":{"line":112,"column":31}},"loc":{"start":{"line":112,"column":46},"end":{"line":117,"column":1}},"line":112},"9":{"name":"validateOptions","decl":{"start":{"line":118,"column":15},"end":{"line":118,"column":30}},"loc":{"start":{"line":118,"column":43},"end":{"line":138,"column":1}},"line":118},"10":{"name":"(anonymous_10)","decl":{"start":{"line":126,"column":68},"end":{"line":126,"column":69}},"loc":{"start":{"line":126,"column":83},"end":{"line":128,"column":5}},"line":126},"11":{"name":"(anonymous_11)","decl":{"start":{"line":127,"column":99},"end":{"line":127,"column":100}},"loc":{"start":{"line":127,"column":105},"end":{"line":127,"column":110}},"line":127},"12":{"name":"validateSort","decl":{"start":{"line":139,"column":15},"end":{"line":139,"column":27}},"loc":{"start":{"line":139,"column":44},"end":{"line":159,"column":1}},"line":139},"13":{"name":"validateMKey","decl":{"start":{"line":160,"column":15},"end":{"line":160,"column":27}},"loc":{"start":{"line":160,"column":40},"end":{"line":174,"column":1}},"line":160},"14":{"name":"validateSKey","decl":{"start":{"line":176,"column":15},"end":{"line":176,"column":27}},"loc":{"start":{"line":176,"column":40},"end":{"line":190,"column":1}},"line":176},"15":{"name":"validateInputString","decl":{"start":{"line":192,"column":15},"end":{"line":192,"column":34}},"loc":{"start":{"line":192,"column":43},"end":{"line":198,"column":1}},"line":192},"16":{"name":"validateTransformations","decl":{"start":{"line":199,"column":15},"end":{"line":199,"column":38}},"loc":{"start":{"line":199,"column":65},"end":{"line":225,"column":1}},"line":199},"17":{"name":"(anonymous_17)","decl":{"start":{"line":208,"column":66},"end":{"line":208,"column":67}},"loc":{"start":{"line":208,"column":81},"end":{"line":210,"column":5}},"line":208},"18":{"name":"(anonymous_18)","decl":{"start":{"line":209,"column":85},"end":{"line":209,"column":86}},"loc":{"start":{"line":209,"column":91},"end":{"line":209,"column":96}},"line":209},"19":{"name":"(anonymous_19)","decl":{"start":{"line":216,"column":66},"end":{"line":216,"column":67}},"loc":{"start":{"line":216,"column":82},"end":{"line":218,"column":5}},"line":216},"20":{"name":"validateApplyRule","decl":{"start":{"line":226,"column":15},"end":{"line":226,"column":32}},"loc":{"start":{"line":226,"column":45},"end":{"line":237,"column":1}},"line":226},"21":{"name":"validateApplyKey","decl":{"start":{"line":238,"column":9},"end":{"line":238,"column":25}},"loc":{"start":{"line":238,"column":31},"end":{"line":244,"column":1}},"line":238}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},"type":"if","locations":[{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},{"start":{"line":11,"column":4},"end":{"line":13,"column":5}}],"line":11},"1":{"loc":{"start":{"line":11,"column":8},"end":{"line":11,"column":57}},"type":"binary-expr","locations":[{"start":{"line":11,"column":8},"end":{"line":11,"column":33}},{"start":{"line":11,"column":37},"end":{"line":11,"column":57}}],"line":11},"2":{"loc":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},{"start":{"line":14,"column":4},"end":{"line":16,"column":5}}],"line":14},"3":{"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":61}},"type":"binary-expr","locations":[{"start":{"line":14,"column":8},"end":{"line":14,"column":35}},{"start":{"line":14,"column":39},"end":{"line":14,"column":61}}],"line":14},"4":{"loc":{"start":{"line":18,"column":4},"end":{"line":23,"column":5}},"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":23,"column":5}},{"start":{"line":18,"column":4},"end":{"line":23,"column":5}}],"line":18},"5":{"loc":{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},{"start":{"line":19,"column":8},"end":{"line":21,"column":9}}],"line":19},"6":{"loc":{"start":{"line":19,"column":12},"end":{"line":19,"column":81}},"type":"binary-expr","locations":[{"start":{"line":19,"column":12},"end":{"line":19,"column":47}},{"start":{"line":19,"column":51},"end":{"line":19,"column":81}}],"line":19},"7":{"loc":{"start":{"line":24,"column":4},"end":{"line":26,"column":5}},"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":26,"column":5}},{"start":{"line":24,"column":4},"end":{"line":26,"column":5}}],"line":24},"8":{"loc":{"start":{"line":30,"column":11},"end":{"line":30,"column":40}},"type":"binary-expr","locations":[{"start":{"line":30,"column":11},"end":{"line":30,"column":18}},{"start":{"line":30,"column":22},"end":{"line":30,"column":29}},{"start":{"line":30,"column":33},"end":{"line":30,"column":40}}],"line":30},"9":{"loc":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},{"start":{"line":34,"column":4},"end":{"line":36,"column":5}}],"line":34},"10":{"loc":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},{"start":{"line":37,"column":4},"end":{"line":39,"column":5}}],"line":37},"11":{"loc":{"start":{"line":37,"column":8},"end":{"line":37,"column":41}},"type":"binary-expr","locations":[{"start":{"line":37,"column":8},"end":{"line":37,"column":23}},{"start":{"line":37,"column":27},"end":{"line":37,"column":41}}],"line":37},"12":{"loc":{"start":{"line":40,"column":4},"end":{"line":42,"column":5}},"type":"if","locations":[{"start":{"line":40,"column":4},"end":{"line":42,"column":5}},{"start":{"line":40,"column":4},"end":{"line":42,"column":5}}],"line":40},"13":{"loc":{"start":{"line":40,"column":8},"end":{"line":40,"column":58}},"type":"binary-expr","locations":[{"start":{"line":40,"column":8},"end":{"line":40,"column":22}},{"start":{"line":40,"column":26},"end":{"line":40,"column":40}},{"start":{"line":40,"column":44},"end":{"line":40,"column":58}}],"line":40},"14":{"loc":{"start":{"line":43,"column":4},"end":{"line":45,"column":5}},"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":45,"column":5}},{"start":{"line":43,"column":4},"end":{"line":45,"column":5}}],"line":43},"15":{"loc":{"start":{"line":46,"column":4},"end":{"line":48,"column":5}},"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":48,"column":5}},{"start":{"line":46,"column":4},"end":{"line":48,"column":5}}],"line":46},"16":{"loc":{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},{"start":{"line":52,"column":4},"end":{"line":54,"column":5}}],"line":52},"17":{"loc":{"start":{"line":56,"column":4},"end":{"line":67,"column":5}},"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":67,"column":5}},{"start":{"line":56,"column":4},"end":{"line":67,"column":5}}],"line":56},"18":{"loc":{"start":{"line":56,"column":8},"end":{"line":56,"column":47}},"type":"binary-expr","locations":[{"start":{"line":56,"column":8},"end":{"line":56,"column":18}},{"start":{"line":56,"column":22},"end":{"line":56,"column":47}}],"line":56},"19":{"loc":{"start":{"line":58,"column":12},"end":{"line":60,"column":13}},"type":"if","locations":[{"start":{"line":58,"column":12},"end":{"line":60,"column":13}},{"start":{"line":58,"column":12},"end":{"line":60,"column":13}}],"line":58},"20":{"loc":{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},"type":"if","locations":[{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},{"start":{"line":63,"column":8},"end":{"line":65,"column":9}}],"line":63},"21":{"loc":{"start":{"line":63,"column":14},"end":{"line":63,"column":78}},"type":"binary-expr","locations":[{"start":{"line":63,"column":14},"end":{"line":63,"column":35}},{"start":{"line":63,"column":39},"end":{"line":63,"column":66}},{"start":{"line":63,"column":70},"end":{"line":63,"column":78}}],"line":63},"22":{"loc":{"start":{"line":68,"column":4},"end":{"line":79,"column":5}},"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":79,"column":5}},{"start":{"line":68,"column":4},"end":{"line":79,"column":5}}],"line":68},"23":{"loc":{"start":{"line":68,"column":8},"end":{"line":68,"column":45}},"type":"binary-expr","locations":[{"start":{"line":68,"column":8},"end":{"line":68,"column":17}},{"start":{"line":68,"column":21},"end":{"line":68,"column":45}}],"line":68},"24":{"loc":{"start":{"line":70,"column":12},"end":{"line":72,"column":13}},"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":72,"column":13}},{"start":{"line":70,"column":12},"end":{"line":72,"column":13}}],"line":70},"25":{"loc":{"start":{"line":75,"column":8},"end":{"line":77,"column":9}},"type":"if","locations":[{"start":{"line":75,"column":8},"end":{"line":77,"column":9}},{"start":{"line":75,"column":8},"end":{"line":77,"column":9}}],"line":75},"26":{"loc":{"start":{"line":75,"column":14},"end":{"line":75,"column":77}},"type":"binary-expr","locations":[{"start":{"line":75,"column":14},"end":{"line":75,"column":34}},{"start":{"line":75,"column":38},"end":{"line":75,"column":65}},{"start":{"line":75,"column":69},"end":{"line":75,"column":77}}],"line":75},"27":{"loc":{"start":{"line":83,"column":4},"end":{"line":85,"column":5}},"type":"if","locations":[{"start":{"line":83,"column":4},"end":{"line":85,"column":5}},{"start":{"line":83,"column":4},"end":{"line":85,"column":5}}],"line":83},"28":{"loc":{"start":{"line":87,"column":4},"end":{"line":97,"column":5}},"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":97,"column":5}},{"start":{"line":87,"column":4},"end":{"line":97,"column":5}}],"line":87},"29":{"loc":{"start":{"line":87,"column":8},"end":{"line":87,"column":52}},"type":"binary-expr","locations":[{"start":{"line":87,"column":8},"end":{"line":87,"column":20}},{"start":{"line":87,"column":24},"end":{"line":87,"column":36}},{"start":{"line":87,"column":40},"end":{"line":87,"column":52}}],"line":87},"30":{"loc":{"start":{"line":89,"column":8},"end":{"line":95,"column":9}},"type":"if","locations":[{"start":{"line":89,"column":8},"end":{"line":95,"column":9}},{"start":{"line":89,"column":8},"end":{"line":95,"column":9}}],"line":89},"31":{"loc":{"start":{"line":90,"column":12},"end":{"line":94,"column":13}},"type":"if","locations":[{"start":{"line":90,"column":12},"end":{"line":94,"column":13}},{"start":{"line":90,"column":12},"end":{"line":94,"column":13}}],"line":90},"32":{"loc":{"start":{"line":90,"column":18},"end":{"line":92,"column":60}},"type":"binary-expr","locations":[{"start":{"line":90,"column":18},"end":{"line":90,"column":50}},{"start":{"line":91,"column":17},"end":{"line":91,"column":65}},{"start":{"line":92,"column":16},"end":{"line":92,"column":60}}],"line":90},"33":{"loc":{"start":{"line":101,"column":4},"end":{"line":109,"column":5}},"type":"if","locations":[{"start":{"line":101,"column":4},"end":{"line":109,"column":5}},{"start":{"line":101,"column":4},"end":{"line":109,"column":5}}],"line":101},"34":{"loc":{"start":{"line":101,"column":8},"end":{"line":101,"column":53}},"type":"binary-expr","locations":[{"start":{"line":101,"column":8},"end":{"line":101,"column":40}},{"start":{"line":101,"column":44},"end":{"line":101,"column":53}}],"line":101},"35":{"loc":{"start":{"line":102,"column":8},"end":{"line":107,"column":9}},"type":"if","locations":[{"start":{"line":102,"column":8},"end":{"line":107,"column":9}},{"start":{"line":102,"column":8},"end":{"line":107,"column":9}}],"line":102},"36":{"loc":{"start":{"line":102,"column":14},"end":{"line":105,"column":68}},"type":"binary-expr","locations":[{"start":{"line":102,"column":14},"end":{"line":102,"column":49}},{"start":{"line":103,"column":13},"end":{"line":103,"column":64}},{"start":{"line":104,"column":12},"end":{"line":104,"column":59}},{"start":{"line":105,"column":13},"end":{"line":105,"column":67}}],"line":102},"37":{"loc":{"start":{"line":113,"column":4},"end":{"line":115,"column":5}},"type":"if","locations":[{"start":{"line":113,"column":4},"end":{"line":115,"column":5}},{"start":{"line":113,"column":4},"end":{"line":115,"column":5}}],"line":113},"38":{"loc":{"start":{"line":113,"column":8},"end":{"line":113,"column":94}},"type":"binary-expr","locations":[{"start":{"line":113,"column":8},"end":{"line":113,"column":40}},{"start":{"line":113,"column":44},"end":{"line":113,"column":54}},{"start":{"line":113,"column":58},"end":{"line":113,"column":94}}],"line":113},"39":{"loc":{"start":{"line":120,"column":4},"end":{"line":122,"column":5}},"type":"if","locations":[{"start":{"line":120,"column":4},"end":{"line":122,"column":5}},{"start":{"line":120,"column":4},"end":{"line":122,"column":5}}],"line":120},"40":{"loc":{"start":{"line":120,"column":8},"end":{"line":120,"column":82}},"type":"binary-expr","locations":[{"start":{"line":120,"column":8},"end":{"line":120,"column":41}},{"start":{"line":120,"column":45},"end":{"line":120,"column":82}}],"line":120},"41":{"loc":{"start":{"line":123,"column":4},"end":{"line":125,"column":5}},"type":"if","locations":[{"start":{"line":123,"column":4},"end":{"line":125,"column":5}},{"start":{"line":123,"column":4},"end":{"line":125,"column":5}}],"line":123},"42":{"loc":{"start":{"line":123,"column":8},"end":{"line":123,"column":71}},"type":"binary-expr","locations":[{"start":{"line":123,"column":8},"end":{"line":123,"column":36}},{"start":{"line":123,"column":40},"end":{"line":123,"column":71}}],"line":123},"43":{"loc":{"start":{"line":130,"column":8},"end":{"line":132,"column":9}},"type":"if","locations":[{"start":{"line":130,"column":8},"end":{"line":132,"column":9}},{"start":{"line":130,"column":8},"end":{"line":132,"column":9}}],"line":130},"44":{"loc":{"start":{"line":134,"column":4},"end":{"line":136,"column":5}},"type":"if","locations":[{"start":{"line":134,"column":4},"end":{"line":136,"column":5}},{"start":{"line":134,"column":4},"end":{"line":136,"column":5}}],"line":134},"45":{"loc":{"start":{"line":140,"column":4},"end":{"line":144,"column":5}},"type":"if","locations":[{"start":{"line":140,"column":4},"end":{"line":144,"column":5}},{"start":{"line":140,"column":4},"end":{"line":144,"column":5}}],"line":140},"46":{"loc":{"start":{"line":141,"column":8},"end":{"line":143,"column":9}},"type":"if","locations":[{"start":{"line":141,"column":8},"end":{"line":143,"column":9}},{"start":{"line":141,"column":8},"end":{"line":143,"column":9}}],"line":141},"47":{"loc":{"start":{"line":145,"column":4},"end":{"line":157,"column":5}},"type":"if","locations":[{"start":{"line":145,"column":4},"end":{"line":157,"column":5}},{"start":{"line":145,"column":4},"end":{"line":157,"column":5}}],"line":145},"48":{"loc":{"start":{"line":146,"column":8},"end":{"line":148,"column":9}},"type":"if","locations":[{"start":{"line":146,"column":8},"end":{"line":148,"column":9}},{"start":{"line":146,"column":8},"end":{"line":148,"column":9}}],"line":146},"49":{"loc":{"start":{"line":146,"column":14},"end":{"line":146,"column":56}},"type":"binary-expr","locations":[{"start":{"line":146,"column":14},"end":{"line":146,"column":32}},{"start":{"line":146,"column":36},"end":{"line":146,"column":56}}],"line":146},"50":{"loc":{"start":{"line":149,"column":8},"end":{"line":151,"column":9}},"type":"if","locations":[{"start":{"line":149,"column":8},"end":{"line":151,"column":9}},{"start":{"line":149,"column":8},"end":{"line":151,"column":9}}],"line":149},"51":{"loc":{"start":{"line":153,"column":12},"end":{"line":155,"column":13}},"type":"if","locations":[{"start":{"line":153,"column":12},"end":{"line":155,"column":13}},{"start":{"line":153,"column":12},"end":{"line":155,"column":13}}],"line":153},"52":{"loc":{"start":{"line":163,"column":4},"end":{"line":172,"column":5}},"type":"if","locations":[{"start":{"line":163,"column":4},"end":{"line":172,"column":5}},{"start":{"line":163,"column":4},"end":{"line":172,"column":5}}],"line":163},"53":{"loc":{"start":{"line":164,"column":8},"end":{"line":166,"column":9}},"type":"if","locations":[{"start":{"line":164,"column":8},"end":{"line":166,"column":9}},{"start":{"line":164,"column":8},"end":{"line":166,"column":9}}],"line":164},"54":{"loc":{"start":{"line":169,"column":8},"end":{"line":171,"column":9}},"type":"if","locations":[{"start":{"line":169,"column":8},"end":{"line":171,"column":9}},{"start":{"line":169,"column":8},"end":{"line":171,"column":9}}],"line":169},"55":{"loc":{"start":{"line":179,"column":4},"end":{"line":188,"column":5}},"type":"if","locations":[{"start":{"line":179,"column":4},"end":{"line":188,"column":5}},{"start":{"line":179,"column":4},"end":{"line":188,"column":5}}],"line":179},"56":{"loc":{"start":{"line":180,"column":8},"end":{"line":182,"column":9}},"type":"if","locations":[{"start":{"line":180,"column":8},"end":{"line":182,"column":9}},{"start":{"line":180,"column":8},"end":{"line":182,"column":9}}],"line":180},"57":{"loc":{"start":{"line":185,"column":8},"end":{"line":187,"column":9}},"type":"if","locations":[{"start":{"line":185,"column":8},"end":{"line":187,"column":9}},{"start":{"line":185,"column":8},"end":{"line":187,"column":9}}],"line":185},"58":{"loc":{"start":{"line":194,"column":4},"end":{"line":196,"column":5}},"type":"if","locations":[{"start":{"line":194,"column":4},"end":{"line":196,"column":5}},{"start":{"line":194,"column":4},"end":{"line":196,"column":5}}],"line":194},"59":{"loc":{"start":{"line":200,"column":4},"end":{"line":202,"column":5}},"type":"if","locations":[{"start":{"line":200,"column":4},"end":{"line":202,"column":5}},{"start":{"line":200,"column":4},"end":{"line":202,"column":5}}],"line":200},"60":{"loc":{"start":{"line":204,"column":8},"end":{"line":206,"column":9}},"type":"if","locations":[{"start":{"line":204,"column":8},"end":{"line":206,"column":9}},{"start":{"line":204,"column":8},"end":{"line":206,"column":9}}],"line":204},"61":{"loc":{"start":{"line":204,"column":12},"end":{"line":204,"column":57}},"type":"binary-expr","locations":[{"start":{"line":204,"column":12},"end":{"line":204,"column":31}},{"start":{"line":204,"column":35},"end":{"line":204,"column":57}}],"line":204},"62":{"loc":{"start":{"line":212,"column":8},"end":{"line":214,"column":9}},"type":"if","locations":[{"start":{"line":212,"column":8},"end":{"line":214,"column":9}},{"start":{"line":212,"column":8},"end":{"line":214,"column":9}}],"line":212},"63":{"loc":{"start":{"line":220,"column":8},"end":{"line":222,"column":9}},"type":"if","locations":[{"start":{"line":220,"column":8},"end":{"line":222,"column":9}},{"start":{"line":220,"column":8},"end":{"line":222,"column":9}}],"line":220},"64":{"loc":{"start":{"line":227,"column":4},"end":{"line":229,"column":5}},"type":"if","locations":[{"start":{"line":227,"column":4},"end":{"line":229,"column":5}},{"start":{"line":227,"column":4},"end":{"line":229,"column":5}}],"line":227},"65":{"loc":{"start":{"line":231,"column":4},"end":{"line":233,"column":5}},"type":"if","locations":[{"start":{"line":231,"column":4},"end":{"line":233,"column":5}},{"start":{"line":231,"column":4},"end":{"line":233,"column":5}}],"line":231},"66":{"loc":{"start":{"line":240,"column":4},"end":{"line":242,"column":5}},"type":"if","locations":[{"start":{"line":240,"column":4},"end":{"line":242,"column":5}},{"start":{"line":240,"column":4},"end":{"line":242,"column":5}}],"line":240}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":46,"7":39,"8":39,"9":39,"10":0,"11":39,"12":0,"13":39,"14":39,"15":9,"16":0,"17":9,"18":39,"19":0,"20":39,"21":31,"22":29,"23":29,"24":1,"25":65,"26":3,"27":62,"28":10,"29":52,"30":33,"31":19,"32":11,"33":8,"34":6,"35":2,"36":10,"37":0,"38":10,"39":10,"40":5,"41":8,"42":1,"43":5,"44":8,"45":5,"46":1,"47":4,"48":5,"49":5,"50":12,"51":0,"52":5,"53":12,"54":5,"55":0,"56":5,"57":0,"58":33,"59":0,"60":33,"61":33,"62":33,"63":33,"64":33,"65":1,"66":31,"67":0,"68":11,"69":11,"70":1,"71":8,"72":0,"73":6,"74":6,"75":0,"76":31,"77":31,"78":0,"79":31,"80":0,"81":31,"82":96,"83":0,"84":31,"85":96,"86":1,"87":30,"88":8,"89":22,"90":8,"91":5,"92":1,"93":7,"94":3,"95":0,"96":3,"97":0,"98":3,"99":5,"100":0,"101":7,"102":177,"103":177,"104":177,"105":171,"106":93,"107":6,"108":3,"109":81,"110":1,"111":144,"112":144,"113":144,"114":141,"115":77,"116":3,"117":3,"118":64,"119":1,"120":9,"121":9,"122":8,"123":1,"124":9,"125":0,"126":9,"127":32,"128":0,"129":9,"130":25,"131":0,"132":9,"133":25,"134":0,"135":9,"136":12,"137":9,"138":12,"139":0,"140":9,"141":12,"142":0,"143":12,"144":12,"145":0,"146":12,"147":12,"148":12,"149":12,"150":12,"151":0,"152":12},"f":{"0":46,"1":39,"2":65,"3":10,"4":8,"5":12,"6":33,"7":11,"8":6,"9":31,"10":96,"11":0,"12":8,"13":177,"14":144,"15":9,"16":9,"17":25,"18":0,"19":12,"20":12,"21":12},"b":{"0":[0,39],"1":[39,39],"2":[0,39],"3":[39,39],"4":[9,30],"5":[0,9],"6":[9,9],"7":[0,39],"8":[29,29,29],"9":[3,62],"10":[10,52],"11":[62,57],"12":[33,19],"13":[52,45,24],"14":[11,8],"15":[6,2],"16":[0,10],"17":[5,5],"18":[10,5],"19":[1,7],"20":[1,4],"21":[5,5,5],"22":[5,0],"23":[5,5],"24":[0,12],"25":[0,5],"26":[5,5,5],"27":[0,33],"28":[33,0],"29":[33,28,21],"30":[33,0],"31":[1,31],"32":[33,33,32],"33":[11,0],"34":[11,11],"35":[1,8],"36":[11,11,10,9],"37":[6,0],"38":[6,6,6],"39":[0,31],"40":[31,31],"41":[0,31],"42":[31,31],"43":[1,95],"44":[8,22],"45":[5,3],"46":[1,4],"47":[3,4],"48":[0,3],"49":[3,1],"50":[0,3],"51":[0,5],"52":[171,6],"53":[93,78],"54":[3,3],"55":[141,3],"56":[77,64],"57":[3,0],"58":[8,1],"59":[0,9],"60":[0,32],"61":[32,32],"62":[0,25],"63":[0,12],"64":[0,12],"65":[0,12],"66":[0,12]},"inputSourceMap":{"version":3,"file":"/Users/tarunn/project_team222/src/controller/Query.ts","sources":["/Users/tarunn/project_team222/src/controller/Query.ts"],"names":[],"mappings":";;;AAAA,qDAAoE;AACpE,6CAA0C;AAC1C,uDAAwD;AAyCxD,MAAM,SAAS,GAAG,IAAI,GAAG,EAAU,CAAC;AAE7B,KAAK,UAAU,aAAa,CAAC,KAAY;IAC/C,MAAM,IAAI,GAAG,MAAM,IAAA,uBAAU,EAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACnE,IAAI,OAAO,GAAG,IAAI,CAAC;IACnB,IAAI,KAAK,CAAC,KAAK,KAAK,SAAS,IAAI,KAAK,CAAC,KAAK,KAAK,IAAI,EAAE;QACtD,MAAM,IAAI,6BAAY,CAAC,cAAc,CAAC,CAAC;KACvC;IACD,IAAI,KAAK,CAAC,OAAO,KAAK,SAAS,IAAI,KAAK,CAAC,OAAO,KAAK,IAAI,EAAE;QAC1D,MAAM,IAAI,6BAAY,CAAC,iBAAiB,CAAC,CAAC;KAC1C;IACD,MAAM,SAAS,GAAG,CAAC,CAAC;IACpB,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,KAAK,SAAS,EAAE;QAC5C,IAAI,KAAK,CAAC,eAAe,KAAK,SAAS,IAAI,KAAK,CAAC,eAAe,KAAK,IAAI,EAAE;YAC1E,MAAM,IAAI,6BAAY,CAAC,yBAAyB,CAAC,CAAC;SAClD;QACD,OAAO,GAAG,MAAM,uBAAuB,CAAC,KAAK,CAAC,eAAe,EAAE,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;KAC5F;IACD,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,SAAS,EAAE;QAC1C,MAAM,IAAI,6BAAY,CAAC,wBAAwB,CAAC,CAAC;KACjD;IAED,MAAM,OAAO,GAAG,MAAM,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IACtD,MAAM,OAAO,GAAG,MAAM,eAAe,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IAC3D,SAAS,CAAC,KAAK,EAAE,CAAC;IAElB,OAAO,OAAO,IAAI,OAAO,IAAI,OAAO,CAAC;AACtC,CAAC;AAzBD,sCAyBC;AAED,KAAK,UAAU,YAAY,CAAC,MAAc,EAAE,IAAwB;IACnE,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;QACrC,OAAO,IAAI,CAAC;KACZ;IAED,IAAI,KAAK,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,EAAE;QACtC,OAAO,uBAAuB,CAAC,MAAyB,EAAE,IAAI,CAAC,CAAC;KAChE;IACD,IAAI,IAAI,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,EAAE;QACvD,OAAO,mBAAmB,CAAC,MAAqB,EAAE,IAAI,CAAC,CAAC;KACxD;IACD,IAAI,IAAI,IAAI,MAAM,EAAE;QACnB,OAAO,mBAAmB,CAAC,MAAqB,EAAE,IAAI,CAAC,CAAC;KACxD;IACD,IAAI,KAAK,IAAI,MAAM,EAAE;QACpB,OAAO,gBAAgB,CAAC,MAAkB,EAAE,IAAI,CAAC,CAAC;KAClD;IAED,MAAM,IAAI,6BAAY,CAAC,oBAAoB,CAAC,CAAC;AAC9C,CAAC;AAED,KAAK,UAAU,uBAAuB,CAAC,MAAuB,EAAE,IAAwB;IACvF,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;QACrC,MAAM,IAAI,6BAAY,CAAC,yCAAyC,CAAC,CAAC;KAClE;IACD,IAAI,QAAQ,GAAG,IAAI,CAAC;IACpB,IAAI,MAAM,CAAC,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;QAC5C,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,GAAG,EAAE;YAC7B,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;gBAClC,QAAQ,GAAG,KAAK,CAAC;aACjB;SACD;QACD,MAAM,YAAY,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE,CAAC,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QAC/F,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,QAAQ,CAAC,EAAE;YACxE,MAAM,IAAI,6BAAY,CAAC,yCAAyC,CAAC,CAAC;SAClE;QACD,OAAO,IAAI,CAAC;KACZ;IACD,IAAI,MAAM,CAAC,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE;QAC1C,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,EAAE,EAAE;YAC5B,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;gBAClC,QAAQ,GAAG,KAAK,CAAC;aACjB;SACD;QACD,MAAM,YAAY,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE,CAAC,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9F,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,GAAG,CAAC,IAAI,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,QAAQ,CAAC,EAAE;YACvE,MAAM,IAAI,6BAAY,CAAC,yCAAyC,CAAC,CAAC;SAClE;QACD,OAAO,IAAI,CAAC;KACZ;IAED,MAAM,IAAI,6BAAY,CAAC,yCAAyC,CAAC,CAAC;AACnE,CAAC;AAED,KAAK,UAAU,mBAAmB,CAAC,MAAmB,EAAE,IAAwB;IAC/E,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;QACrC,MAAM,IAAI,6BAAY,CAAC,qCAAqC,CAAC,CAAC;KAC9D;IACD,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACnC,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,IAAI,EAAE;QACjD,MAAM,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;QAC3B,IAAI,MAAM,EAAE;YACX,IACC,CAAC,CACA,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,CAAC;gBAChC,CAAC,MAAM,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;gBAClD,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,QAAQ,CAC5C,EACA;gBACD,MAAM,IAAI,6BAAY,CAAC,qCAAqC,CAAC,CAAC;aAC9D;SACD;QACD,OAAO,IAAI,CAAC;KACZ;IACD,MAAM,IAAI,6BAAY,CAAC,qCAAqC,CAAC,CAAC;AAC/D,CAAC;AACD,KAAK,UAAU,mBAAmB,CAAC,MAAmB,EAAE,IAAwB;IAC/E,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,MAAM,CAAC,EAAE,EAAE;QAClD,IACC,CAAC,CACA,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC;YACnC,CAAC,MAAM,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;YACrD,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,QAAQ;YAC/C,CAAC,MAAM,mBAAmB,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACxD,EACA;YACD,MAAM,IAAI,6BAAY,CAAC,qCAAqC,CAAC,CAAC;SAC9D;QACD,OAAO,IAAI,CAAC;KACZ;IACD,MAAM,IAAI,6BAAY,CAAC,qCAAqC,CAAC,CAAC;AAC/D,CAAC;AAED,KAAK,UAAU,gBAAgB,CAAC,MAAgB,EAAE,IAAwB;IACzE,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;QAC3F,OAAO,MAAM,YAAY,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;KAC5C;IACD,MAAM,IAAI,6BAAY,CAAC,kCAAkC,CAAC,CAAC;AAC5D,CAAC;AAED,KAAK,UAAU,eAAe,CAAC,OAAgB,EAAE,CAAqB;IACrE,MAAM,OAAO,GAAG,CAAC,CAAC;IAClB,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,GAAG,OAAO,EAAE;QAC/E,MAAM,IAAI,6BAAY,CAAC,iCAAiC,CAAC,CAAC;KAC1D;IACD,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;QACpE,MAAM,IAAI,6BAAY,CAAC,wCAAwC,CAAC,CAAC;KACjE;IAED,MAAM,iBAAiB,GAAG,MAAM,OAAO,CAAC,GAAG,CAC1C,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE;QACjC,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,YAAY,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC;IACzG,CAAC,CAAC,CACF,CAAC;IAEF,KAAK,MAAM,MAAM,IAAI,iBAAiB,EAAE;QACvC,IAAI,CAAC,MAAM,EAAE;YACZ,MAAM,IAAI,6BAAY,CAAC,8BAA8B,CAAC,CAAC;SACvD;KACD;IACD,IAAI,OAAO,CAAC,KAAK,EAAE;QAClB,OAAO,MAAM,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;KAClD;IAED,OAAO,IAAI,CAAC;AACb,CAAC;AAED,KAAK,UAAU,YAAY,CAAC,KAAqB,EAAE,OAAgB;IAClE,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QAC9B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;YACrC,MAAM,IAAI,6BAAY,CAAC,8BAA8B,CAAC,CAAC;SACvD;KACD;IACD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QAC9B,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,KAAK,IAAI,IAAI,KAAK,CAAC,GAAG,KAAK,MAAM,CAAC,EAAE;YAClD,MAAM,IAAI,6BAAY,CAAC,4BAA4B,CAAC,CAAC;SACrD;QACD,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YAC5B,MAAM,IAAI,6BAAY,CAAC,yBAAyB,CAAC,CAAC;SAClD;QACD,KAAK,MAAM,GAAG,IAAI,KAAK,CAAC,IAAI,EAAE;YAC7B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;gBACnC,MAAM,IAAI,6BAAY,CAAC,8BAA8B,CAAC,CAAC;aACvD;SACD;KACD;IACD,OAAO,IAAI,CAAC;AACb,CAAC;AAEM,KAAK,UAAU,YAAY,CAAC,IAAY,EAAE,IAAwB;IACxE,MAAM,eAAe,GAAG,yBAAyB,CAAC;IAElD,MAAM,kBAAkB,GAAG,oCAAoC,CAAC;IAChE,IAAI,IAAI,KAAK,mCAAkB,CAAC,QAAQ,EAAE;QACzC,IAAI,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAElC,OAAO,IAAI,CAAC;SACZ;KACD;SAAM;QACN,IAAI,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAC/B,OAAO,IAAI,CAAC;SACZ;KACD;IACD,MAAM,IAAI,6BAAY,CAAC,8BAA8B,CAAC,CAAC;AACxD,CAAC;AAfD,oCAeC;AAGM,KAAK,UAAU,YAAY,CAAC,IAAY,EAAE,IAAwB;IACxE,MAAM,kBAAkB,GAAG,yCAAyC,CAAC;IACrE,MAAM,eAAe,GAAG,sEAAsE,CAAC;IAC/F,IAAI,IAAI,KAAK,mCAAkB,CAAC,QAAQ,EAAE;QACzC,IAAI,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAClC,OAAO,IAAI,CAAC;SACZ;KACD;SAAM;QACN,IAAI,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAC/B,OAAO,IAAI,CAAC;SACZ;KACD;IACD,MAAM,IAAI,6BAAY,CAAC,8BAA8B,CAAC,CAAC;AACxD,CAAC;AAbD,oCAaC;AAED,KAAK,UAAU,mBAAmB,CAAC,MAAc;IAChD,MAAM,aAAa,GAAG,eAAe,CAAC;IACtC,IAAI,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;QAC/B,OAAO,IAAI,CAAC;KACZ;IACD,MAAM,IAAI,6BAAY,CAAC,qCAAqC,CAAC,CAAC;AAC/D,CAAC;AAED,KAAK,UAAU,uBAAuB,CACrC,SAA0B,EAC1B,OAAiB,EACjB,IAAwB;IAExB,IAAI,SAAS,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;QACjC,MAAM,IAAI,6BAAY,CAAC,6BAA6B,CAAC,CAAC;KACtD;IACD,KAAK,MAAM,GAAG,IAAI,OAAO,EAAE;QAC1B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YAClD,MAAM,IAAI,6BAAY,CAAC,qDAAqD,CAAC,CAAC;SAC9E;KACD;IACD,MAAM,eAAe,GAAG,MAAM,OAAO,CAAC,GAAG,CACxC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE;QACjC,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC;IAC3F,CAAC,CAAC,CACF,CAAC;IACF,KAAK,MAAM,MAAM,IAAI,eAAe,EAAE;QACrC,IAAI,CAAC,MAAM,EAAE;YACZ,MAAM,IAAI,6BAAY,CAAC,kCAAkC,CAAC,CAAC;SAC3D;KACD;IAED,MAAM,eAAe,GAAG,MAAM,OAAO,CAAC,GAAG,CACxC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE;QAClC,OAAO,MAAM,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC5C,CAAC,CAAC,CACF,CAAC;IACF,KAAK,MAAM,MAAM,IAAI,eAAe,EAAE;QACrC,IAAI,CAAC,MAAM,EAAE;YACZ,MAAM,IAAI,6BAAY,CAAC,0CAA0C,CAAC,CAAC;SACnE;KACD;IAED,OAAO,IAAI,CAAC;AACb,CAAC;AAED,KAAK,UAAU,iBAAiB,CAAC,IAAe,EAAE,IAAwB;IACzE,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;QACnC,MAAM,IAAI,6BAAY,CAAC,4BAA4B,CAAC,CAAC;KACrD;IACD,MAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACtC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAE;QAChC,MAAM,IAAI,6BAAY,CAAC,kCAAkC,CAAC,CAAC;KAC3D;IACD,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACxB,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAEtC,OAAO,MAAM,IAAA,qCAAmB,EAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AAChD,CAAC;AAED,SAAS,gBAAgB,CAAC,GAAW;IACpC,MAAM,eAAe,GAAG,SAAS,CAAC;IAClC,IAAI,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;QACvB,MAAM,IAAI,6BAAY,CAAC,2BAA2B,CAAC,CAAC;KACpD;IACD,OAAO,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAClC,CAAC","sourcesContent":["import { InsightDatasetKind, InsightError } from \"./IInsightFacade\";\nimport { getDataset } from \"./GetResults\";\nimport { validateApplyRecord } from \"./Transformations\";\n\nexport interface Query extends Object {\n\tWHERE: Filter;\n\tOPTIONS: Options;\n\tTRANSFORMATIONS?: Transformations;\n}\nexport type Filter = LogicComparison | MComparison | SComparison | Negation | {};\n\nexport interface LogicComparison {\n\tAND?: Filter[];\n\tOR?: Filter[];\n}\nexport interface MComparison {\n\tEQ?: Record<string, number>;\n\tGT?: Record<string, number>;\n\tLT?: Record<string, number>;\n}\nexport interface SComparison {\n\tIS: Record<string, string>;\n}\nexport interface Negation {\n\tNOT: Filter;\n}\nexport interface Options {\n\tCOLUMNS: string[];\n\tORDER?: string | Order;\n}\n\nexport interface Transformations {\n\tGROUP: string[];\n\tAPPLY: ApplyRule[];\n}\n\nexport type ApplyRule = Record<string, Record<string, string>>;\n\nexport interface Order {\n\tdir: \"UP\" | \"DOWN\";\n\tkeys: string[];\n}\n\nconst applyKeys = new Set<string>();\n\nexport async function validateQuery(query: Query): Promise<boolean> {\n\tconst kind = await getDataset(query).then((result) => result.kind);\n\tlet result3 = true;\n\tif (query.WHERE === undefined || query.WHERE === null) {\n\t\tthrow new InsightError(\"Missing Body\");\n\t}\n\tif (query.OPTIONS === undefined || query.OPTIONS === null) {\n\t\tthrow new InsightError(\"Missing Options\");\n\t}\n\tconst keyNumber = 3;\n\tif (Object.keys(query).length === keyNumber) {\n\t\tif (query.TRANSFORMATIONS === undefined || query.TRANSFORMATIONS === null) {\n\t\t\tthrow new InsightError(\"Missing Transformations\");\n\t\t}\n\t\tresult3 = await validateTransformations(query.TRANSFORMATIONS, query.OPTIONS.COLUMNS, kind);\n\t}\n\tif (Object.keys(query).length > keyNumber) {\n\t\tthrow new InsightError(\"Too many keys in Query\");\n\t}\n\n\tconst result1 = await validateBody(query.WHERE, kind);\n\tconst result2 = await validateOptions(query.OPTIONS, kind);\n\tapplyKeys.clear();\n\n\treturn result1 && result2 && result3;\n}\n\nasync function validateBody(filter: object, kind: InsightDatasetKind): Promise<boolean> {\n\tif (Object.keys(filter).length === 0) {\n\t\treturn true;\n\t}\n\n\tif (\"AND\" in filter || \"OR\" in filter) {\n\t\treturn validateLogicComparison(filter as LogicComparison, kind);\n\t}\n\tif (\"LT\" in filter || \"GT\" in filter || \"EQ\" in filter) {\n\t\treturn validateMComparison(filter as MComparison, kind);\n\t}\n\tif (\"IS\" in filter) {\n\t\treturn validateSComparison(filter as SComparison, kind);\n\t}\n\tif (\"NOT\" in filter) {\n\t\treturn validateNegation(filter as Negation, kind);\n\t}\n\n\tthrow new InsightError(\"Invalid filter key\");\n}\n\nasync function validateLogicComparison(filter: LogicComparison, kind: InsightDatasetKind): Promise<boolean> {\n\tif (Object.keys(filter).length !== 1) {\n\t\tthrow new InsightError(\"LogicComparison not formatted correctly\");\n\t}\n\tlet notEmpty = true;\n\tif (filter.AND && Array.isArray(filter.AND)) {\n\t\tfor (const fil of filter.AND) {\n\t\t\tif (Object.keys(fil).length === 0) {\n\t\t\t\tnotEmpty = false;\n\t\t\t}\n\t\t}\n\t\tconst validResults = await Promise.all(filter.AND.map(async (fil) => validateBody(fil, kind)));\n\t\tif (!(filter.AND.length > 0 && validResults.every(Boolean) && notEmpty)) {\n\t\t\tthrow new InsightError(\"LogicComparison not formatted correctly\");\n\t\t}\n\t\treturn true;\n\t}\n\tif (filter.OR && Array.isArray(filter.OR)) {\n\t\tfor (const fil of filter.OR) {\n\t\t\tif (Object.keys(fil).length === 0) {\n\t\t\t\tnotEmpty = false;\n\t\t\t}\n\t\t}\n\t\tconst validResults = await Promise.all(filter.OR.map(async (fil) => validateBody(fil, kind)));\n\t\tif (!(filter.OR.length > 0 && validResults.every(Boolean) && notEmpty)) {\n\t\t\tthrow new InsightError(\"LogicComparison not formatted correctly\");\n\t\t}\n\t\treturn true;\n\t}\n\n\tthrow new InsightError(\"LogicComparison not formatted correctly\");\n}\n\nasync function validateMComparison(filter: MComparison, kind: InsightDatasetKind): Promise<boolean> {\n\tif (Object.keys(filter).length !== 1) {\n\t\tthrow new InsightError(\"MComparison not formatted correctly\");\n\t}\n\tconst key = Object.keys(filter)[0];\n\tif (key === \"EQ\" || key === \"LT\" || key === \"GT\") {\n\t\tconst record = filter[key];\n\t\tif (record) {\n\t\t\tif (\n\t\t\t\t!(\n\t\t\t\t\tObject.keys(record).length === 1 &&\n\t\t\t\t\t(await validateMKey(Object.keys(record)[0], kind)) &&\n\t\t\t\t\ttypeof Object.values(record)[0] === \"number\"\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tthrow new InsightError(\"MComparison not formatted correctly\");\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tthrow new InsightError(\"MComparison not formatted correctly\");\n}\nasync function validateSComparison(filter: SComparison, kind: InsightDatasetKind): Promise<boolean> {\n\tif (Object.keys(filter).length === 1 && filter.IS) {\n\t\tif (\n\t\t\t!(\n\t\t\t\tObject.keys(filter.IS).length === 1 &&\n\t\t\t\t(await validateSKey(Object.keys(filter.IS)[0], kind)) &&\n\t\t\t\ttypeof Object.values(filter.IS)[0] === \"string\" &&\n\t\t\t\t(await validateInputString(Object.values(filter.IS)[0]))\n\t\t\t)\n\t\t) {\n\t\t\tthrow new InsightError(\"SComparison not formatted correctly\");\n\t\t}\n\t\treturn true;\n\t}\n\tthrow new InsightError(\"SComparison not formatted correctly\");\n}\n\nasync function validateNegation(filter: Negation, kind: InsightDatasetKind): Promise<boolean> {\n\tif (Object.keys(filter).length === 1 && filter.NOT && Object.keys(filter.NOT).length !== 0) {\n\t\treturn await validateBody(filter.NOT, kind);\n\t}\n\tthrow new InsightError(\"Negation not formatted correctly\");\n}\n\nasync function validateOptions(options: Options, k: InsightDatasetKind): Promise<boolean> {\n\tconst maxKeys = 2;\n\tif (Object.keys(options).length === 0 || Object.keys(options).length > maxKeys) {\n\t\tthrow new InsightError(\"Options not formatted correctly\");\n\t}\n\tif (options.COLUMNS.length === 0 || !Array.isArray(options.COLUMNS)) {\n\t\tthrow new InsightError(\"Option COLUMNS not formatted correctly\");\n\t}\n\t// start chatGPT for help iterating with promises against linter\n\tconst validationResults = await Promise.all(\n\t\toptions.COLUMNS.map(async (key) => {\n\t\t\treturn Promise.any([validateSKey(key, k), validateMKey(key, k), applyKeys.has(key)]).catch(() => false);\n\t\t})\n\t);\n\t// end chatGPT for help iterating with promises\n\tfor (const result of validationResults) {\n\t\tif (!result) {\n\t\t\tthrow new InsightError(\"Key in COLUMNS not valid key\");\n\t\t}\n\t}\n\tif (options.ORDER) {\n\t\treturn await validateSort(options.ORDER, options);\n\t}\n\n\treturn true;\n}\n\nasync function validateSort(order: string | Order, options: Options): Promise<boolean> {\n\tif (typeof order === \"string\") {\n\t\tif (!options.COLUMNS.includes(order)) {\n\t\t\tthrow new InsightError(\"Order key must be in COLUMNS\");\n\t\t}\n\t}\n\tif (typeof order === \"object\") {\n\t\tif (!(order.dir === \"UP\" || order.dir === \"DOWN\")) {\n\t\t\tthrow new InsightError(\"Order direction is invalid\");\n\t\t}\n\t\tif (order.keys.length === 0) {\n\t\t\tthrow new InsightError(\"Order key list is empty\");\n\t\t}\n\t\tfor (const key of order.keys) {\n\t\t\tif (!options.COLUMNS.includes(key)) {\n\t\t\t\tthrow new InsightError(\"Order key must be in COLUMNS\");\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nexport async function validateMKey(mKey: string, kind: InsightDatasetKind): Promise<boolean> {\n\tconst mKeyPatternRoom = /^[^_]+_(lat|lon|seats)$/;\n\t// start chatGPT help asserting string pattern\n\tconst mKeyPatternSection = /^[^_]+_(avg|pass|fail|audit|year)$/;\n\tif (kind === InsightDatasetKind.Sections) {\n\t\tif (mKeyPatternSection.test(mKey)) {\n\t\t\t// end chatGPT help asserting string pattern\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\tif (mKeyPatternRoom.test(mKey)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\tthrow new InsightError(\"MKey not formatted correctly\");\n}\n\n// start adapted from chatGPT\nexport async function validateSKey(sKey: string, kind: InsightDatasetKind): Promise<boolean> {\n\tconst sKeyPatternSection = /^[^_]+_(dept|id|instructor|title|uuid)$/;\n\tconst sKeyPatternRoom = /^[^_]+_(fullname|shortname|number|name|address|type|furniture|href)$/;\n\tif (kind === InsightDatasetKind.Sections) {\n\t\tif (sKeyPatternSection.test(sKey)) {\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\tif (sKeyPatternRoom.test(sKey)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\tthrow new InsightError(\"SKey not formatted correctly\");\n}\n\nasync function validateInputString(string: string): Promise<boolean> {\n\tconst stringPattern = /^\\*?[^*]*\\*?$/;\n\tif (stringPattern.test(string)) {\n\t\treturn true;\n\t}\n\tthrow new InsightError(\"InputString not formatted correctly\");\n}\n\nasync function validateTransformations(\n\ttransform: Transformations,\n\tcolumns: string[],\n\tkind: InsightDatasetKind\n): Promise<boolean> {\n\tif (transform.GROUP.length === 0) {\n\t\tthrow new InsightError(\"Group cannot be empty array\");\n\t}\n\tfor (const key of columns) {\n\t\tif (!applyKeys.has(key) && !columns.includes(key)) {\n\t\t\tthrow new InsightError(\"COLUMNS keys must correspond to GROUP or Apply Keys\");\n\t\t}\n\t}\n\tconst validationGroup = await Promise.all(\n\t\ttransform.GROUP.map(async (key) => {\n\t\t\treturn Promise.any([validateSKey(key, kind), validateMKey(key, kind)]).catch(() => false);\n\t\t})\n\t);\n\tfor (const result of validationGroup) {\n\t\tif (!result) {\n\t\t\tthrow new InsightError(\"Key in GROUP is not MKey or SKey\");\n\t\t}\n\t}\n\n\tconst validationApply = await Promise.all(\n\t\ttransform.APPLY.map(async (rule) => {\n\t\t\treturn await validateApplyRule(rule, kind);\n\t\t})\n\t);\n\tfor (const result of validationApply) {\n\t\tif (!result) {\n\t\t\tthrow new InsightError(\"Rule in APPLY is not formatted correctly\");\n\t\t}\n\t}\n\n\treturn true;\n}\n\nasync function validateApplyRule(rule: ApplyRule, kind: InsightDatasetKind): Promise<boolean> {\n\tif (Object.keys(rule).length !== 1) {\n\t\tthrow new InsightError(\"Too many keys in ApplyRule\");\n\t}\n\tconst applyKey = Object.keys(rule)[0];\n\tif (!validateApplyKey(applyKey)) {\n\t\tthrow new InsightError(\"ApplyKey not formatted correctly\");\n\t}\n\tapplyKeys.add(applyKey);\n\tconst record = Object.values(rule)[0];\n\n\treturn await validateApplyRecord(record, kind);\n}\n\nfunction validateApplyKey(key: string): boolean {\n\tconst applyKeyPattern = /^[^_]+$/;\n\tif (applyKeys.has(key)) {\n\t\tthrow new InsightError(\"Apply Keys must be unique\");\n\t}\n\treturn applyKeyPattern.test(key);\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3dc31610dd0f563d444aec8e9f0f7cb0cf8351f2","contentHash":"39bd8de76c212f2cdff9119c3be91d195384b1d8e6dbd917254b9a66f01c6874"},"/Users/tarunn/project_team222/src/controller/GetResults.ts":{"path":"/Users/tarunn/project_team222/src/controller/GetResults.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"25":{"start":{"line":26,"column":4},"end":{"line":26,"column":62}},"26":{"start":{"line":28,"column":0},"end":{"line":28,"column":62}},"27":{"start":{"line":29,"column":0},"end":{"line":29,"column":49}},"28":{"start":{"line":30,"column":25},"end":{"line":30,"column":52}},"29":{"start":{"line":31,"column":15},"end":{"line":31,"column":47}},"30":{"start":{"line":32,"column":11},"end":{"line":32,"column":44}},"31":{"start":{"line":33,"column":26},"end":{"line":33,"column":54}},"32":{"start":{"line":34,"column":27},"end":{"line":34,"column":56}},"33":{"start":{"line":35,"column":26},"end":{"line":35,"column":54}},"34":{"start":{"line":36,"column":17},"end":{"line":36,"column":21}},"35":{"start":{"line":38,"column":20},"end":{"line":38,"column":43}},"36":{"start":{"line":39,"column":21},"end":{"line":39,"column":84}},"37":{"start":{"line":40,"column":18},"end":{"line":40,"column":99}},"38":{"start":{"line":41,"column":4},"end":{"line":52,"column":5}},"39":{"start":{"line":42,"column":8},"end":{"line":42,"column":115}},"40":{"start":{"line":43,"column":8},"end":{"line":51,"column":9}},"41":{"start":{"line":44,"column":29},"end":{"line":44,"column":48}},"42":{"start":{"line":45,"column":12},"end":{"line":45,"column":83}},"43":{"start":{"line":47,"column":13},"end":{"line":51,"column":9}},"44":{"start":{"line":48,"column":30},"end":{"line":48,"column":54}},"45":{"start":{"line":49,"column":24},"end":{"line":49,"column":47}},"46":{"start":{"line":50,"column":12},"end":{"line":50,"column":83}},"47":{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},"48":{"start":{"line":54,"column":8},"end":{"line":54,"column":103}},"49":{"start":{"line":56,"column":4},"end":{"line":56,"column":41}},"50":{"start":{"line":57,"column":4},"end":{"line":57,"column":19}},"51":{"start":{"line":59,"column":0},"end":{"line":59,"column":32}},"52":{"start":{"line":61,"column":4},"end":{"line":82,"column":5}},"53":{"start":{"line":63,"column":8},"end":{"line":72,"column":9}},"54":{"start":{"line":64,"column":12},"end":{"line":68,"column":16}},"55":{"start":{"line":65,"column":16},"end":{"line":67,"column":17}},"56":{"start":{"line":66,"column":20},"end":{"line":66,"column":31}},"57":{"start":{"line":71,"column":12},"end":{"line":71,"column":50}},"58":{"start":{"line":73,"column":8},"end":{"line":75,"column":9}},"59":{"start":{"line":74,"column":12},"end":{"line":74,"column":83}},"60":{"start":{"line":76,"column":19},"end":{"line":76,"column":46}},"61":{"start":{"line":77,"column":25},"end":{"line":77,"column":68}},"62":{"start":{"line":78,"column":8},"end":{"line":78,"column":43}},"63":{"start":{"line":81,"column":8},"end":{"line":81,"column":96}},"64":{"start":{"line":84,"column":0},"end":{"line":84,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":25,"column":56},"end":{"line":25,"column":57}},"loc":{"start":{"line":25,"column":71},"end":{"line":27,"column":1}},"line":25},"7":{"name":"getResults","decl":{"start":{"line":37,"column":15},"end":{"line":37,"column":25}},"loc":{"start":{"line":37,"column":33},"end":{"line":58,"column":1}},"line":37},"8":{"name":"getDataset","decl":{"start":{"line":60,"column":15},"end":{"line":60,"column":25}},"loc":{"start":{"line":60,"column":33},"end":{"line":83,"column":1}},"line":60},"9":{"name":"(anonymous_9)","decl":{"start":{"line":64,"column":75},"end":{"line":64,"column":76}},"loc":{"start":{"line":64,"column":84},"end":{"line":68,"column":13}},"line":64}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":27}},{"start":{"line":25,"column":31},"end":{"line":25,"column":51}},{"start":{"line":25,"column":56},"end":{"line":27,"column":1}}],"line":25},"17":{"loc":{"start":{"line":26,"column":11},"end":{"line":26,"column":61}},"type":"cond-expr","locations":[{"start":{"line":26,"column":37},"end":{"line":26,"column":40}},{"start":{"line":26,"column":43},"end":{"line":26,"column":61}}],"line":26},"18":{"loc":{"start":{"line":26,"column":12},"end":{"line":26,"column":33}},"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":15}},{"start":{"line":26,"column":19},"end":{"line":26,"column":33}}],"line":26},"19":{"loc":{"start":{"line":41,"column":4},"end":{"line":52,"column":5}},"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":52,"column":5}},{"start":{"line":41,"column":4},"end":{"line":52,"column":5}}],"line":41},"20":{"loc":{"start":{"line":43,"column":8},"end":{"line":51,"column":9}},"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":51,"column":9}},{"start":{"line":43,"column":8},"end":{"line":51,"column":9}}],"line":43},"21":{"loc":{"start":{"line":47,"column":13},"end":{"line":51,"column":9}},"type":"if","locations":[{"start":{"line":47,"column":13},"end":{"line":51,"column":9}},{"start":{"line":47,"column":13},"end":{"line":51,"column":9}}],"line":47},"22":{"loc":{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},{"start":{"line":53,"column":4},"end":{"line":55,"column":5}}],"line":53},"23":{"loc":{"start":{"line":63,"column":8},"end":{"line":72,"column":9}},"type":"if","locations":[{"start":{"line":63,"column":8},"end":{"line":72,"column":9}},{"start":{"line":63,"column":8},"end":{"line":72,"column":9}}],"line":63},"24":{"loc":{"start":{"line":65,"column":16},"end":{"line":67,"column":17}},"type":"if","locations":[{"start":{"line":65,"column":16},"end":{"line":67,"column":17}},{"start":{"line":65,"column":16},"end":{"line":67,"column":17}}],"line":65},"25":{"loc":{"start":{"line":73,"column":8},"end":{"line":75,"column":9}},"type":"if","locations":[{"start":{"line":73,"column":8},"end":{"line":75,"column":9}},{"start":{"line":73,"column":8},"end":{"line":75,"column":9}}],"line":73}},"s":{"0":1,"1":148,"2":148,"3":148,"4":148,"5":148,"6":70,"7":148,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":148,"21":148,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":29,"36":29,"37":29,"38":28,"39":9,"40":9,"41":0,"42":0,"43":9,"44":1,"45":1,"46":1,"47":28,"48":1,"49":27,"50":27,"51":1,"52":75,"53":75,"54":18,"55":50,"56":50,"57":57,"58":72,"59":2,"60":70,"61":70,"62":70,"63":7,"64":1},"f":{"0":148,"1":70,"2":0,"3":1,"4":0,"5":1,"6":1,"7":29,"8":75,"9":50},"b":{"0":[1,1,1],"1":[1,0],"2":[148,0],"3":[148,0],"4":[148,148],"5":[0,148],"6":[148,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[148,0],"15":[148,148],"16":[1,1,1],"17":[0,1],"18":[1,1],"19":[9,19],"20":[0,9],"21":[1,8],"22":[1,27],"23":[18,57],"24":[50,0],"25":[2,70]},"inputSourceMap":{"version":3,"file":"/Users/tarunn/project_team222/src/controller/GetResults.ts","sources":["/Users/tarunn/project_team222/src/controller/GetResults.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qDAAwG;AACxG,gDAAwB;AACxB,6CAA+B;AAE/B,uDAAkG;AAClG,yDAAiD;AACjD,uDAA0D;AAE1D,MAAM,QAAQ,GAAG,IAAI,CAAC;AAEf,KAAK,UAAU,UAAU,CAAC,KAAY;IAC5C,MAAM,OAAO,GAAG,MAAM,UAAU,CAAC,KAAK,CAAC,CAAC;IACxC,MAAM,QAAQ,GAAG,MAAM,IAAA,8BAAW,EAAC,KAAK,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IAEzD,IAAI,OAAO,GAAG,MAAM,IAAA,iCAAe,EAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IACzE,IAAI,KAAK,CAAC,eAAe,EAAE;QAC1B,OAAO,GAAG,MAAM,IAAA,uCAAqB,EAAC,KAAK,CAAC,eAAe,EAAE,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACpF,IAAI,OAAO,KAAK,CAAC,OAAO,CAAC,KAAK,KAAK,QAAQ,EAAE;YAC5C,MAAM,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;YACrC,OAAO,GAAG,IAAA,oCAAkB,EAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;SAChD;aAAM,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE;YAC/B,MAAM,SAAS,GAAI,KAAK,CAAC,OAAO,CAAC,KAAe,CAAC,IAAI,CAAC;YACtD,MAAM,GAAG,GAAI,KAAK,CAAC,OAAO,CAAC,KAAe,CAAC,GAAG,CAAC;YAC/C,OAAO,GAAG,IAAA,8BAAY,EAAC,OAAO,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC;SAChD;KACD;IAED,IAAI,OAAO,CAAC,MAAM,GAAG,QAAQ,EAAE;QAC9B,MAAM,IAAI,oCAAmB,CAAC,8BAA8B,GAAG,GAAG,QAAQ,EAAE,CAAC,CAAC;KAC9E;IAED,4BAAU,CAAC,KAAK,EAAE,CAAC;IACnB,OAAO,OAAO,CAAC;AAChB,CAAC;AAvBD,gCAuBC;AAEM,KAAK,UAAU,UAAU,CAC/B,KAAY;IAEZ,IAAI;QACH,IAAI,UAAU,CAAC;QACf,IAAI,KAAK,CAAC,eAAe,EAAE;YAC1B,UAAU,GAAG,MAAM,OAAO,CAAC,GAAG,CAC7B,KAAK,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;gBACvC,IAAI,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;oBACtB,OAAO,GAAG,CAAC;iBACX;YACF,CAAC,CAAC,CACF,CAAC;SACF;aAAM;YACN,UAAU,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SACtC;QACD,IAAI,CAAC,UAAU,EAAE;YAChB,MAAM,IAAI,6BAAY,CAAC,6BAA6B,CAAC,CAAC;SACtD;QACD,MAAM,EAAE,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAEvC,MAAM,QAAQ,GAAG,cAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;QACnD,OAAO,MAAM,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;KACnC;IAAC,MAAM;QACP,MAAM,IAAI,6BAAY,CAAC,8CAA8C,CAAC,CAAC;KACvE;AACF,CAAC;AA1BD,gCA0BC","sourcesContent":["import { InsightDatasetKind, InsightError, InsightResult, ResultTooLargeError } from \"./IInsightFacade\";\nimport path from \"path\";\nimport * as fs from \"fs-extra\";\nimport { Order, Query } from \"./Query\";\nimport { getResultObject, orderResults, orderResultsSingle, resultsMap } from \"./GetResultObject\";\nimport { getSections } from \"./GetResultHelpers\";\nimport { handleTransformations } from \"./Transformations\";\n\nconst MAX_SIZE = 5000;\n\nexport async function getResults(query: Query): Promise<InsightResult[]> {\n\tconst dataset = await getDataset(query);\n\tconst sections = await getSections(query.WHERE, dataset);\n\n\tlet objects = await getResultObject(query.OPTIONS, Array.from(sections));\n\tif (query.TRANSFORMATIONS) {\n\t\tobjects = await handleTransformations(query.TRANSFORMATIONS, query.OPTIONS.COLUMNS);\n\t\tif (typeof query.OPTIONS.ORDER === \"string\") {\n\t\t\tconst orderKey = query.OPTIONS.ORDER; // The column name to order by\n\t\t\tobjects = orderResultsSingle(objects, orderKey); // Use the helper function to order results\n\t\t} else if (query.OPTIONS.ORDER) {\n\t\t\tconst orderKeys = (query.OPTIONS.ORDER as Order).keys;\n\t\t\tconst dir = (query.OPTIONS.ORDER as Order).dir;\n\t\t\tobjects = orderResults(objects, orderKeys, dir);\n\t\t}\n\t}\n\n\tif (objects.length > MAX_SIZE) {\n\t\tthrow new ResultTooLargeError(`Query Result size exceeded: ` + `${MAX_SIZE}`);\n\t}\n\n\tresultsMap.clear();\n\treturn objects;\n}\n\nexport async function getDataset(\n\tquery: Query\n): Promise<{ id: string; kind: InsightDatasetKind; numRows: number; sections: any[] }> {\n\ttry {\n\t\tlet keyToParse;\n\t\tif (query.TRANSFORMATIONS) {\n\t\t\tkeyToParse = await Promise.any(\n\t\t\t\tquery.TRANSFORMATIONS.GROUP.map((key) => {\n\t\t\t\t\tif (key.includes(\"_\")) {\n\t\t\t\t\t\treturn key;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\t\t} else {\n\t\t\tkeyToParse = query.OPTIONS.COLUMNS[0];\n\t\t}\n\t\tif (!keyToParse) {\n\t\t\tthrow new InsightError(\"Did not locate reference ID\");\n\t\t}\n\t\tconst id = keyToParse.split(\"_\", 1)[0];\n\n\t\tconst filePath = path.join(\"./data\", `${id}.json`);\n\t\treturn await fs.readJson(filePath);\n\t} catch {\n\t\tthrow new InsightError(\"Referenced dataset ID had not been added yet\");\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b167efedef55a42551fec0fa373f6d0a8253633b","contentHash":"c172ab1754896ebb6a49e8c1c696962c7b5ddf4b7ba5c4fa6ae49033a1839440"},"/Users/tarunn/project_team222/src/controller/GetResultObject.ts":{"path":"/Users/tarunn/project_team222/src/controller/GetResultObject.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":106}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":52}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":31}},"4":{"start":{"line":6,"column":16},"end":{"line":28,"column":1}},"5":{"start":{"line":30,"column":24},"end":{"line":30,"column":26}},"6":{"start":{"line":31,"column":4},"end":{"line":51,"column":5}},"7":{"start":{"line":32,"column":26},"end":{"line":32,"column":38}},"8":{"start":{"line":33,"column":8},"end":{"line":50,"column":9}},"9":{"start":{"line":34,"column":12},"end":{"line":49,"column":13}},"10":{"start":{"line":35,"column":16},"end":{"line":41,"column":17}},"11":{"start":{"line":36,"column":20},"end":{"line":36,"column":50}},"12":{"start":{"line":39,"column":38},"end":{"line":39,"column":50}},"13":{"start":{"line":40,"column":20},"end":{"line":40,"column":94}},"14":{"start":{"line":43,"column":17},"end":{"line":49,"column":13}},"15":{"start":{"line":44,"column":34},"end":{"line":44,"column":46}},"16":{"start":{"line":45,"column":16},"end":{"line":45,"column":90}},"17":{"start":{"line":48,"column":16},"end":{"line":48,"column":54}},"18":{"start":{"line":52,"column":4},"end":{"line":52,"column":49}},"19":{"start":{"line":53,"column":4},"end":{"line":53,"column":23}},"20":{"start":{"line":56,"column":26},"end":{"line":56,"column":28}},"21":{"start":{"line":57,"column":4},"end":{"line":70,"column":5}},"22":{"start":{"line":58,"column":30},"end":{"line":58,"column":47}},"23":{"start":{"line":59,"column":25},"end":{"line":59,"column":30}},"24":{"start":{"line":60,"column":8},"end":{"line":66,"column":9}},"25":{"start":{"line":61,"column":37},"end":{"line":61,"column":75}},"26":{"start":{"line":62,"column":12},"end":{"line":65,"column":13}},"27":{"start":{"line":63,"column":16},"end":{"line":63,"column":34}},"28":{"start":{"line":64,"column":16},"end":{"line":64,"column":22}},"29":{"start":{"line":67,"column":8},"end":{"line":69,"column":9}},"30":{"start":{"line":68,"column":12},"end":{"line":68,"column":50}},"31":{"start":{"line":71,"column":4},"end":{"line":71,"column":25}},"32":{"start":{"line":74,"column":4},"end":{"line":91,"column":7}},"33":{"start":{"line":75,"column":23},"end":{"line":75,"column":34}},"34":{"start":{"line":76,"column":23},"end":{"line":76,"column":34}},"35":{"start":{"line":77,"column":8},"end":{"line":90,"column":9}},"36":{"start":{"line":78,"column":12},"end":{"line":78,"column":35}},"37":{"start":{"line":81,"column":28},"end":{"line":81,"column":42}},"38":{"start":{"line":82,"column":28},"end":{"line":82,"column":42}},"39":{"start":{"line":83,"column":12},"end":{"line":85,"column":13}},"40":{"start":{"line":84,"column":16},"end":{"line":84,"column":26}},"41":{"start":{"line":86,"column":12},"end":{"line":88,"column":13}},"42":{"start":{"line":87,"column":16},"end":{"line":87,"column":25}},"43":{"start":{"line":89,"column":12},"end":{"line":89,"column":21}},"44":{"start":{"line":93,"column":0},"end":{"line":93,"column":48}},"45":{"start":{"line":95,"column":4},"end":{"line":110,"column":5}},"46":{"start":{"line":96,"column":8},"end":{"line":98,"column":9}},"47":{"start":{"line":97,"column":12},"end":{"line":97,"column":22}},"48":{"start":{"line":99,"column":8},"end":{"line":101,"column":9}},"49":{"start":{"line":100,"column":12},"end":{"line":100,"column":21}},"50":{"start":{"line":104,"column":8},"end":{"line":106,"column":9}},"51":{"start":{"line":105,"column":12},"end":{"line":105,"column":22}},"52":{"start":{"line":107,"column":8},"end":{"line":109,"column":9}},"53":{"start":{"line":108,"column":12},"end":{"line":108,"column":21}},"54":{"start":{"line":111,"column":4},"end":{"line":111,"column":13}},"55":{"start":{"line":114,"column":4},"end":{"line":138,"column":7}},"56":{"start":{"line":115,"column":8},"end":{"line":136,"column":9}},"57":{"start":{"line":116,"column":27},"end":{"line":116,"column":33}},"58":{"start":{"line":117,"column":27},"end":{"line":117,"column":33}},"59":{"start":{"line":118,"column":12},"end":{"line":135,"column":13}},"60":{"start":{"line":119,"column":16},"end":{"line":126,"column":17}},"61":{"start":{"line":120,"column":20},"end":{"line":125,"column":21}},"62":{"start":{"line":121,"column":24},"end":{"line":121,"column":47}},"63":{"start":{"line":124,"column":24},"end":{"line":124,"column":47}},"64":{"start":{"line":129,"column":32},"end":{"line":129,"column":46}},"65":{"start":{"line":130,"column":32},"end":{"line":130,"column":46}},"66":{"start":{"line":131,"column":31},"end":{"line":131,"column":71}},"67":{"start":{"line":132,"column":16},"end":{"line":134,"column":17}},"68":{"start":{"line":133,"column":20},"end":{"line":133,"column":34}},"69":{"start":{"line":137,"column":8},"end":{"line":137,"column":17}},"70":{"start":{"line":140,"column":0},"end":{"line":140,"column":36}},"71":{"start":{"line":142,"column":18},"end":{"line":142,"column":20}},"72":{"start":{"line":143,"column":4},"end":{"line":145,"column":5}},"73":{"start":{"line":144,"column":8},"end":{"line":144,"column":86}},"74":{"start":{"line":146,"column":4},"end":{"line":158,"column":5}},"75":{"start":{"line":147,"column":29},"end":{"line":147,"column":56}},"76":{"start":{"line":148,"column":31},"end":{"line":148,"column":78}},"77":{"start":{"line":149,"column":27},"end":{"line":149,"column":29}},"78":{"start":{"line":150,"column":8},"end":{"line":156,"column":9}},"79":{"start":{"line":151,"column":12},"end":{"line":155,"column":13}},"80":{"start":{"line":152,"column":16},"end":{"line":154,"column":17}},"81":{"start":{"line":153,"column":20},"end":{"line":153,"column":61}},"82":{"start":{"line":157,"column":8},"end":{"line":157,"column":33}},"83":{"start":{"line":159,"column":4},"end":{"line":167,"column":5}},"84":{"start":{"line":160,"column":25},"end":{"line":160,"column":38}},"85":{"start":{"line":161,"column":8},"end":{"line":161,"column":56}},"86":{"start":{"line":163,"column":9},"end":{"line":167,"column":5}},"87":{"start":{"line":164,"column":26},"end":{"line":164,"column":44}},"88":{"start":{"line":165,"column":20},"end":{"line":165,"column":37}},"89":{"start":{"line":166,"column":8},"end":{"line":166,"column":56}},"90":{"start":{"line":168,"column":4},"end":{"line":168,"column":19}},"91":{"start":{"line":170,"column":0},"end":{"line":170,"column":42}},"92":{"start":{"line":172,"column":23},"end":{"line":172,"column":68}},"93":{"start":{"line":172,"column":46},"end":{"line":172,"column":67}},"94":{"start":{"line":173,"column":4},"end":{"line":183,"column":5}},"95":{"start":{"line":174,"column":24},"end":{"line":174,"column":48}},"96":{"start":{"line":175,"column":8},"end":{"line":182,"column":9}},"97":{"start":{"line":176,"column":12},"end":{"line":181,"column":13}},"98":{"start":{"line":177,"column":34},"end":{"line":177,"column":51}},"99":{"start":{"line":178,"column":16},"end":{"line":180,"column":17}},"100":{"start":{"line":179,"column":20},"end":{"line":179,"column":33}},"101":{"start":{"line":184,"column":4},"end":{"line":184,"column":16}}},"fnMap":{"0":{"name":"mapSectionToResult","decl":{"start":{"line":29,"column":9},"end":{"line":29,"column":27}},"loc":{"start":{"line":29,"column":37},"end":{"line":54,"column":1}},"line":29},"1":{"name":"filterResultKeys","decl":{"start":{"line":55,"column":9},"end":{"line":55,"column":25}},"loc":{"start":{"line":55,"column":48},"end":{"line":72,"column":1}},"line":55},"2":{"name":"orderResultsSingle","decl":{"start":{"line":73,"column":9},"end":{"line":73,"column":27}},"loc":{"start":{"line":73,"column":47},"end":{"line":92,"column":1}},"line":73},"3":{"name":"(anonymous_3)","decl":{"start":{"line":74,"column":24},"end":{"line":74,"column":25}},"loc":{"start":{"line":74,"column":34},"end":{"line":91,"column":5}},"line":74},"4":{"name":"orderStringResult","decl":{"start":{"line":94,"column":9},"end":{"line":94,"column":26}},"loc":{"start":{"line":94,"column":50},"end":{"line":112,"column":1}},"line":94},"5":{"name":"orderResults","decl":{"start":{"line":113,"column":9},"end":{"line":113,"column":21}},"loc":{"start":{"line":113,"column":47},"end":{"line":139,"column":1}},"line":113},"6":{"name":"(anonymous_6)","decl":{"start":{"line":114,"column":24},"end":{"line":114,"column":25}},"loc":{"start":{"line":114,"column":34},"end":{"line":138,"column":5}},"line":114},"7":{"name":"getResultObject","decl":{"start":{"line":141,"column":15},"end":{"line":141,"column":30}},"loc":{"start":{"line":141,"column":50},"end":{"line":169,"column":1}},"line":141},"8":{"name":"validKeys","decl":{"start":{"line":171,"column":9},"end":{"line":171,"column":18}},"loc":{"start":{"line":171,"column":25},"end":{"line":185,"column":1}},"line":171},"9":{"name":"(anonymous_9)","decl":{"start":{"line":172,"column":33},"end":{"line":172,"column":34}},"loc":{"start":{"line":172,"column":46},"end":{"line":172,"column":67}},"line":172}},"branchMap":{"0":{"loc":{"start":{"line":33,"column":8},"end":{"line":50,"column":9}},"type":"if","locations":[{"start":{"line":33,"column":8},"end":{"line":50,"column":9}},{"start":{"line":33,"column":8},"end":{"line":50,"column":9}}],"line":33},"1":{"loc":{"start":{"line":34,"column":12},"end":{"line":49,"column":13}},"type":"if","locations":[{"start":{"line":34,"column":12},"end":{"line":49,"column":13}},{"start":{"line":34,"column":12},"end":{"line":49,"column":13}}],"line":34},"2":{"loc":{"start":{"line":35,"column":16},"end":{"line":41,"column":17}},"type":"if","locations":[{"start":{"line":35,"column":16},"end":{"line":41,"column":17}},{"start":{"line":35,"column":16},"end":{"line":41,"column":17}}],"line":35},"3":{"loc":{"start":{"line":40,"column":45},"end":{"line":40,"column":93}},"type":"cond-expr","locations":[{"start":{"line":40,"column":64},"end":{"line":40,"column":81}},{"start":{"line":40,"column":84},"end":{"line":40,"column":93}}],"line":40},"4":{"loc":{"start":{"line":43,"column":17},"end":{"line":49,"column":13}},"type":"if","locations":[{"start":{"line":43,"column":17},"end":{"line":49,"column":13}},{"start":{"line":43,"column":17},"end":{"line":49,"column":13}}],"line":43},"5":{"loc":{"start":{"line":45,"column":41},"end":{"line":45,"column":89}},"type":"cond-expr","locations":[{"start":{"line":45,"column":60},"end":{"line":45,"column":77}},{"start":{"line":45,"column":80},"end":{"line":45,"column":89}}],"line":45},"6":{"loc":{"start":{"line":62,"column":12},"end":{"line":65,"column":13}},"type":"if","locations":[{"start":{"line":62,"column":12},"end":{"line":65,"column":13}},{"start":{"line":62,"column":12},"end":{"line":65,"column":13}}],"line":62},"7":{"loc":{"start":{"line":67,"column":8},"end":{"line":69,"column":9}},"type":"if","locations":[{"start":{"line":67,"column":8},"end":{"line":69,"column":9}},{"start":{"line":67,"column":8},"end":{"line":69,"column":9}}],"line":67},"8":{"loc":{"start":{"line":77,"column":8},"end":{"line":90,"column":9}},"type":"if","locations":[{"start":{"line":77,"column":8},"end":{"line":90,"column":9}},{"start":{"line":77,"column":8},"end":{"line":90,"column":9}}],"line":77},"9":{"loc":{"start":{"line":77,"column":12},"end":{"line":77,"column":68}},"type":"binary-expr","locations":[{"start":{"line":77,"column":12},"end":{"line":77,"column":38}},{"start":{"line":77,"column":42},"end":{"line":77,"column":68}}],"line":77},"10":{"loc":{"start":{"line":83,"column":12},"end":{"line":85,"column":13}},"type":"if","locations":[{"start":{"line":83,"column":12},"end":{"line":85,"column":13}},{"start":{"line":83,"column":12},"end":{"line":85,"column":13}}],"line":83},"11":{"loc":{"start":{"line":86,"column":12},"end":{"line":88,"column":13}},"type":"if","locations":[{"start":{"line":86,"column":12},"end":{"line":88,"column":13}},{"start":{"line":86,"column":12},"end":{"line":88,"column":13}}],"line":86},"12":{"loc":{"start":{"line":95,"column":4},"end":{"line":110,"column":5}},"type":"if","locations":[{"start":{"line":95,"column":4},"end":{"line":110,"column":5}},{"start":{"line":95,"column":4},"end":{"line":110,"column":5}}],"line":95},"13":{"loc":{"start":{"line":96,"column":8},"end":{"line":98,"column":9}},"type":"if","locations":[{"start":{"line":96,"column":8},"end":{"line":98,"column":9}},{"start":{"line":96,"column":8},"end":{"line":98,"column":9}}],"line":96},"14":{"loc":{"start":{"line":99,"column":8},"end":{"line":101,"column":9}},"type":"if","locations":[{"start":{"line":99,"column":8},"end":{"line":101,"column":9}},{"start":{"line":99,"column":8},"end":{"line":101,"column":9}}],"line":99},"15":{"loc":{"start":{"line":104,"column":8},"end":{"line":106,"column":9}},"type":"if","locations":[{"start":{"line":104,"column":8},"end":{"line":106,"column":9}},{"start":{"line":104,"column":8},"end":{"line":106,"column":9}}],"line":104},"16":{"loc":{"start":{"line":107,"column":8},"end":{"line":109,"column":9}},"type":"if","locations":[{"start":{"line":107,"column":8},"end":{"line":109,"column":9}},{"start":{"line":107,"column":8},"end":{"line":109,"column":9}}],"line":107},"17":{"loc":{"start":{"line":118,"column":12},"end":{"line":135,"column":13}},"type":"if","locations":[{"start":{"line":118,"column":12},"end":{"line":135,"column":13}},{"start":{"line":118,"column":12},"end":{"line":135,"column":13}}],"line":118},"18":{"loc":{"start":{"line":118,"column":16},"end":{"line":118,"column":72}},"type":"binary-expr","locations":[{"start":{"line":118,"column":16},"end":{"line":118,"column":42}},{"start":{"line":118,"column":46},"end":{"line":118,"column":72}}],"line":118},"19":{"loc":{"start":{"line":119,"column":16},"end":{"line":126,"column":17}},"type":"if","locations":[{"start":{"line":119,"column":16},"end":{"line":126,"column":17}},{"start":{"line":119,"column":16},"end":{"line":126,"column":17}}],"line":119},"20":{"loc":{"start":{"line":120,"column":20},"end":{"line":125,"column":21}},"type":"if","locations":[{"start":{"line":120,"column":20},"end":{"line":125,"column":21}},{"start":{"line":120,"column":20},"end":{"line":125,"column":21}}],"line":120},"21":{"loc":{"start":{"line":132,"column":16},"end":{"line":134,"column":17}},"type":"if","locations":[{"start":{"line":132,"column":16},"end":{"line":134,"column":17}},{"start":{"line":132,"column":16},"end":{"line":134,"column":17}}],"line":132},"22":{"loc":{"start":{"line":143,"column":4},"end":{"line":145,"column":5}},"type":"if","locations":[{"start":{"line":143,"column":4},"end":{"line":145,"column":5}},{"start":{"line":143,"column":4},"end":{"line":145,"column":5}}],"line":143},"23":{"loc":{"start":{"line":152,"column":16},"end":{"line":154,"column":17}},"type":"if","locations":[{"start":{"line":152,"column":16},"end":{"line":154,"column":17}},{"start":{"line":152,"column":16},"end":{"line":154,"column":17}}],"line":152},"24":{"loc":{"start":{"line":159,"column":4},"end":{"line":167,"column":5}},"type":"if","locations":[{"start":{"line":159,"column":4},"end":{"line":167,"column":5}},{"start":{"line":159,"column":4},"end":{"line":167,"column":5}}],"line":159},"25":{"loc":{"start":{"line":163,"column":9},"end":{"line":167,"column":5}},"type":"if","locations":[{"start":{"line":163,"column":9},"end":{"line":167,"column":5}},{"start":{"line":163,"column":9},"end":{"line":167,"column":5}}],"line":163},"26":{"loc":{"start":{"line":173,"column":4},"end":{"line":183,"column":5}},"type":"if","locations":[{"start":{"line":173,"column":4},"end":{"line":183,"column":5}},{"start":{"line":173,"column":4},"end":{"line":183,"column":5}}],"line":173},"27":{"loc":{"start":{"line":176,"column":12},"end":{"line":181,"column":13}},"type":"if","locations":[{"start":{"line":176,"column":12},"end":{"line":181,"column":13}},{"start":{"line":176,"column":12},"end":{"line":181,"column":13}}],"line":176},"28":{"loc":{"start":{"line":178,"column":16},"end":{"line":180,"column":17}},"type":"if","locations":[{"start":{"line":178,"column":16},"end":{"line":180,"column":17}},{"start":{"line":178,"column":16},"end":{"line":180,"column":17}}],"line":178}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":65904,"6":65904,"7":2354544,"8":2354544,"9":659760,"10":65184,"11":24853,"12":40331,"13":40331,"14":594576,"15":65184,"16":65184,"17":529392,"18":65904,"19":65904,"20":65904,"21":65904,"22":659760,"23":659760,"24":659760,"25":1251148,"26":1251148,"27":131383,"28":131383,"29":659760,"30":131383,"31":65904,"32":4,"33":891625,"34":891625,"35":891625,"36":891623,"37":2,"38":2,"39":2,"40":0,"41":2,"42":1,"43":1,"44":1,"45":307,"46":307,"47":145,"48":162,"49":84,"50":0,"51":0,"52":0,"53":0,"54":78,"55":4,"56":272,"57":311,"58":311,"59":311,"60":4,"61":2,"62":2,"63":0,"64":307,"65":307,"66":307,"67":307,"68":229,"69":41,"70":1,"71":29,"72":29,"73":1,"74":28,"75":65904,"76":65904,"77":65904,"78":65904,"79":131824,"80":265880,"81":131383,"82":65904,"83":28,"84":4,"85":4,"86":24,"87":3,"88":3,"89":3,"90":28,"91":1,"92":29,"93":29,"94":29,"95":29,"96":29,"97":93,"98":84,"99":84,"100":1,"101":28},"f":{"0":65904,"1":65904,"2":4,"3":891625,"4":307,"5":4,"6":272,"7":29,"8":29,"9":29},"b":{"0":[659760,1694784],"1":[65184,594576],"2":[24853,40331],"3":[40331,0],"4":[65184,529392],"5":[65184,0],"6":[131383,1119765],"7":[131383,528377],"8":[891623,2],"9":[891625,891623],"10":[0,2],"11":[1,1],"12":[307,0],"13":[145,162],"14":[84,78],"15":[0,0],"16":[0,0],"17":[4,307],"18":[311,4],"19":[2,2],"20":[2,0],"21":[229,78],"22":[1,28],"23":[131383,134497],"24":[4,24],"25":[3,21],"26":[29,0],"27":[84,9],"28":[1,83]},"inputSourceMap":{"version":3,"file":"/Users/tarunn/project_team222/src/controller/GetResultObject.ts","sources":["/Users/tarunn/project_team222/src/controller/GetResultObject.ts"],"names":[],"mappings":"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","sourcesContent":["import { InsightError, InsightResult } from \"./IInsightFacade\";\nimport { Options, Order } from \"./Query\";\n\n// Data file to dataset mapping.\nexport const resultsMap = new Map<InsightResult, any>();\nconst mapping: Record<string, string> = {\n\tid: \"uuid\",\n\tCourse: \"id\",\n\tTitle: \"title\",\n\tProfessor: \"instructor\",\n\tSubject: \"dept\",\n\tYear: \"year\",\n\tAvg: \"avg\",\n\tPass: \"pass\",\n\tFail: \"fail\",\n\tAudit: \"audit\",\n\tlat: \"lat\",\n\tlon: \"lon\",\n\tseats: \"seats\",\n\tfullname: \"fullname\",\n\tshortname: \"shortname\",\n\tnumber: \"number\",\n\tname: \"name\",\n\taddress: \"address\",\n\ttype: \"type\",\n\tfurniture: \"furniture\",\n\thref: \"href\",\n};\n\n// Map section keys to result keys\nfunction mapSectionToResult(section: any): any {\n\tconst resultEntry: any = {};\n\n\tfor (const key of Object.keys(section)) {\n\t\tconst mappedKey = mapping[key];\n\t\tif (mappedKey) {\n\t\t\t// Set Year to 1900 if Section is \"overall\"\n\t\t\tif (key === \"Year\") {\n\t\t\t\tif (section.Section === \"overall\") {\n\t\t\t\t\tresultEntry[mappedKey] = 1900;\n\t\t\t\t} else {\n\t\t\t\t\tconst yearValue = section[key];\n\t\t\t\t\t// Convert to number, year is string currently\n\t\t\t\t\tresultEntry[mappedKey] = yearValue !== \"\" ? Number(yearValue) : undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Handle UUID to convert to a string\n\t\t\telse if (key === \"id\") {\n\t\t\t\tconst uuidValue = section[key];\n\t\t\t\tresultEntry[mappedKey] = uuidValue !== \"\" ? String(uuidValue) : undefined; // Convert to string, add quotes\n\t\t\t} else {\n\t\t\t\tresultEntry[mappedKey] = section[key];\n\t\t\t}\n\t\t}\n\t}\n\tresultsMap.set(resultEntry, section);\n\treturn resultEntry;\n}\n\n// Filter out keys not in COLUMNS\nfunction filterResultKeys(resultEntry: any, columns: string[]): any {\n\tconst filteredEntry: any = {};\n\tfor (const key of Object.keys(resultEntry)) {\n\t\tconst normalizedKey = key.toLowerCase();\n\t\tlet matchFound = false;\n\n\t\tfor (const column of columns) {\n\t\t\tconst normalizedColumn = column.split(\"_\").pop()?.toLowerCase();\n\t\t\tif (normalizedKey === normalizedColumn) {\n\t\t\t\tmatchFound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (matchFound) {\n\t\t\tfilteredEntry[key] = resultEntry[key];\n\t\t}\n\t}\n\treturn filteredEntry;\n}\n\n// Order results based on the specified key\nexport function orderResultsSingle(results: InsightResult[], orderKey: string): InsightResult[] {\n\treturn results.sort((a, b) => {\n\t\tconst aValue = a[orderKey];\n\t\tconst bValue = b[orderKey];\n\t\t// Check if both values are numbers\n\t\tif (typeof aValue === \"number\" && typeof bValue === \"number\") {\n\t\t\treturn aValue - bValue;\n\t\t} else {\n\t\t\t// String comparison\n\t\t\tconst aString = String(aValue);\n\t\t\tconst bString = String(bValue);\n\t\t\tif (aString < bString) {\n\t\t\t\treturn -1; //Ascending\n\t\t\t}\n\t\t\tif (aString > bString) {\n\t\t\t\treturn 1; //Descending\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t});\n}\n\nfunction orderStringResult(aString: string, bString: string, dir: string): number {\n\tif (dir === \"UP\") {\n\t\tif (aString < bString) {\n\t\t\treturn -1; //Ascending\n\t\t}\n\t\tif (aString > bString) {\n\t\t\treturn 1; //Descending\n\t\t}\n\t} else {\n\t\tif (aString > bString) {\n\t\t\treturn -1; //Ascending\n\t\t}\n\t\tif (aString < bString) {\n\t\t\treturn 1; //Descending\n\t\t}\n\t}\n\treturn 0;\n}\n\nexport function orderResults(results: InsightResult[], orderKeys: string[], dir: string): InsightResult[] {\n\treturn results.sort((a, b) => {\n\t\tfor (const key of orderKeys) {\n\t\t\tconst aValue = a[key];\n\t\t\tconst bValue = b[key];\n\t\t\tif (typeof aValue === \"number\" && typeof bValue === \"number\") {\n\t\t\t\tif (aValue - bValue !== 0) {\n\t\t\t\t\tif (dir === \"UP\") {\n\t\t\t\t\t\treturn aValue - bValue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn bValue - aValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// String comparison\n\t\t\t\tconst aString = String(aValue);\n\t\t\t\tconst bString = String(bValue);\n\t\t\t\tconst result = orderStringResult(aString, bString, dir);\n\t\t\t\tif (result !== 0) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t});\n}\n\n// Get the result object\nexport async function getResultObject(options: Options, sections: any[]): Promise<InsightResult[]> {\n\tlet results: InsightResult[] = [];\n\n\tif (!validKeys(options.COLUMNS)) {\n\t\tthrow new InsightError(\"Query references multiple datasets\");\n\t}\n\n\tfor (const section of sections) {\n\t\tconst mappedResult = mapSectionToResult(section); // Map section keys to result keys\n\t\tconst filteredResult = filterResultKeys(mappedResult, options.COLUMNS); // Filter based on COLUMNS\n\n\t\t// Rename keys to include 'DatsetName_' prefix\n\t\tconst finalEntry: any = {};\n\t\tfor (const column of options.COLUMNS) {\n\t\t\tfor (const key of Object.keys(filteredResult)) {\n\t\t\t\tif (key.toLowerCase() === column.split(\"_\").pop()?.toLowerCase()) {\n\t\t\t\t\tfinalEntry[column] = filteredResult[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tresults.push(finalEntry); // Add the final entry to results\n\t}\n\n\t// Order the results based on options.ORDER (string column name)\n\tif (typeof options.ORDER === \"string\") {\n\t\tconst orderKey = options.ORDER; // The column name to order by\n\t\tresults = orderResultsSingle(results, orderKey); // Use the helper function to order results\n\t} else if (options.ORDER) {\n\t\tconst orderKeys = (options.ORDER as Order).keys;\n\t\tconst dir = (options.ORDER as Order).dir;\n\t\tresults = orderResults(results, orderKeys, dir);\n\t}\n\n\treturn results;\n}\n\nfunction validKeys(keys: string[]): boolean {\n\tconst keyToParse = keys.find((element) => element.includes(\"_\"));\n\tif (keyToParse) {\n\t\tconst validID = keyToParse.split(\"_\")[0];\n\n\t\tfor (const key of keys) {\n\t\t\tif (key.includes(\"_\")) {\n\t\t\t\tconst toCompare = key.split(\"_\")[0];\n\t\t\t\tif (toCompare !== validID) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"cf5b66ad4057b03be87b796e6fb2233092ae7d15","contentHash":"89ecb019c9b9a3a2dda2fd729e1a2ed1ea00ee0825f5519a7e4d08f01cb16228"},"/Users/tarunn/project_team222/src/controller/GetResultHelpers.ts":{"path":"/Users/tarunn/project_team222/src/controller/GetResultHelpers.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":52}},"3":{"start":{"line":6,"column":21},"end":{"line":6,"column":30}},"4":{"start":{"line":7,"column":16},"end":{"line":7,"column":18}},"5":{"start":{"line":8,"column":4},"end":{"line":12,"column":5}},"6":{"start":{"line":9,"column":8},"end":{"line":11,"column":9}},"7":{"start":{"line":10,"column":12},"end":{"line":10,"column":34}},"8":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"9":{"start":{"line":14,"column":8},"end":{"line":14,"column":61}},"10":{"start":{"line":16,"column":4},"end":{"line":18,"column":5}},"11":{"start":{"line":17,"column":8},"end":{"line":17,"column":57}},"12":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"13":{"start":{"line":20,"column":8},"end":{"line":20,"column":57}},"14":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"15":{"start":{"line":23,"column":8},"end":{"line":23,"column":54}},"16":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"17":{"start":{"line":26,"column":8},"end":{"line":26,"column":30}},"18":{"start":{"line":28,"column":4},"end":{"line":28,"column":20}},"19":{"start":{"line":30,"column":0},"end":{"line":30,"column":34}},"20":{"start":{"line":32,"column":21},"end":{"line":32,"column":30}},"21":{"start":{"line":33,"column":4},"end":{"line":38,"column":5}},"22":{"start":{"line":34,"column":22},"end":{"line":34,"column":58}},"23":{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},"24":{"start":{"line":36,"column":12},"end":{"line":36,"column":34}},"25":{"start":{"line":39,"column":4},"end":{"line":44,"column":5}},"26":{"start":{"line":40,"column":22},"end":{"line":40,"column":56}},"27":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"28":{"start":{"line":42,"column":12},"end":{"line":42,"column":34}},"29":{"start":{"line":45,"column":4},"end":{"line":45,"column":32}},"30":{"start":{"line":48,"column":21},"end":{"line":48,"column":30}},"31":{"start":{"line":49,"column":4},"end":{"line":56,"column":5}},"32":{"start":{"line":50,"column":8},"end":{"line":55,"column":12}},"33":{"start":{"line":51,"column":26},"end":{"line":51,"column":60}},"34":{"start":{"line":52,"column":12},"end":{"line":54,"column":13}},"35":{"start":{"line":53,"column":16},"end":{"line":53,"column":38}},"36":{"start":{"line":57,"column":4},"end":{"line":57,"column":32}},"37":{"start":{"line":60,"column":21},"end":{"line":60,"column":30}},"38":{"start":{"line":61,"column":4},"end":{"line":77,"column":5}},"39":{"start":{"line":62,"column":8},"end":{"line":64,"column":9}},"40":{"start":{"line":63,"column":12},"end":{"line":63,"column":70}},"41":{"start":{"line":65,"column":8},"end":{"line":76,"column":11}},"42":{"start":{"line":66,"column":12},"end":{"line":75,"column":16}},"43":{"start":{"line":67,"column":16},"end":{"line":74,"column":17}},"44":{"start":{"line":68,"column":36},"end":{"line":68,"column":70}},"45":{"start":{"line":69,"column":20},"end":{"line":73,"column":21}},"46":{"start":{"line":70,"column":24},"end":{"line":72,"column":25}},"47":{"start":{"line":71,"column":28},"end":{"line":71,"column":50}},"48":{"start":{"line":78,"column":4},"end":{"line":78,"column":32}},"49":{"start":{"line":81,"column":21},"end":{"line":81,"column":30}},"50":{"start":{"line":82,"column":17},"end":{"line":82,"column":26}},"51":{"start":{"line":83,"column":15},"end":{"line":83,"column":19}},"52":{"start":{"line":84,"column":4},"end":{"line":94,"column":5}},"53":{"start":{"line":85,"column":8},"end":{"line":85,"column":27}},"54":{"start":{"line":86,"column":8},"end":{"line":86,"column":20}},"55":{"start":{"line":88,"column":9},"end":{"line":94,"column":5}},"56":{"start":{"line":89,"column":8},"end":{"line":89,"column":27}},"57":{"start":{"line":90,"column":8},"end":{"line":90,"column":20}},"58":{"start":{"line":92,"column":9},"end":{"line":94,"column":5}},"59":{"start":{"line":93,"column":8},"end":{"line":93,"column":27}},"60":{"start":{"line":95,"column":26},"end":{"line":95,"column":51}},"61":{"start":{"line":96,"column":4},"end":{"line":98,"column":5}},"62":{"start":{"line":97,"column":8},"end":{"line":97,"column":87}},"63":{"start":{"line":99,"column":4},"end":{"line":110,"column":8}},"64":{"start":{"line":100,"column":8},"end":{"line":109,"column":9}},"65":{"start":{"line":101,"column":12},"end":{"line":103,"column":13}},"66":{"start":{"line":102,"column":16},"end":{"line":102,"column":38}},"67":{"start":{"line":106,"column":12},"end":{"line":108,"column":13}},"68":{"start":{"line":107,"column":16},"end":{"line":107,"column":38}},"69":{"start":{"line":111,"column":4},"end":{"line":111,"column":32}},"70":{"start":{"line":114,"column":21},"end":{"line":114,"column":30}},"71":{"start":{"line":115,"column":19},"end":{"line":115,"column":28}},"72":{"start":{"line":116,"column":26},"end":{"line":116,"column":51}},"73":{"start":{"line":117,"column":15},"end":{"line":117,"column":33}},"74":{"start":{"line":118,"column":18},"end":{"line":118,"column":36}},"75":{"start":{"line":119,"column":4},"end":{"line":121,"column":5}},"76":{"start":{"line":120,"column":8},"end":{"line":120,"column":87}},"77":{"start":{"line":122,"column":4},"end":{"line":133,"column":8}},"78":{"start":{"line":123,"column":8},"end":{"line":132,"column":9}},"79":{"start":{"line":124,"column":12},"end":{"line":126,"column":13}},"80":{"start":{"line":125,"column":16},"end":{"line":125,"column":38}},"81":{"start":{"line":129,"column":12},"end":{"line":131,"column":13}},"82":{"start":{"line":130,"column":16},"end":{"line":130,"column":38}},"83":{"start":{"line":134,"column":4},"end":{"line":134,"column":32}},"84":{"start":{"line":137,"column":20},"end":{"line":137,"column":35}},"85":{"start":{"line":138,"column":4},"end":{"line":140,"column":5}},"86":{"start":{"line":139,"column":8},"end":{"line":139,"column":31}},"87":{"start":{"line":141,"column":4},"end":{"line":143,"column":5}},"88":{"start":{"line":142,"column":8},"end":{"line":142,"column":35}},"89":{"start":{"line":144,"column":4},"end":{"line":146,"column":5}},"90":{"start":{"line":145,"column":8},"end":{"line":145,"column":34}},"91":{"start":{"line":147,"column":4},"end":{"line":149,"column":5}},"92":{"start":{"line":148,"column":8},"end":{"line":148,"column":38}},"93":{"start":{"line":150,"column":4},"end":{"line":150,"column":44}},"94":{"start":{"line":153,"column":20},"end":{"line":153,"column":36}},"95":{"start":{"line":154,"column":4},"end":{"line":156,"column":5}},"96":{"start":{"line":155,"column":8},"end":{"line":155,"column":38}},"97":{"start":{"line":157,"column":4},"end":{"line":159,"column":5}},"98":{"start":{"line":158,"column":8},"end":{"line":158,"column":35}},"99":{"start":{"line":160,"column":4},"end":{"line":162,"column":5}},"100":{"start":{"line":161,"column":8},"end":{"line":161,"column":33}},"101":{"start":{"line":163,"column":4},"end":{"line":165,"column":5}},"102":{"start":{"line":164,"column":8},"end":{"line":164,"column":36}},"103":{"start":{"line":166,"column":4},"end":{"line":168,"column":5}},"104":{"start":{"line":167,"column":8},"end":{"line":167,"column":33}},"105":{"start":{"line":169,"column":4},"end":{"line":171,"column":5}},"106":{"start":{"line":170,"column":8},"end":{"line":170,"column":38}},"107":{"start":{"line":172,"column":4},"end":{"line":174,"column":5}},"108":{"start":{"line":173,"column":8},"end":{"line":173,"column":33}},"109":{"start":{"line":175,"column":4},"end":{"line":175,"column":44}},"110":{"start":{"line":178,"column":4},"end":{"line":180,"column":5}},"111":{"start":{"line":179,"column":8},"end":{"line":179,"column":54}},"112":{"start":{"line":181,"column":4},"end":{"line":183,"column":5}},"113":{"start":{"line":182,"column":8},"end":{"line":182,"column":50}},"114":{"start":{"line":184,"column":4},"end":{"line":186,"column":5}},"115":{"start":{"line":185,"column":8},"end":{"line":185,"column":56}},"116":{"start":{"line":187,"column":4},"end":{"line":187,"column":31}},"117":{"start":{"line":190,"column":20},"end":{"line":190,"column":33}},"118":{"start":{"line":191,"column":4},"end":{"line":193,"column":5}},"119":{"start":{"line":192,"column":8},"end":{"line":192,"column":32}},"120":{"start":{"line":194,"column":4},"end":{"line":196,"column":5}},"121":{"start":{"line":195,"column":8},"end":{"line":195,"column":33}},"122":{"start":{"line":197,"column":4},"end":{"line":199,"column":5}},"123":{"start":{"line":198,"column":8},"end":{"line":198,"column":33}},"124":{"start":{"line":200,"column":4},"end":{"line":202,"column":5}},"125":{"start":{"line":201,"column":8},"end":{"line":201,"column":33}},"126":{"start":{"line":203,"column":4},"end":{"line":205,"column":5}},"127":{"start":{"line":204,"column":8},"end":{"line":204,"column":33}},"128":{"start":{"line":206,"column":4},"end":{"line":208,"column":5}},"129":{"start":{"line":207,"column":8},"end":{"line":207,"column":35}},"130":{"start":{"line":209,"column":4},"end":{"line":209,"column":29}},"131":{"start":{"line":212,"column":20},"end":{"line":212,"column":31}},"132":{"start":{"line":213,"column":4},"end":{"line":215,"column":5}},"133":{"start":{"line":214,"column":8},"end":{"line":214,"column":32}},"134":{"start":{"line":216,"column":4},"end":{"line":218,"column":5}},"135":{"start":{"line":217,"column":8},"end":{"line":217,"column":34}},"136":{"start":{"line":219,"column":4},"end":{"line":221,"column":5}},"137":{"start":{"line":220,"column":8},"end":{"line":220,"column":33}},"138":{"start":{"line":222,"column":4},"end":{"line":224,"column":5}},"139":{"start":{"line":223,"column":8},"end":{"line":223,"column":35}},"140":{"start":{"line":225,"column":4},"end":{"line":225,"column":29}},"141":{"start":{"line":228,"column":21},"end":{"line":228,"column":30}},"142":{"start":{"line":229,"column":4},"end":{"line":235,"column":7}},"143":{"start":{"line":230,"column":8},"end":{"line":234,"column":9}},"144":{"start":{"line":231,"column":12},"end":{"line":233,"column":13}},"145":{"start":{"line":232,"column":16},"end":{"line":232,"column":38}},"146":{"start":{"line":236,"column":4},"end":{"line":236,"column":32}}},"fnMap":{"0":{"name":"getSections","decl":{"start":{"line":5,"column":15},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":44},"end":{"line":29,"column":1}},"line":5},"1":{"name":"handleLogicComparison","decl":{"start":{"line":31,"column":15},"end":{"line":31,"column":36}},"loc":{"start":{"line":31,"column":54},"end":{"line":46,"column":1}},"line":31},"2":{"name":"handleOr","decl":{"start":{"line":47,"column":15},"end":{"line":47,"column":23}},"loc":{"start":{"line":47,"column":42},"end":{"line":58,"column":1}},"line":47},"3":{"name":"(anonymous_3)","decl":{"start":{"line":50,"column":38},"end":{"line":50,"column":39}},"loc":{"start":{"line":50,"column":56},"end":{"line":55,"column":9}},"line":50},"4":{"name":"handleAnd","decl":{"start":{"line":59,"column":15},"end":{"line":59,"column":24}},"loc":{"start":{"line":59,"column":43},"end":{"line":79,"column":1}},"line":59},"5":{"name":"(anonymous_5)","decl":{"start":{"line":65,"column":52},"end":{"line":65,"column":53}},"loc":{"start":{"line":65,"column":77},"end":{"line":76,"column":9}},"line":65},"6":{"name":"(anonymous_6)","decl":{"start":{"line":66,"column":42},"end":{"line":66,"column":43}},"loc":{"start":{"line":66,"column":60},"end":{"line":75,"column":13}},"line":66},"7":{"name":"handleMComparison","decl":{"start":{"line":80,"column":15},"end":{"line":80,"column":32}},"loc":{"start":{"line":80,"column":50},"end":{"line":112,"column":1}},"line":80},"8":{"name":"(anonymous_8)","decl":{"start":{"line":99,"column":43},"end":{"line":99,"column":44}},"loc":{"start":{"line":99,"column":62},"end":{"line":110,"column":5}},"line":99},"9":{"name":"handleSComparison","decl":{"start":{"line":113,"column":15},"end":{"line":113,"column":32}},"loc":{"start":{"line":113,"column":50},"end":{"line":135,"column":1}},"line":113},"10":{"name":"(anonymous_10)","decl":{"start":{"line":122,"column":43},"end":{"line":122,"column":44}},"loc":{"start":{"line":122,"column":62},"end":{"line":133,"column":5}},"line":122},"11":{"name":"checkSSection","decl":{"start":{"line":136,"column":15},"end":{"line":136,"column":28}},"loc":{"start":{"line":136,"column":52},"end":{"line":151,"column":1}},"line":136},"12":{"name":"checkSRoom","decl":{"start":{"line":152,"column":15},"end":{"line":152,"column":25}},"loc":{"start":{"line":152,"column":49},"end":{"line":176,"column":1}},"line":152},"13":{"name":"handleSCompare","decl":{"start":{"line":177,"column":15},"end":{"line":177,"column":29}},"loc":{"start":{"line":177,"column":48},"end":{"line":188,"column":1}},"line":177},"14":{"name":"checkMSection","decl":{"start":{"line":189,"column":15},"end":{"line":189,"column":28}},"loc":{"start":{"line":189,"column":58},"end":{"line":210,"column":1}},"line":189},"15":{"name":"checkMRoom","decl":{"start":{"line":211,"column":15},"end":{"line":211,"column":25}},"loc":{"start":{"line":211,"column":55},"end":{"line":226,"column":1}},"line":211},"16":{"name":"handleNegation","decl":{"start":{"line":227,"column":15},"end":{"line":227,"column":29}},"loc":{"start":{"line":227,"column":47},"end":{"line":237,"column":1}},"line":227},"17":{"name":"(anonymous_17)","decl":{"start":{"line":229,"column":48},"end":{"line":229,"column":49}},"loc":{"start":{"line":229,"column":69},"end":{"line":235,"column":5}},"line":229}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":4},"end":{"line":12,"column":5}},"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":12,"column":5}},{"start":{"line":8,"column":4},"end":{"line":12,"column":5}}],"line":8},"1":{"loc":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},{"start":{"line":13,"column":4},"end":{"line":15,"column":5}}],"line":13},"2":{"loc":{"start":{"line":13,"column":8},"end":{"line":13,"column":41}},"type":"binary-expr","locations":[{"start":{"line":13,"column":8},"end":{"line":13,"column":22}},{"start":{"line":13,"column":26},"end":{"line":13,"column":41}}],"line":13},"3":{"loc":{"start":{"line":16,"column":4},"end":{"line":18,"column":5}},"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":18,"column":5}},{"start":{"line":16,"column":4},"end":{"line":18,"column":5}}],"line":16},"4":{"loc":{"start":{"line":16,"column":8},"end":{"line":16,"column":58}},"type":"binary-expr","locations":[{"start":{"line":16,"column":8},"end":{"line":16,"column":22}},{"start":{"line":16,"column":26},"end":{"line":16,"column":40}},{"start":{"line":16,"column":44},"end":{"line":16,"column":58}}],"line":16},"5":{"loc":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},{"start":{"line":19,"column":4},"end":{"line":21,"column":5}}],"line":19},"6":{"loc":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},{"start":{"line":22,"column":4},"end":{"line":24,"column":5}}],"line":22},"7":{"loc":{"start":{"line":33,"column":4},"end":{"line":38,"column":5}},"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":38,"column":5}},{"start":{"line":33,"column":4},"end":{"line":38,"column":5}}],"line":33},"8":{"loc":{"start":{"line":39,"column":4},"end":{"line":44,"column":5}},"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":44,"column":5}},{"start":{"line":39,"column":4},"end":{"line":44,"column":5}}],"line":39},"9":{"loc":{"start":{"line":49,"column":4},"end":{"line":56,"column":5}},"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":56,"column":5}},{"start":{"line":49,"column":4},"end":{"line":56,"column":5}}],"line":49},"10":{"loc":{"start":{"line":61,"column":4},"end":{"line":77,"column":5}},"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":77,"column":5}},{"start":{"line":61,"column":4},"end":{"line":77,"column":5}}],"line":61},"11":{"loc":{"start":{"line":62,"column":8},"end":{"line":64,"column":9}},"type":"if","locations":[{"start":{"line":62,"column":8},"end":{"line":64,"column":9}},{"start":{"line":62,"column":8},"end":{"line":64,"column":9}}],"line":62},"12":{"loc":{"start":{"line":67,"column":16},"end":{"line":74,"column":17}},"type":"if","locations":[{"start":{"line":67,"column":16},"end":{"line":74,"column":17}},{"start":{"line":67,"column":16},"end":{"line":74,"column":17}}],"line":67},"13":{"loc":{"start":{"line":70,"column":24},"end":{"line":72,"column":25}},"type":"if","locations":[{"start":{"line":70,"column":24},"end":{"line":72,"column":25}},{"start":{"line":70,"column":24},"end":{"line":72,"column":25}}],"line":70},"14":{"loc":{"start":{"line":84,"column":4},"end":{"line":94,"column":5}},"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":94,"column":5}},{"start":{"line":84,"column":4},"end":{"line":94,"column":5}}],"line":84},"15":{"loc":{"start":{"line":88,"column":9},"end":{"line":94,"column":5}},"type":"if","locations":[{"start":{"line":88,"column":9},"end":{"line":94,"column":5}},{"start":{"line":88,"column":9},"end":{"line":94,"column":5}}],"line":88},"16":{"loc":{"start":{"line":92,"column":9},"end":{"line":94,"column":5}},"type":"if","locations":[{"start":{"line":92,"column":9},"end":{"line":94,"column":5}},{"start":{"line":92,"column":9},"end":{"line":94,"column":5}}],"line":92},"17":{"loc":{"start":{"line":96,"column":4},"end":{"line":98,"column":5}},"type":"if","locations":[{"start":{"line":96,"column":4},"end":{"line":98,"column":5}},{"start":{"line":96,"column":4},"end":{"line":98,"column":5}}],"line":96},"18":{"loc":{"start":{"line":100,"column":8},"end":{"line":109,"column":9}},"type":"if","locations":[{"start":{"line":100,"column":8},"end":{"line":109,"column":9}},{"start":{"line":100,"column":8},"end":{"line":109,"column":9}}],"line":100},"19":{"loc":{"start":{"line":101,"column":12},"end":{"line":103,"column":13}},"type":"if","locations":[{"start":{"line":101,"column":12},"end":{"line":103,"column":13}},{"start":{"line":101,"column":12},"end":{"line":103,"column":13}}],"line":101},"20":{"loc":{"start":{"line":106,"column":12},"end":{"line":108,"column":13}},"type":"if","locations":[{"start":{"line":106,"column":12},"end":{"line":108,"column":13}},{"start":{"line":106,"column":12},"end":{"line":108,"column":13}}],"line":106},"21":{"loc":{"start":{"line":119,"column":4},"end":{"line":121,"column":5}},"type":"if","locations":[{"start":{"line":119,"column":4},"end":{"line":121,"column":5}},{"start":{"line":119,"column":4},"end":{"line":121,"column":5}}],"line":119},"22":{"loc":{"start":{"line":123,"column":8},"end":{"line":132,"column":9}},"type":"if","locations":[{"start":{"line":123,"column":8},"end":{"line":132,"column":9}},{"start":{"line":123,"column":8},"end":{"line":132,"column":9}}],"line":123},"23":{"loc":{"start":{"line":124,"column":12},"end":{"line":126,"column":13}},"type":"if","locations":[{"start":{"line":124,"column":12},"end":{"line":126,"column":13}},{"start":{"line":124,"column":12},"end":{"line":126,"column":13}}],"line":124},"24":{"loc":{"start":{"line":129,"column":12},"end":{"line":131,"column":13}},"type":"if","locations":[{"start":{"line":129,"column":12},"end":{"line":131,"column":13}},{"start":{"line":129,"column":12},"end":{"line":131,"column":13}}],"line":129},"25":{"loc":{"start":{"line":138,"column":4},"end":{"line":140,"column":5}},"type":"if","locations":[{"start":{"line":138,"column":4},"end":{"line":140,"column":5}},{"start":{"line":138,"column":4},"end":{"line":140,"column":5}}],"line":138},"26":{"loc":{"start":{"line":141,"column":4},"end":{"line":143,"column":5}},"type":"if","locations":[{"start":{"line":141,"column":4},"end":{"line":143,"column":5}},{"start":{"line":141,"column":4},"end":{"line":143,"column":5}}],"line":141},"27":{"loc":{"start":{"line":144,"column":4},"end":{"line":146,"column":5}},"type":"if","locations":[{"start":{"line":144,"column":4},"end":{"line":146,"column":5}},{"start":{"line":144,"column":4},"end":{"line":146,"column":5}}],"line":144},"28":{"loc":{"start":{"line":147,"column":4},"end":{"line":149,"column":5}},"type":"if","locations":[{"start":{"line":147,"column":4},"end":{"line":149,"column":5}},{"start":{"line":147,"column":4},"end":{"line":149,"column":5}}],"line":147},"29":{"loc":{"start":{"line":154,"column":4},"end":{"line":156,"column":5}},"type":"if","locations":[{"start":{"line":154,"column":4},"end":{"line":156,"column":5}},{"start":{"line":154,"column":4},"end":{"line":156,"column":5}}],"line":154},"30":{"loc":{"start":{"line":157,"column":4},"end":{"line":159,"column":5}},"type":"if","locations":[{"start":{"line":157,"column":4},"end":{"line":159,"column":5}},{"start":{"line":157,"column":4},"end":{"line":159,"column":5}}],"line":157},"31":{"loc":{"start":{"line":160,"column":4},"end":{"line":162,"column":5}},"type":"if","locations":[{"start":{"line":160,"column":4},"end":{"line":162,"column":5}},{"start":{"line":160,"column":4},"end":{"line":162,"column":5}}],"line":160},"32":{"loc":{"start":{"line":163,"column":4},"end":{"line":165,"column":5}},"type":"if","locations":[{"start":{"line":163,"column":4},"end":{"line":165,"column":5}},{"start":{"line":163,"column":4},"end":{"line":165,"column":5}}],"line":163},"33":{"loc":{"start":{"line":166,"column":4},"end":{"line":168,"column":5}},"type":"if","locations":[{"start":{"line":166,"column":4},"end":{"line":168,"column":5}},{"start":{"line":166,"column":4},"end":{"line":168,"column":5}}],"line":166},"34":{"loc":{"start":{"line":169,"column":4},"end":{"line":171,"column":5}},"type":"if","locations":[{"start":{"line":169,"column":4},"end":{"line":171,"column":5}},{"start":{"line":169,"column":4},"end":{"line":171,"column":5}}],"line":169},"35":{"loc":{"start":{"line":172,"column":4},"end":{"line":174,"column":5}},"type":"if","locations":[{"start":{"line":172,"column":4},"end":{"line":174,"column":5}},{"start":{"line":172,"column":4},"end":{"line":174,"column":5}}],"line":172},"36":{"loc":{"start":{"line":178,"column":4},"end":{"line":180,"column":5}},"type":"if","locations":[{"start":{"line":178,"column":4},"end":{"line":180,"column":5}},{"start":{"line":178,"column":4},"end":{"line":180,"column":5}}],"line":178},"37":{"loc":{"start":{"line":178,"column":8},"end":{"line":178,"column":52}},"type":"binary-expr","locations":[{"start":{"line":178,"column":8},"end":{"line":178,"column":29}},{"start":{"line":178,"column":33},"end":{"line":178,"column":52}}],"line":178},"38":{"loc":{"start":{"line":181,"column":4},"end":{"line":183,"column":5}},"type":"if","locations":[{"start":{"line":181,"column":4},"end":{"line":183,"column":5}},{"start":{"line":181,"column":4},"end":{"line":183,"column":5}}],"line":181},"39":{"loc":{"start":{"line":184,"column":4},"end":{"line":186,"column":5}},"type":"if","locations":[{"start":{"line":184,"column":4},"end":{"line":186,"column":5}},{"start":{"line":184,"column":4},"end":{"line":186,"column":5}}],"line":184},"40":{"loc":{"start":{"line":191,"column":4},"end":{"line":193,"column":5}},"type":"if","locations":[{"start":{"line":191,"column":4},"end":{"line":193,"column":5}},{"start":{"line":191,"column":4},"end":{"line":193,"column":5}}],"line":191},"41":{"loc":{"start":{"line":194,"column":4},"end":{"line":196,"column":5}},"type":"if","locations":[{"start":{"line":194,"column":4},"end":{"line":196,"column":5}},{"start":{"line":194,"column":4},"end":{"line":196,"column":5}}],"line":194},"42":{"loc":{"start":{"line":197,"column":4},"end":{"line":199,"column":5}},"type":"if","locations":[{"start":{"line":197,"column":4},"end":{"line":199,"column":5}},{"start":{"line":197,"column":4},"end":{"line":199,"column":5}}],"line":197},"43":{"loc":{"start":{"line":200,"column":4},"end":{"line":202,"column":5}},"type":"if","locations":[{"start":{"line":200,"column":4},"end":{"line":202,"column":5}},{"start":{"line":200,"column":4},"end":{"line":202,"column":5}}],"line":200},"44":{"loc":{"start":{"line":203,"column":4},"end":{"line":205,"column":5}},"type":"if","locations":[{"start":{"line":203,"column":4},"end":{"line":205,"column":5}},{"start":{"line":203,"column":4},"end":{"line":205,"column":5}}],"line":203},"45":{"loc":{"start":{"line":206,"column":4},"end":{"line":208,"column":5}},"type":"if","locations":[{"start":{"line":206,"column":4},"end":{"line":208,"column":5}},{"start":{"line":206,"column":4},"end":{"line":208,"column":5}}],"line":206},"46":{"loc":{"start":{"line":213,"column":4},"end":{"line":215,"column":5}},"type":"if","locations":[{"start":{"line":213,"column":4},"end":{"line":215,"column":5}},{"start":{"line":213,"column":4},"end":{"line":215,"column":5}}],"line":213},"47":{"loc":{"start":{"line":216,"column":4},"end":{"line":218,"column":5}},"type":"if","locations":[{"start":{"line":216,"column":4},"end":{"line":218,"column":5}},{"start":{"line":216,"column":4},"end":{"line":218,"column":5}}],"line":216},"48":{"loc":{"start":{"line":219,"column":4},"end":{"line":221,"column":5}},"type":"if","locations":[{"start":{"line":219,"column":4},"end":{"line":221,"column":5}},{"start":{"line":219,"column":4},"end":{"line":221,"column":5}}],"line":219},"49":{"loc":{"start":{"line":222,"column":4},"end":{"line":224,"column":5}},"type":"if","locations":[{"start":{"line":222,"column":4},"end":{"line":224,"column":5}},{"start":{"line":222,"column":4},"end":{"line":224,"column":5}}],"line":222},"50":{"loc":{"start":{"line":231,"column":12},"end":{"line":233,"column":13}},"type":"if","locations":[{"start":{"line":231,"column":12},"end":{"line":233,"column":13}},{"start":{"line":231,"column":12},"end":{"line":233,"column":13}}],"line":231}},"s":{"0":1,"1":1,"2":1,"3":54,"4":54,"5":54,"6":0,"7":0,"8":54,"9":9,"10":54,"11":31,"12":54,"13":8,"14":54,"15":6,"16":54,"17":400011,"18":54,"19":1,"20":9,"21":9,"22":4,"23":4,"24":25,"25":9,"26":5,"27":5,"28":48,"29":9,"30":5,"31":5,"32":5,"33":12,"34":12,"35":48,"36":5,"37":4,"38":4,"39":4,"40":1,"41":3,"42":3,"43":6,"44":3,"45":3,"46":123,"47":18,"48":3,"49":31,"50":31,"51":31,"52":31,"53":5,"54":5,"55":26,"56":7,"57":7,"58":19,"59":19,"60":31,"61":31,"62":0,"63":31,"64":1810228,"65":1809136,"66":323766,"67":1092,"68":720,"69":31,"70":8,"71":8,"72":8,"73":8,"74":8,"75":8,"76":0,"77":8,"78":516896,"79":516896,"80":10833,"81":0,"82":0,"83":8,"84":516896,"85":516896,"86":0,"87":516896,"88":193836,"89":516896,"90":0,"91":516896,"92":64612,"93":516896,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":516896,"111":129224,"112":387672,"113":64612,"114":323060,"115":64612,"116":258448,"117":1809136,"118":1809136,"119":1615300,"120":1809136,"121":193836,"122":1809136,"123":0,"124":1809136,"125":0,"126":1809136,"127":1163016,"128":646120,"129":258448,"130":387672,"131":1092,"132":1092,"133":0,"134":1092,"135":1092,"136":1092,"137":364,"138":728,"139":364,"140":364,"141":6,"142":6,"143":6,"144":387672,"145":64619,"146":6},"f":{"0":54,"1":9,"2":5,"3":12,"4":4,"5":3,"6":6,"7":31,"8":1810228,"9":8,"10":516896,"11":516896,"12":0,"13":516896,"14":1809136,"15":1092,"16":6,"17":6},"b":{"0":[0,54],"1":[9,45],"2":[54,49],"3":[31,23],"4":[54,35,28],"5":[8,46],"6":[6,48],"7":[4,5],"8":[5,4],"9":[5,0],"10":[4,0],"11":[1,3],"12":[3,3],"13":[18,105],"14":[5,26],"15":[7,19],"16":[19,0],"17":[0,31],"18":[1809136,1092],"19":[323766,1485370],"20":[720,372],"21":[0,8],"22":[516896,0],"23":[10833,506063],"24":[0,0],"25":[0,516896],"26":[193836,323060],"27":[0,516896],"28":[64612,452284],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[129224,387672],"37":[516896,193836],"38":[64612,323060],"39":[64612,258448],"40":[1615300,193836],"41":[193836,1615300],"42":[0,1809136],"43":[0,1809136],"44":[1163016,646120],"45":[258448,387672],"46":[0,1092],"47":[1092,0],"48":[364,728],"49":[364,364],"50":[64619,323053]},"inputSourceMap":{"version":3,"file":"/Users/tarunn/project_team222/src/controller/GetResultHelpers.ts","sources":["/Users/tarunn/project_team222/src/controller/GetResultHelpers.ts"],"names":[],"mappings":"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","sourcesContent":["import { Filter, LogicComparison, MComparison, Negation, SComparison } from \"./Query\";\nimport { InsightDatasetKind, InsightError } from \"./IInsightFacade\";\n\nexport async function getSections(\n\tfilter: Filter,\n\tdataset: { id: string; kind: InsightDatasetKind; numRows: number; sections: any[] }\n): Promise<Set<any>> {\n\tconst sections = new Set<any>();\n\tlet toAdd: any[] = [];\n\n\tif (Object.keys(filter).length === 0) {\n\t\tfor (const section of dataset.sections) {\n\t\t\tsections.add(section);\n\t\t}\n\t}\n\n\tif (\"OR\" in filter || \"AND\" in filter) {\n\t\ttoAdd = await handleLogicComparison(filter as LogicComparison, dataset);\n\t}\n\n\tif (\"GT\" in filter || \"LT\" in filter || \"EQ\" in filter) {\n\t\ttoAdd = await handleMComparison(filter as MComparison, dataset);\n\t}\n\n\tif (\"IS\" in filter) {\n\t\ttoAdd = await handleSComparison(filter as SComparison, dataset);\n\t}\n\n\tif (\"NOT\" in filter) {\n\t\ttoAdd = await handleNegation(filter as Negation, dataset);\n\t}\n\tfor (const section of toAdd) {\n\t\tsections.add(section);\n\t}\n\n\treturn sections;\n}\n\nasync function handleLogicComparison(\n\tfilter: LogicComparison,\n\tdataset: { id: string; kind: InsightDatasetKind; numRows: number; sections: any[] }\n): Promise<any[]> {\n\tconst sections = new Set<any>();\n\n\tif (filter.AND) {\n\t\tconst toAdd = await handleAnd(filter.AND, dataset);\n\t\tfor (const section of toAdd) {\n\t\t\tsections.add(section);\n\t\t}\n\t}\n\tif (filter.OR) {\n\t\tconst toAdd = await handleOr(filter.OR, dataset);\n\t\tfor (const section of toAdd) {\n\t\t\tsections.add(section);\n\t\t}\n\t}\n\treturn Array.from(sections);\n}\n\nasync function handleOr(\n\tfilters: Filter[] | undefined,\n\tdataset: { id: string; kind: InsightDatasetKind; numRows: number; sections: any[] }\n): Promise<any[]> {\n\tconst sections = new Set<any>();\n\n\tif (filters) {\n\t\tawait Promise.all(\n\t\t\tfilters.map(async (filter) => {\n\t\t\t\tconst toAdd = await getSections(filter, dataset);\n\t\t\t\tfor (const section of toAdd) {\n\t\t\t\t\tsections.add(section);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\treturn Array.from(sections);\n}\n\nasync function handleAnd(\n\tfilters: Filter[] | undefined,\n\tdataset: { id: string; kind: InsightDatasetKind; numRows: number; sections: any[] }\n): Promise<any[]> {\n\tconst sections = new Set<any>();\n\n\tif (filters) {\n\t\tif (filters.length === 1) {\n\t\t\treturn Array.from(await getSections(filters[0], dataset));\n\t\t}\n\t\tawait getSections(filters[0], dataset).then(async (validSections) => {\n\t\t\tawait Promise.all(\n\t\t\t\tfilters.map(async (filter) => {\n\t\t\t\t\tif (filter !== filters[0]) {\n\t\t\t\t\t\tconst toCheck = await getSections(filter, dataset);\n\t\t\t\t\t\tfor (const section of toCheck) {\n\t\t\t\t\t\t\tif (validSections.has(section)) {\n\t\t\t\t\t\t\t\tsections.add(section);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\t\t});\n\t}\n\treturn Array.from(sections);\n}\n\nasync function handleMComparison(\n\tfilter: MComparison,\n\tdataset: { id: string; kind: InsightDatasetKind; numRows: number; sections: any[] }\n): Promise<any[]> {\n\tconst sections = new Set<any>();\n\tlet record: Record<string, number> = { \"\": 0 };\n\tlet type = \"GT\";\n\tif (filter.EQ) {\n\t\trecord = filter.EQ;\n\t\ttype = \"EQ\";\n\t} else if (filter.LT) {\n\t\trecord = filter.LT;\n\t\ttype = \"LT\";\n\t} else if (filter.GT) {\n\t\trecord = filter.GT;\n\t}\n\tconst [MKey, input] = Object.entries(record)[0];\n\tif (MKey.split(\"_\")[0] !== dataset.id) {\n\t\tthrow new InsightError(\"Query references multiple datasets1\");\n\t}\n\n\tawait Promise.all(\n\t\tdataset.sections.map(async (section) => {\n\t\t\tif (dataset.kind === InsightDatasetKind.Sections) {\n\t\t\t\tif (await checkMSection(section, MKey.split(\"_\")[1], input, type)) {\n\t\t\t\t\tsections.add(section);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (await checkMRoom(section, MKey.split(\"_\")[1], input, type)) {\n\t\t\t\t\tsections.add(section);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t);\n\n\treturn Array.from(sections);\n}\n\nasync function handleSComparison(\n\tfilter: SComparison,\n\tdataset: { id: string; kind: InsightDatasetKind; numRows: number; sections: any[] }\n): Promise<any[]> {\n\tconst sections = new Set<any>();\n\tconst record = filter.IS;\n\tconst [SKey, input] = Object.entries(record)[0];\n\tconst id = SKey.split(\"_\")[0];\n\tconst field = SKey.split(\"_\")[1];\n\tif (id !== dataset.id) {\n\t\tthrow new InsightError(\"Query references multiple datasets2\");\n\t}\n\n\tawait Promise.all(\n\t\tdataset.sections.map(async (section) => {\n\t\t\tif (dataset.kind === InsightDatasetKind.Sections) {\n\t\t\t\tif (await checkSSection(section, field, input)) {\n\t\t\t\t\tsections.add(section);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (await checkSRoom(section, field, input)) {\n\t\t\t\t\tsections.add(section);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t);\n\n\treturn Array.from(sections);\n}\n\nasync function checkSSection(section: any, field: string, input: string): Promise<Boolean> {\n\tlet toCompare: string = section.Subject;\n\tif (field === \"uuid\") {\n\t\ttoCompare = section.id;\n\t}\n\tif (field === \"id\") {\n\t\ttoCompare = section.Course;\n\t}\n\tif (field === \"title\") {\n\t\ttoCompare = section.Title;\n\t}\n\tif (field === \"instructor\") {\n\t\ttoCompare = section.Professor;\n\t}\n\treturn handleSCompare(input, toCompare);\n}\nasync function checkSRoom(section: any, field: string, input: string): Promise<Boolean> {\n\tlet toCompare: string = section.fullname;\n\tif (field === \"shortname\") {\n\t\ttoCompare = section.shortname;\n\t}\n\tif (field === \"number\") {\n\t\ttoCompare = section.number;\n\t}\n\tif (field === \"name\") {\n\t\ttoCompare = section.name;\n\t}\n\tif (field === \"address\") {\n\t\ttoCompare = section.address;\n\t}\n\tif (field === \"type\") {\n\t\ttoCompare = section.type;\n\t}\n\tif (field === \"furniture\") {\n\t\ttoCompare = section.furniture;\n\t}\n\tif (field === \"href\") {\n\t\ttoCompare = section.href;\n\t}\n\treturn handleSCompare(input, toCompare);\n}\n\nasync function handleSCompare(input: string, toCompare: string): Promise<boolean> {\n\tif (input.startsWith(\"*\") && input.endsWith(\"*\")) {\n\t\treturn toCompare.includes(input.slice(1, -1));\n\t}\n\tif (input.startsWith(\"*\")) {\n\t\treturn toCompare.endsWith(input.slice(1));\n\t}\n\tif (input.endsWith(\"*\")) {\n\t\treturn toCompare.startsWith(input.slice(0, -1));\n\t}\n\treturn toCompare === input;\n}\n\nasync function checkMSection(section: any, field: string, input: number, type: string): Promise<Boolean> {\n\tlet toCompare: number = section.Audit;\n\tif (field === \"avg\") {\n\t\ttoCompare = section.Avg;\n\t}\n\tif (field === \"year\") {\n\t\ttoCompare = section.Year;\n\t}\n\tif (field === \"pass\") {\n\t\ttoCompare = section.Pass;\n\t}\n\tif (field === \"fail\") {\n\t\ttoCompare = section.Fail;\n\t}\n\n\tif (type === \"GT\") {\n\t\treturn toCompare > input;\n\t}\n\tif (type === \"EQ\") {\n\t\treturn toCompare === input;\n\t}\n\treturn toCompare < input;\n}\nasync function checkMRoom(section: any, field: string, input: number, type: string): Promise<Boolean> {\n\tlet toCompare: number = section.lat;\n\tif (field === \"lon\") {\n\t\ttoCompare = section.lon;\n\t}\n\tif (field === \"seats\") {\n\t\ttoCompare = section.seats;\n\t}\n\n\tif (type === \"GT\") {\n\t\treturn toCompare > input;\n\t}\n\tif (type === \"EQ\") {\n\t\treturn toCompare === input;\n\t}\n\treturn toCompare < input;\n}\nasync function handleNegation(\n\tfilter: Negation,\n\tdataset: { id: string; kind: InsightDatasetKind; numRows: number; sections: any[] }\n): Promise<any[]> {\n\tconst sections = new Set<any>();\n\tawait getSections(filter.NOT, dataset).then((invalidSections) => {\n\t\tfor (const section of dataset.sections) {\n\t\t\tif (!invalidSections.has(section)) {\n\t\t\t\tsections.add(section);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn Array.from(sections);\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"36a49308984ba6237400576a770106f4b59fae75","contentHash":"6422298948a5d21e358d72ffd0595943b86c53b7319961febe0e03b98d28bb03"},"/Users/tarunn/project_team222/src/controller/Transformations.ts":{"path":"/Users/tarunn/project_team222/src/controller/Transformations.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":69}},"4":{"start":{"line":7,"column":16},"end":{"line":7,"column":34}},"5":{"start":{"line":8,"column":25},"end":{"line":8,"column":52}},"6":{"start":{"line":9,"column":21},"end":{"line":9,"column":59}},"7":{"start":{"line":10,"column":26},"end":{"line":10,"column":54}},"8":{"start":{"line":11,"column":17},"end":{"line":11,"column":18}},"9":{"start":{"line":12,"column":16},"end":{"line":34,"column":1}},"10":{"start":{"line":35,"column":22},"end":{"line":35,"column":31}},"11":{"start":{"line":36,"column":20},"end":{"line":36,"column":24}},"12":{"start":{"line":38,"column":27},"end":{"line":38,"column":56}},"13":{"start":{"line":39,"column":4},"end":{"line":39,"column":26}},"14":{"start":{"line":40,"column":4},"end":{"line":40,"column":90}},"15":{"start":{"line":42,"column":0},"end":{"line":42,"column":54}},"16":{"start":{"line":44,"column":19},"end":{"line":44,"column":21}},"17":{"start":{"line":45,"column":23},"end":{"line":45,"column":32}},"18":{"start":{"line":46,"column":21},"end":{"line":46,"column":56}},"19":{"start":{"line":47,"column":4},"end":{"line":66,"column":5}},"20":{"start":{"line":48,"column":24},"end":{"line":48,"column":64}},"21":{"start":{"line":49,"column":24},"end":{"line":49,"column":26}},"22":{"start":{"line":50,"column":8},"end":{"line":57,"column":9}},"23":{"start":{"line":51,"column":30},"end":{"line":51,"column":56}},"24":{"start":{"line":52,"column":12},"end":{"line":54,"column":13}},"25":{"start":{"line":53,"column":16},"end":{"line":53,"column":36}},"26":{"start":{"line":55,"column":26},"end":{"line":55,"column":52}},"27":{"start":{"line":56,"column":12},"end":{"line":56,"column":54}},"28":{"start":{"line":58,"column":24},"end":{"line":58,"column":26}},"29":{"start":{"line":59,"column":8},"end":{"line":59,"column":48}},"30":{"start":{"line":60,"column":8},"end":{"line":60,"column":47}},"31":{"start":{"line":61,"column":8},"end":{"line":64,"column":9}},"32":{"start":{"line":62,"column":12},"end":{"line":62,"column":38}},"33":{"start":{"line":63,"column":12},"end":{"line":63,"column":44}},"34":{"start":{"line":65,"column":8},"end":{"line":65,"column":39}},"35":{"start":{"line":67,"column":4},"end":{"line":67,"column":18}},"36":{"start":{"line":70,"column":19},"end":{"line":70,"column":30}},"37":{"start":{"line":71,"column":4},"end":{"line":85,"column":5}},"38":{"start":{"line":72,"column":22},"end":{"line":72,"column":24}},"39":{"start":{"line":73,"column":8},"end":{"line":78,"column":9}},"40":{"start":{"line":74,"column":24},"end":{"line":74,"column":43}},"41":{"start":{"line":75,"column":12},"end":{"line":77,"column":13}},"42":{"start":{"line":76,"column":16},"end":{"line":76,"column":45}},"43":{"start":{"line":79,"column":8},"end":{"line":83,"column":9}},"44":{"start":{"line":80,"column":12},"end":{"line":82,"column":13}},"45":{"start":{"line":81,"column":16},"end":{"line":81,"column":70}},"46":{"start":{"line":84,"column":8},"end":{"line":84,"column":27}},"47":{"start":{"line":86,"column":4},"end":{"line":86,"column":18}},"48":{"start":{"line":89,"column":18},"end":{"line":89,"column":56}},"49":{"start":{"line":90,"column":16},"end":{"line":90,"column":56}},"50":{"start":{"line":91,"column":17},"end":{"line":91,"column":18}},"51":{"start":{"line":92,"column":4},"end":{"line":94,"column":5}},"52":{"start":{"line":93,"column":8},"end":{"line":93,"column":43}},"53":{"start":{"line":95,"column":4},"end":{"line":97,"column":5}},"54":{"start":{"line":96,"column":8},"end":{"line":96,"column":39}},"55":{"start":{"line":98,"column":4},"end":{"line":100,"column":5}},"56":{"start":{"line":99,"column":8},"end":{"line":99,"column":39}},"57":{"start":{"line":101,"column":4},"end":{"line":103,"column":5}},"58":{"start":{"line":102,"column":8},"end":{"line":102,"column":39}},"59":{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},"60":{"start":{"line":105,"column":8},"end":{"line":105,"column":41}},"61":{"start":{"line":107,"column":4},"end":{"line":107,"column":18}},"62":{"start":{"line":110,"column":22},"end":{"line":110,"column":48}},"63":{"start":{"line":111,"column":16},"end":{"line":111,"column":43}},"64":{"start":{"line":112,"column":18},"end":{"line":112,"column":19}},"65":{"start":{"line":113,"column":4},"end":{"line":127,"column":5}},"66":{"start":{"line":114,"column":24},"end":{"line":114,"column":65}},"67":{"start":{"line":115,"column":20},"end":{"line":115,"column":38}},"68":{"start":{"line":116,"column":8},"end":{"line":123,"column":9}},"69":{"start":{"line":117,"column":12},"end":{"line":122,"column":13}},"70":{"start":{"line":118,"column":16},"end":{"line":118,"column":36}},"71":{"start":{"line":121,"column":16},"end":{"line":121,"column":38}},"72":{"start":{"line":124,"column":24},"end":{"line":124,"column":55}},"73":{"start":{"line":125,"column":8},"end":{"line":125,"column":35}},"74":{"start":{"line":126,"column":8},"end":{"line":126,"column":18}},"75":{"start":{"line":128,"column":16},"end":{"line":128,"column":42}},"76":{"start":{"line":129,"column":4},"end":{"line":129,"column":26}},"77":{"start":{"line":130,"column":4},"end":{"line":130,"column":41}},"78":{"start":{"line":133,"column":22},"end":{"line":133,"column":48}},"79":{"start":{"line":134,"column":25},"end":{"line":134,"column":67}},"80":{"start":{"line":135,"column":21},"end":{"line":135,"column":44}},"81":{"start":{"line":136,"column":16},"end":{"line":136,"column":20}},"82":{"start":{"line":137,"column":4},"end":{"line":156,"column":5}},"83":{"start":{"line":138,"column":8},"end":{"line":155,"column":9}},"84":{"start":{"line":139,"column":28},"end":{"line":139,"column":69}},"85":{"start":{"line":140,"column":24},"end":{"line":140,"column":42}},"86":{"start":{"line":141,"column":12},"end":{"line":148,"column":13}},"87":{"start":{"line":142,"column":16},"end":{"line":147,"column":17}},"88":{"start":{"line":143,"column":20},"end":{"line":143,"column":40}},"89":{"start":{"line":146,"column":20},"end":{"line":146,"column":42}},"90":{"start":{"line":149,"column":12},"end":{"line":151,"column":13}},"91":{"start":{"line":150,"column":16},"end":{"line":150,"column":35}},"92":{"start":{"line":154,"column":12},"end":{"line":154,"column":26}},"93":{"start":{"line":157,"column":4},"end":{"line":157,"column":26}},"94":{"start":{"line":158,"column":4},"end":{"line":158,"column":22}},"95":{"start":{"line":161,"column":22},"end":{"line":161,"column":48}},"96":{"start":{"line":162,"column":25},"end":{"line":162,"column":67}},"97":{"start":{"line":163,"column":21},"end":{"line":163,"column":44}},"98":{"start":{"line":164,"column":16},"end":{"line":164,"column":20}},"99":{"start":{"line":165,"column":4},"end":{"line":184,"column":5}},"100":{"start":{"line":166,"column":8},"end":{"line":183,"column":9}},"101":{"start":{"line":167,"column":28},"end":{"line":167,"column":69}},"102":{"start":{"line":168,"column":24},"end":{"line":168,"column":42}},"103":{"start":{"line":169,"column":12},"end":{"line":176,"column":13}},"104":{"start":{"line":170,"column":16},"end":{"line":175,"column":17}},"105":{"start":{"line":171,"column":20},"end":{"line":171,"column":40}},"106":{"start":{"line":174,"column":20},"end":{"line":174,"column":42}},"107":{"start":{"line":177,"column":12},"end":{"line":179,"column":13}},"108":{"start":{"line":178,"column":16},"end":{"line":178,"column":35}},"109":{"start":{"line":182,"column":12},"end":{"line":182,"column":26}},"110":{"start":{"line":185,"column":4},"end":{"line":185,"column":26}},"111":{"start":{"line":186,"column":4},"end":{"line":186,"column":22}},"112":{"start":{"line":189,"column":22},"end":{"line":189,"column":48}},"113":{"start":{"line":190,"column":16},"end":{"line":190,"column":17}},"114":{"start":{"line":191,"column":4},"end":{"line":203,"column":5}},"115":{"start":{"line":192,"column":24},"end":{"line":192,"column":65}},"116":{"start":{"line":193,"column":20},"end":{"line":193,"column":38}},"117":{"start":{"line":194,"column":8},"end":{"line":201,"column":9}},"118":{"start":{"line":195,"column":12},"end":{"line":200,"column":13}},"119":{"start":{"line":196,"column":16},"end":{"line":196,"column":36}},"120":{"start":{"line":199,"column":16},"end":{"line":199,"column":38}},"121":{"start":{"line":202,"column":8},"end":{"line":202,"column":30}},"122":{"start":{"line":204,"column":4},"end":{"line":204,"column":26}},"123":{"start":{"line":205,"column":4},"end":{"line":205,"column":43}},"124":{"start":{"line":208,"column":22},"end":{"line":208,"column":48}},"125":{"start":{"line":209,"column":20},"end":{"line":209,"column":29}},"126":{"start":{"line":210,"column":16},"end":{"line":210,"column":17}},"127":{"start":{"line":211,"column":4},"end":{"line":229,"column":5}},"128":{"start":{"line":212,"column":24},"end":{"line":212,"column":65}},"129":{"start":{"line":213,"column":20},"end":{"line":213,"column":38}},"130":{"start":{"line":214,"column":8},"end":{"line":221,"column":9}},"131":{"start":{"line":215,"column":12},"end":{"line":220,"column":13}},"132":{"start":{"line":216,"column":16},"end":{"line":216,"column":36}},"133":{"start":{"line":219,"column":16},"end":{"line":219,"column":38}},"134":{"start":{"line":222,"column":8},"end":{"line":224,"column":9}},"135":{"start":{"line":223,"column":12},"end":{"line":223,"column":34}},"136":{"start":{"line":225,"column":8},"end":{"line":228,"column":9}},"137":{"start":{"line":226,"column":12},"end":{"line":226,"column":20}},"138":{"start":{"line":227,"column":12},"end":{"line":227,"column":31}},"139":{"start":{"line":230,"column":4},"end":{"line":230,"column":26}},"140":{"start":{"line":231,"column":4},"end":{"line":231,"column":17}},"141":{"start":{"line":234,"column":4},"end":{"line":236,"column":5}},"142":{"start":{"line":235,"column":8},"end":{"line":235,"column":92}},"143":{"start":{"line":237,"column":18},"end":{"line":237,"column":40}},"144":{"start":{"line":238,"column":4},"end":{"line":240,"column":5}},"145":{"start":{"line":239,"column":8},"end":{"line":239,"column":90}},"146":{"start":{"line":241,"column":4},"end":{"line":245,"column":5}},"147":{"start":{"line":242,"column":8},"end":{"line":244,"column":9}},"148":{"start":{"line":243,"column":12},"end":{"line":243,"column":75}},"149":{"start":{"line":246,"column":24},"end":{"line":249,"column":25}},"150":{"start":{"line":249,"column":19},"end":{"line":249,"column":24}},"151":{"start":{"line":250,"column":4},"end":{"line":252,"column":5}},"152":{"start":{"line":251,"column":8},"end":{"line":251,"column":83}},"153":{"start":{"line":253,"column":4},"end":{"line":253,"column":16}},"154":{"start":{"line":255,"column":0},"end":{"line":255,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"handleTransformations","decl":{"start":{"line":37,"column":15},"end":{"line":37,"column":36}},"loc":{"start":{"line":37,"column":58},"end":{"line":41,"column":1}},"line":37},"2":{"name":"handleGroup","decl":{"start":{"line":43,"column":9},"end":{"line":43,"column":20}},"loc":{"start":{"line":43,"column":28},"end":{"line":68,"column":1}},"line":43},"3":{"name":"handleApply","decl":{"start":{"line":69,"column":15},"end":{"line":69,"column":26}},"loc":{"start":{"line":69,"column":59},"end":{"line":87,"column":1}},"line":69},"4":{"name":"handleRule","decl":{"start":{"line":88,"column":9},"end":{"line":88,"column":19}},"loc":{"start":{"line":88,"column":33},"end":{"line":108,"column":1}},"line":88},"5":{"name":"handleAverage","decl":{"start":{"line":109,"column":9},"end":{"line":109,"column":22}},"loc":{"start":{"line":109,"column":35},"end":{"line":131,"column":1}},"line":109},"6":{"name":"handleMax","decl":{"start":{"line":132,"column":9},"end":{"line":132,"column":18}},"loc":{"start":{"line":132,"column":31},"end":{"line":159,"column":1}},"line":132},"7":{"name":"handleMin","decl":{"start":{"line":160,"column":9},"end":{"line":160,"column":18}},"loc":{"start":{"line":160,"column":31},"end":{"line":187,"column":1}},"line":160},"8":{"name":"handleSum","decl":{"start":{"line":188,"column":9},"end":{"line":188,"column":18}},"loc":{"start":{"line":188,"column":31},"end":{"line":206,"column":1}},"line":188},"9":{"name":"handleCount","decl":{"start":{"line":207,"column":9},"end":{"line":207,"column":20}},"loc":{"start":{"line":207,"column":33},"end":{"line":232,"column":1}},"line":207},"10":{"name":"validateApplyRecord","decl":{"start":{"line":233,"column":15},"end":{"line":233,"column":34}},"loc":{"start":{"line":233,"column":49},"end":{"line":254,"column":1}},"line":233},"11":{"name":"(anonymous_11)","decl":{"start":{"line":249,"column":13},"end":{"line":249,"column":14}},"loc":{"start":{"line":249,"column":19},"end":{"line":249,"column":24}},"line":249}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":52,"column":12},"end":{"line":54,"column":13}},"type":"if","locations":[{"start":{"line":52,"column":12},"end":{"line":54,"column":13}},{"start":{"line":52,"column":12},"end":{"line":54,"column":13}}],"line":52},"4":{"loc":{"start":{"line":52,"column":16},"end":{"line":52,"column":69}},"type":"binary-expr","locations":[{"start":{"line":52,"column":16},"end":{"line":52,"column":36}},{"start":{"line":52,"column":40},"end":{"line":52,"column":69}}],"line":52},"5":{"loc":{"start":{"line":61,"column":8},"end":{"line":64,"column":9}},"type":"if","locations":[{"start":{"line":61,"column":8},"end":{"line":64,"column":9}},{"start":{"line":61,"column":8},"end":{"line":64,"column":9}}],"line":61},"6":{"loc":{"start":{"line":75,"column":12},"end":{"line":77,"column":13}},"type":"if","locations":[{"start":{"line":75,"column":12},"end":{"line":77,"column":13}},{"start":{"line":75,"column":12},"end":{"line":77,"column":13}}],"line":75},"7":{"loc":{"start":{"line":80,"column":12},"end":{"line":82,"column":13}},"type":"if","locations":[{"start":{"line":80,"column":12},"end":{"line":82,"column":13}},{"start":{"line":80,"column":12},"end":{"line":82,"column":13}}],"line":80},"8":{"loc":{"start":{"line":92,"column":4},"end":{"line":94,"column":5}},"type":"if","locations":[{"start":{"line":92,"column":4},"end":{"line":94,"column":5}},{"start":{"line":92,"column":4},"end":{"line":94,"column":5}}],"line":92},"9":{"loc":{"start":{"line":95,"column":4},"end":{"line":97,"column":5}},"type":"if","locations":[{"start":{"line":95,"column":4},"end":{"line":97,"column":5}},{"start":{"line":95,"column":4},"end":{"line":97,"column":5}}],"line":95},"10":{"loc":{"start":{"line":98,"column":4},"end":{"line":100,"column":5}},"type":"if","locations":[{"start":{"line":98,"column":4},"end":{"line":100,"column":5}},{"start":{"line":98,"column":4},"end":{"line":100,"column":5}}],"line":98},"11":{"loc":{"start":{"line":101,"column":4},"end":{"line":103,"column":5}},"type":"if","locations":[{"start":{"line":101,"column":4},"end":{"line":103,"column":5}},{"start":{"line":101,"column":4},"end":{"line":103,"column":5}}],"line":101},"12":{"loc":{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},{"start":{"line":104,"column":4},"end":{"line":106,"column":5}}],"line":104},"13":{"loc":{"start":{"line":116,"column":8},"end":{"line":123,"column":9}},"type":"if","locations":[{"start":{"line":116,"column":8},"end":{"line":123,"column":9}},{"start":{"line":116,"column":8},"end":{"line":123,"column":9}}],"line":116},"14":{"loc":{"start":{"line":117,"column":12},"end":{"line":122,"column":13}},"type":"if","locations":[{"start":{"line":117,"column":12},"end":{"line":122,"column":13}},{"start":{"line":117,"column":12},"end":{"line":122,"column":13}}],"line":117},"15":{"loc":{"start":{"line":138,"column":8},"end":{"line":155,"column":9}},"type":"if","locations":[{"start":{"line":138,"column":8},"end":{"line":155,"column":9}},{"start":{"line":138,"column":8},"end":{"line":155,"column":9}}],"line":138},"16":{"loc":{"start":{"line":141,"column":12},"end":{"line":148,"column":13}},"type":"if","locations":[{"start":{"line":141,"column":12},"end":{"line":148,"column":13}},{"start":{"line":141,"column":12},"end":{"line":148,"column":13}}],"line":141},"17":{"loc":{"start":{"line":142,"column":16},"end":{"line":147,"column":17}},"type":"if","locations":[{"start":{"line":142,"column":16},"end":{"line":147,"column":17}},{"start":{"line":142,"column":16},"end":{"line":147,"column":17}}],"line":142},"18":{"loc":{"start":{"line":149,"column":12},"end":{"line":151,"column":13}},"type":"if","locations":[{"start":{"line":149,"column":12},"end":{"line":151,"column":13}},{"start":{"line":149,"column":12},"end":{"line":151,"column":13}}],"line":149},"19":{"loc":{"start":{"line":166,"column":8},"end":{"line":183,"column":9}},"type":"if","locations":[{"start":{"line":166,"column":8},"end":{"line":183,"column":9}},{"start":{"line":166,"column":8},"end":{"line":183,"column":9}}],"line":166},"20":{"loc":{"start":{"line":169,"column":12},"end":{"line":176,"column":13}},"type":"if","locations":[{"start":{"line":169,"column":12},"end":{"line":176,"column":13}},{"start":{"line":169,"column":12},"end":{"line":176,"column":13}}],"line":169},"21":{"loc":{"start":{"line":170,"column":16},"end":{"line":175,"column":17}},"type":"if","locations":[{"start":{"line":170,"column":16},"end":{"line":175,"column":17}},{"start":{"line":170,"column":16},"end":{"line":175,"column":17}}],"line":170},"22":{"loc":{"start":{"line":177,"column":12},"end":{"line":179,"column":13}},"type":"if","locations":[{"start":{"line":177,"column":12},"end":{"line":179,"column":13}},{"start":{"line":177,"column":12},"end":{"line":179,"column":13}}],"line":177},"23":{"loc":{"start":{"line":194,"column":8},"end":{"line":201,"column":9}},"type":"if","locations":[{"start":{"line":194,"column":8},"end":{"line":201,"column":9}},{"start":{"line":194,"column":8},"end":{"line":201,"column":9}}],"line":194},"24":{"loc":{"start":{"line":195,"column":12},"end":{"line":200,"column":13}},"type":"if","locations":[{"start":{"line":195,"column":12},"end":{"line":200,"column":13}},{"start":{"line":195,"column":12},"end":{"line":200,"column":13}}],"line":195},"25":{"loc":{"start":{"line":214,"column":8},"end":{"line":221,"column":9}},"type":"if","locations":[{"start":{"line":214,"column":8},"end":{"line":221,"column":9}},{"start":{"line":214,"column":8},"end":{"line":221,"column":9}}],"line":214},"26":{"loc":{"start":{"line":215,"column":12},"end":{"line":220,"column":13}},"type":"if","locations":[{"start":{"line":215,"column":12},"end":{"line":220,"column":13}},{"start":{"line":215,"column":12},"end":{"line":220,"column":13}}],"line":215},"27":{"loc":{"start":{"line":222,"column":8},"end":{"line":224,"column":9}},"type":"if","locations":[{"start":{"line":222,"column":8},"end":{"line":224,"column":9}},{"start":{"line":222,"column":8},"end":{"line":224,"column":9}}],"line":222},"28":{"loc":{"start":{"line":225,"column":8},"end":{"line":228,"column":9}},"type":"if","locations":[{"start":{"line":225,"column":8},"end":{"line":228,"column":9}},{"start":{"line":225,"column":8},"end":{"line":228,"column":9}}],"line":225},"29":{"loc":{"start":{"line":234,"column":4},"end":{"line":236,"column":5}},"type":"if","locations":[{"start":{"line":234,"column":4},"end":{"line":236,"column":5}},{"start":{"line":234,"column":4},"end":{"line":236,"column":5}}],"line":234},"30":{"loc":{"start":{"line":238,"column":4},"end":{"line":240,"column":5}},"type":"if","locations":[{"start":{"line":238,"column":4},"end":{"line":240,"column":5}},{"start":{"line":238,"column":4},"end":{"line":240,"column":5}}],"line":238},"31":{"loc":{"start":{"line":238,"column":10},"end":{"line":238,"column":103}},"type":"binary-expr","locations":[{"start":{"line":238,"column":10},"end":{"line":238,"column":25}},{"start":{"line":238,"column":29},"end":{"line":238,"column":44}},{"start":{"line":238,"column":48},"end":{"line":238,"column":63}},{"start":{"line":238,"column":67},"end":{"line":238,"column":82}},{"start":{"line":238,"column":86},"end":{"line":238,"column":103}}],"line":238},"32":{"loc":{"start":{"line":241,"column":4},"end":{"line":245,"column":5}},"type":"if","locations":[{"start":{"line":241,"column":4},"end":{"line":245,"column":5}},{"start":{"line":241,"column":4},"end":{"line":245,"column":5}}],"line":241},"33":{"loc":{"start":{"line":241,"column":8},"end":{"line":241,"column":80}},"type":"binary-expr","locations":[{"start":{"line":241,"column":8},"end":{"line":241,"column":23}},{"start":{"line":241,"column":27},"end":{"line":241,"column":42}},{"start":{"line":241,"column":46},"end":{"line":241,"column":61}},{"start":{"line":241,"column":65},"end":{"line":241,"column":80}}],"line":241},"34":{"loc":{"start":{"line":242,"column":8},"end":{"line":244,"column":9}},"type":"if","locations":[{"start":{"line":242,"column":8},"end":{"line":244,"column":9}},{"start":{"line":242,"column":8},"end":{"line":244,"column":9}}],"line":242},"35":{"loc":{"start":{"line":250,"column":4},"end":{"line":252,"column":5}},"type":"if","locations":[{"start":{"line":250,"column":4},"end":{"line":252,"column":5}},{"start":{"line":250,"column":4},"end":{"line":252,"column":5}}],"line":250}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":9,"13":9,"14":9,"15":1,"16":9,"17":9,"18":9,"19":9,"20":441,"21":441,"22":441,"23":1225,"24":1225,"25":20,"26":1225,"27":1225,"28":441,"29":441,"30":441,"31":441,"32":200,"33":200,"34":441,"35":9,"36":9,"37":9,"38":200,"39":200,"40":678,"41":678,"42":640,"43":200,"44":257,"45":200,"46":200,"47":9,"48":200,"49":200,"50":200,"51":200,"52":86,"53":200,"54":38,"55":200,"56":38,"57":200,"58":19,"59":200,"60":19,"61":200,"62":86,"63":86,"64":86,"65":86,"66":147,"67":147,"68":147,"69":0,"70":0,"71":0,"72":147,"73":147,"74":147,"75":86,"76":86,"77":86,"78":38,"79":38,"80":38,"81":38,"82":38,"83":98,"84":60,"85":60,"86":60,"87":0,"88":0,"89":0,"90":60,"91":6,"92":38,"93":38,"94":38,"95":38,"96":38,"97":38,"98":38,"99":38,"100":98,"101":60,"102":60,"103":60,"104":0,"105":0,"106":0,"107":60,"108":10,"109":38,"110":38,"111":38,"112":19,"113":19,"114":19,"115":49,"116":49,"117":49,"118":0,"119":0,"120":0,"121":49,"122":19,"123":19,"124":19,"125":19,"126":19,"127":19,"128":49,"129":49,"130":49,"131":0,"132":0,"133":0,"134":49,"135":0,"136":49,"137":30,"138":30,"139":19,"140":19,"141":12,"142":0,"143":12,"144":12,"145":0,"146":12,"147":11,"148":0,"149":12,"150":0,"151":12,"152":0,"153":12,"154":1},"f":{"0":1,"1":9,"2":9,"3":9,"4":200,"5":86,"6":38,"7":38,"8":19,"9":19,"10":12,"11":0},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[20,1205],"4":[1225,49],"5":[200,241],"6":[640,38],"7":[200,57],"8":[86,114],"9":[38,162],"10":[38,162],"11":[19,181],"12":[19,181],"13":[0,147],"14":[0,0],"15":[60,38],"16":[0,60],"17":[0,0],"18":[6,54],"19":[60,38],"20":[0,60],"21":[0,0],"22":[10,50],"23":[0,49],"24":[0,0],"25":[0,49],"26":[0,0],"27":[0,49],"28":[30,19],"29":[0,12],"30":[0,12],"31":[12,9,6,2,1],"32":[11,1],"33":[12,9,6,2],"34":[0,11],"35":[0,12]},"inputSourceMap":{"version":3,"file":"/Users/tarunn/project_team222/src/controller/Transformations.ts","sources":["/Users/tarunn/project_team222/src/controller/Transformations.ts"],"names":[],"mappings":"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","sourcesContent":["import { ApplyRule, Transformations, validateMKey, validateSKey } from \"./Query\";\nimport { InsightDatasetKind, InsightError, InsightResult } from \"./IInsightFacade\";\nimport Decimal from \"decimal.js\";\nimport { resultsMap } from \"./GetResultObject\";\n\nconst rounding = 2;\nconst mapping: Record<string, string> = {\n\tuuid: \"id\",\n\tid: \"Course\",\n\ttitle: \"Title\",\n\tinstructor: \"Professor\",\n\tdept: \"Subject\",\n\tyear: \"Year\",\n\tavg: \"Avg\",\n\tpass: \"Pass\",\n\tfail: \"Fail\",\n\taudit: \"Audit\",\n\tlat: \"lat\",\n\tlon: \"lon\",\n\tseats: \"seats\",\n\tfullname: \"fullname\",\n\tshortname: \"shortname\",\n\tnumber: \"number\",\n\tname: \"name\",\n\taddress: \"address\",\n\ttype: \"type\",\n\tfurniture: \"furniture\",\n\thref: \"href\",\n};\nconst addedSections = new Set<any>();\nconst overallYear = 1900;\n\nexport async function handleTransformations(transforms: Transformations, columns: string[]): Promise<InsightResult[]> {\n\tconst groupedResults = handleGroup(transforms.GROUP);\n\taddedSections.clear();\n\treturn await handleApply(transforms.APPLY, groupedResults, transforms.GROUP, columns);\n}\n\nfunction handleGroup(group: string[]): Record<string, InsightResult[]> {\n\tconst result: Record<string, InsightResult[]> = {};\n\tconst groupNames = new Set<string>();\n\tconst insights: IterableIterator<InsightResult> = resultsMap.keys();\n\tfor (const object of insights) {\n\t\tconst section = resultsMap.get(object);\n\t\tlet groupName = \"\";\n\t\tfor (const key of group) {\n\t\t\tconst mappedKey = mapping[key.split(\"_\")[1]];\n\t\t\tif (mappedKey === \"Year\" && section.Section === \"overall\") {\n\t\t\t\tsection.Year = 1900;\n\t\t\t}\n\t\t\tconst value = String(section[mappedKey]);\n\t\t\tgroupName = groupName.concat(value, \", \");\n\t\t}\n\t\tconst toErase = -2;\n\t\tgroupName = groupName.slice(0, toErase);\n\t\tgroupName = groupName.concat(\" group\");\n\t\tif (!groupNames.has(groupName)) {\n\t\t\tgroupNames.add(groupName);\n\t\t\tresult[groupName] = new Array<InsightResult>();\n\t\t}\n\t\tresult[groupName].push(object);\n\t}\n\treturn result;\n}\n\nasync function handleApply(\n\tapply: ApplyRule[],\n\tgroups: Record<string, InsightResult[]>,\n\tfields: string[],\n\tcolumns: string[]\n): Promise<InsightResult[]> {\n\tconst result = new Array<InsightResult>();\n\tfor (const group of Object.values(groups)) {\n\t\tconst toAdd: InsightResult = {};\n\t\tfor (const field of fields) {\n\t\t\tconst key = field.split(\"_\")[1];\n\t\t\tif (columns.includes(field)) {\n\t\t\t\ttoAdd[field] = group[0][key];\n\t\t\t}\n\t\t}\n\t\tfor (const rule of apply) {\n\t\t\tif (columns.includes(Object.keys(rule)[0])) {\n\t\t\t\ttoAdd[Object.keys(rule)[0]] = handleRule(rule, group);\n\t\t\t}\n\t\t}\n\t\tresult.push(toAdd);\n\t}\n\treturn result;\n}\n\nfunction handleRule(rule: ApplyRule, group: InsightResult[]): number {\n\tconst token = Object.keys(Object.values(rule)[0])[0];\n\tconst key = Object.values(Object.values(rule)[0])[0];\n\tlet result = 0;\n\tif (token === \"AVG\") {\n\t\tresult = handleAverage(group, key);\n\t}\n\tif (token === \"MAX\") {\n\t\tresult = handleMax(group, key);\n\t}\n\tif (token === \"MIN\") {\n\t\tresult = handleMin(group, key);\n\t}\n\tif (token === \"SUM\") {\n\t\tresult = handleSum(group, key);\n\t}\n\tif (token === \"COUNT\") {\n\t\tresult = handleCount(group, key);\n\t}\n\treturn result;\n}\n\nfunction handleAverage(group: InsightResult[], key: string): number {\n\tconst mappedKey = mapping[key.split(\"_\")[1]];\n\tlet total = new Decimal(0);\n\tlet numRows = 0;\n\tfor (const insight of group) {\n\t\tconst section = resultsMap.get(insight);\n\t\tlet value = section[mappedKey];\n\t\tif (mappedKey === \"Year\") {\n\t\t\tif (section.Section === \"overall\") {\n\t\t\t\tvalue = overallYear;\n\t\t\t} else {\n\t\t\t\tvalue = Number(value);\n\t\t\t}\n\t\t}\n\t\tconst decimal = new Decimal(value as number);\n\t\ttotal = total.add(decimal);\n\t\tnumRows++;\n\t}\n\tconst avg = total.toNumber() / numRows;\n\taddedSections.clear();\n\treturn Number(avg.toFixed(rounding));\n}\nfunction handleMax(group: InsightResult[], key: string): number {\n\tconst mappedKey = mapping[key.split(\"_\")[1]];\n\tconst firstSection = resultsMap.get(group[0]);\n\tlet currentMax = firstSection[mappedKey] as number;\n\tlet first = true;\n\tfor (const insight of group) {\n\t\tif (!first) {\n\t\t\tconst section = resultsMap.get(insight);\n\t\t\tlet value = section[mappedKey];\n\t\t\tif (mappedKey === \"Year\") {\n\t\t\t\tif (section.Section === \"overall\") {\n\t\t\t\t\tvalue = overallYear;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = Number(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (value > currentMax) {\n\t\t\t\tcurrentMax = value as number;\n\t\t\t}\n\t\t} else {\n\t\t\tfirst = false;\n\t\t}\n\t}\n\taddedSections.clear();\n\treturn currentMax;\n}\nfunction handleMin(group: InsightResult[], key: string): number {\n\tconst mappedKey = mapping[key.split(\"_\")[1]];\n\tconst firstSection = resultsMap.get(group[0]);\n\tlet currentMin = firstSection[mappedKey] as number;\n\tlet first = true;\n\tfor (const insight of group) {\n\t\tif (!first) {\n\t\t\tconst section = resultsMap.get(insight);\n\t\t\tlet value = section[mappedKey];\n\t\t\tif (mappedKey === \"Year\") {\n\t\t\t\tif (section.Section === \"overall\") {\n\t\t\t\t\tvalue = overallYear;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = Number(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (value < currentMin) {\n\t\t\t\tcurrentMin = value as number;\n\t\t\t}\n\t\t} else {\n\t\t\tfirst = false;\n\t\t}\n\t}\n\taddedSections.clear();\n\treturn currentMin;\n}\nfunction handleSum(group: InsightResult[], key: string): number {\n\tconst mappedKey = mapping[key.split(\"_\")[1]];\n\tlet total = 0;\n\tfor (const insight of group) {\n\t\tconst section = resultsMap.get(insight);\n\t\tlet value = section[mappedKey];\n\t\tif (mappedKey === \"Year\") {\n\t\t\tif (section.Section === \"overall\") {\n\t\t\t\tvalue = overallYear;\n\t\t\t} else {\n\t\t\t\tvalue = Number(value);\n\t\t\t}\n\t\t}\n\t\ttotal = total + (value as number);\n\t}\n\taddedSections.clear();\n\treturn Number(total.toFixed(rounding));\n}\nfunction handleCount(group: InsightResult[], key: string): number {\n\tconst mappedKey = mapping[key.split(\"_\")[1]];\n\tconst counted = new Set<string | number>();\n\tlet total = 0;\n\tfor (const insight of group) {\n\t\tconst section = resultsMap.get(insight);\n\t\tlet value = section[mappedKey];\n\t\tif (mappedKey === \"Year\") {\n\t\t\tif (section.Section === \"overall\") {\n\t\t\t\tvalue = overallYear;\n\t\t\t} else {\n\t\t\t\tvalue = Number(value);\n\t\t\t}\n\t\t}\n\t\tif (mappedKey === \"id\") {\n\t\t\tvalue = String(value);\n\t\t}\n\t\tif (!counted.has(value)) {\n\t\t\ttotal++;\n\t\t\tcounted.add(value);\n\t\t}\n\t}\n\taddedSections.clear();\n\treturn total;\n}\n/* Caused timeout???\nfunction getSection(sections: any[], insight: InsightResult): any {\n\treturn sections.find((element) => {\n\t\tfor (const entry of Object.entries(insight)) {\n\t\t\tconst updatedKey = mapping[entry[0].split(\"_\")[1]];\n\t\t\tlet value = element[updatedKey];\n\t\t\tif (updatedKey === \"Year\") {\n\t\t\t\tif (element.Section === \"overall\") {\n\t\t\t\t\tvalue = overallYear;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = Number(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (updatedKey === \"id\") {\n\t\t\t\tvalue = String(value);\n\t\t\t}\n\t\t\tif (value !== entry[1]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (!addedSections.has(element)) {\n\t\t\taddedSections.add(element);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t});\n}\n\n */\n\nexport async function validateApplyRecord(record: Record<string, string>, kind: InsightDatasetKind): Promise<boolean> {\n\tif (Object.keys(record).length !== 1) {\n\t\tthrow new InsightError(\"Incorrect number of keys in Apply Record\");\n\t}\n\tconst token = Object.keys(record)[0];\n\tif (!(token === \"MAX\" || token === \"MIN\" || token === \"AVG\" || token === \"SUM\" || token === \"COUNT\")) {\n\t\tthrow new InsightError(\"Apply token is not formatted correctly\");\n\t}\n\tif (token === \"MAX\" || token === \"MIN\" || token === \"AVG\" || token === \"SUM\") {\n\t\tif (!(await validateMKey(Object.values(record)[0], kind))) {\n\t\t\tthrow new InsightError(\"Key must be numeric\");\n\t\t}\n\t}\n\tconst validateKey = await Promise.any([\n\t\tvalidateSKey(Object.values(record)[0], kind),\n\t\tvalidateMKey(Object.values(record)[0], kind),\n\t]).catch(() => false);\n\tif (!validateKey) {\n\t\tthrow new InsightError(\"Apply rule key not MKey or SKey\");\n\t}\n\treturn true;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2640943249d4bba59f7756265f6c85fca8bb1770","contentHash":"6077387573317460c85dea4d7b27da9be19ce44b80bd0da2cda374bbc65b8c78"},"/Users/tarunn/project_team222/src/rest/Server.ts":{"path":"/Users/tarunn/project_team222/src/rest/Server.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":53}},"4":{"start":{"line":7,"column":23},"end":{"line":7,"column":74}},"5":{"start":{"line":8,"column":14},"end":{"line":8,"column":75}},"6":{"start":{"line":9,"column":15},"end":{"line":9,"column":47}},"7":{"start":{"line":10,"column":24},"end":{"line":10,"column":79}},"8":{"start":{"line":11,"column":25},"end":{"line":11,"column":64}},"9":{"start":{"line":12,"column":16},"end":{"line":15,"column":1}},"10":{"start":{"line":22,"column":8},"end":{"line":22,"column":56}},"11":{"start":{"line":23,"column":8},"end":{"line":23,"column":25}},"12":{"start":{"line":24,"column":8},"end":{"line":24,"column":48}},"13":{"start":{"line":25,"column":8},"end":{"line":25,"column":54}},"14":{"start":{"line":26,"column":8},"end":{"line":26,"column":34}},"15":{"start":{"line":27,"column":8},"end":{"line":27,"column":30}},"16":{"start":{"line":28,"column":8},"end":{"line":28,"column":54}},"17":{"start":{"line":29,"column":8},"end":{"line":29,"column":72}},"18":{"start":{"line":32,"column":8},"end":{"line":49,"column":11}},"19":{"start":{"line":33,"column":12},"end":{"line":33,"column":58}},"20":{"start":{"line":34,"column":12},"end":{"line":48,"column":13}},"21":{"start":{"line":35,"column":16},"end":{"line":35,"column":82}},"22":{"start":{"line":36,"column":16},"end":{"line":36,"column":25}},"23":{"start":{"line":39,"column":16},"end":{"line":47,"column":19}},"24":{"start":{"line":41,"column":20},"end":{"line":41,"column":99}},"25":{"start":{"line":42,"column":20},"end":{"line":42,"column":30}},"26":{"start":{"line":45,"column":20},"end":{"line":45,"column":90}},"27":{"start":{"line":46,"column":20},"end":{"line":46,"column":32}},"28":{"start":{"line":52,"column":8},"end":{"line":52,"column":45}},"29":{"start":{"line":53,"column":8},"end":{"line":64,"column":11}},"30":{"start":{"line":54,"column":12},"end":{"line":63,"column":13}},"31":{"start":{"line":55,"column":16},"end":{"line":55,"column":82}},"32":{"start":{"line":56,"column":16},"end":{"line":56,"column":25}},"33":{"start":{"line":59,"column":16},"end":{"line":62,"column":19}},"34":{"start":{"line":60,"column":20},"end":{"line":60,"column":73}},"35":{"start":{"line":61,"column":20},"end":{"line":61,"column":30}},"36":{"start":{"line":67,"column":8},"end":{"line":67,"column":51}},"37":{"start":{"line":68,"column":8},"end":{"line":68,"column":90}},"38":{"start":{"line":69,"column":8},"end":{"line":69,"column":48}},"39":{"start":{"line":72,"column":8},"end":{"line":72,"column":52}},"40":{"start":{"line":73,"column":8},"end":{"line":73,"column":59}},"41":{"start":{"line":74,"column":8},"end":{"line":74,"column":59}},"42":{"start":{"line":75,"column":8},"end":{"line":75,"column":53}},"43":{"start":{"line":76,"column":8},"end":{"line":76,"column":51}},"44":{"start":{"line":79,"column":8},"end":{"line":101,"column":9}},"45":{"start":{"line":80,"column":23},"end":{"line":80,"column":36}},"46":{"start":{"line":81,"column":31},"end":{"line":81,"column":60}},"47":{"start":{"line":82,"column":25},"end":{"line":82,"column":44}},"48":{"start":{"line":83,"column":12},"end":{"line":87,"column":13}},"49":{"start":{"line":84,"column":16},"end":{"line":84,"column":73}},"50":{"start":{"line":85,"column":16},"end":{"line":85,"column":120}},"51":{"start":{"line":86,"column":16},"end":{"line":86,"column":23}},"52":{"start":{"line":88,"column":12},"end":{"line":92,"column":13}},"53":{"start":{"line":89,"column":16},"end":{"line":89,"column":91}},"54":{"start":{"line":90,"column":16},"end":{"line":90,"column":118}},"55":{"start":{"line":91,"column":16},"end":{"line":91,"column":23}},"56":{"start":{"line":93,"column":28},"end":{"line":93,"column":55}},"57":{"start":{"line":94,"column":27},"end":{"line":94,"column":76}},"58":{"start":{"line":95,"column":12},"end":{"line":95,"column":79}},"59":{"start":{"line":96,"column":12},"end":{"line":96,"column":79}},"60":{"start":{"line":99,"column":12},"end":{"line":99,"column":42}},"61":{"start":{"line":100,"column":12},"end":{"line":100,"column":89}},"62":{"start":{"line":104,"column":8},"end":{"line":122,"column":9}},"63":{"start":{"line":105,"column":23},"end":{"line":105,"column":36}},"64":{"start":{"line":106,"column":27},"end":{"line":106,"column":64}},"65":{"start":{"line":107,"column":12},"end":{"line":107,"column":79}},"66":{"start":{"line":110,"column":12},"end":{"line":121,"column":13}},"67":{"start":{"line":111,"column":16},"end":{"line":111,"column":77}},"68":{"start":{"line":112,"column":16},"end":{"line":112,"column":91}},"69":{"start":{"line":114,"column":17},"end":{"line":121,"column":13}},"70":{"start":{"line":115,"column":16},"end":{"line":115,"column":70}},"71":{"start":{"line":116,"column":16},"end":{"line":116,"column":93}},"72":{"start":{"line":119,"column":16},"end":{"line":119,"column":64}},"73":{"start":{"line":120,"column":16},"end":{"line":120,"column":93}},"74":{"start":{"line":125,"column":8},"end":{"line":135,"column":9}},"75":{"start":{"line":126,"column":26},"end":{"line":126,"column":34}},"76":{"start":{"line":127,"column":12},"end":{"line":127,"column":38}},"77":{"start":{"line":128,"column":27},"end":{"line":128,"column":66}},"78":{"start":{"line":129,"column":12},"end":{"line":129,"column":72}},"79":{"start":{"line":130,"column":12},"end":{"line":130,"column":79}},"80":{"start":{"line":133,"column":12},"end":{"line":133,"column":42}},"81":{"start":{"line":134,"column":12},"end":{"line":134,"column":89}},"82":{"start":{"line":138,"column":8},"end":{"line":146,"column":9}},"83":{"start":{"line":139,"column":27},"end":{"line":139,"column":61}},"84":{"start":{"line":140,"column":12},"end":{"line":140,"column":74}},"85":{"start":{"line":141,"column":12},"end":{"line":141,"column":79}},"86":{"start":{"line":144,"column":12},"end":{"line":144,"column":66}},"87":{"start":{"line":145,"column":12},"end":{"line":145,"column":89}},"88":{"start":{"line":149,"column":8},"end":{"line":156,"column":9}},"89":{"start":{"line":150,"column":12},"end":{"line":150,"column":91}},"90":{"start":{"line":151,"column":29},"end":{"line":151,"column":63}},"91":{"start":{"line":152,"column":12},"end":{"line":152,"column":81}},"92":{"start":{"line":155,"column":12},"end":{"line":155,"column":84}},"93":{"start":{"line":159,"column":8},"end":{"line":164,"column":9}},"94":{"start":{"line":160,"column":12},"end":{"line":160,"column":37}},"95":{"start":{"line":163,"column":12},"end":{"line":163,"column":42}},"96":{"start":{"line":167,"column":0},"end":{"line":167,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":22},"end":{"line":30,"column":5}},"line":21},"2":{"name":"(anonymous_2)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":18},"end":{"line":50,"column":5}},"line":31},"3":{"name":"(anonymous_3)","decl":{"start":{"line":32,"column":27},"end":{"line":32,"column":28}},"loc":{"start":{"line":32,"column":48},"end":{"line":49,"column":9}},"line":32},"4":{"name":"(anonymous_4)","decl":{"start":{"line":40,"column":39},"end":{"line":40,"column":40}},"loc":{"start":{"line":40,"column":45},"end":{"line":43,"column":17}},"line":40},"5":{"name":"(anonymous_5)","decl":{"start":{"line":44,"column":33},"end":{"line":44,"column":34}},"loc":{"start":{"line":44,"column":42},"end":{"line":47,"column":17}},"line":44},"6":{"name":"(anonymous_6)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":17},"end":{"line":65,"column":5}},"line":51},"7":{"name":"(anonymous_7)","decl":{"start":{"line":53,"column":27},"end":{"line":53,"column":28}},"loc":{"start":{"line":53,"column":48},"end":{"line":64,"column":9}},"line":53},"8":{"name":"(anonymous_8)","decl":{"start":{"line":59,"column":34},"end":{"line":59,"column":35}},"loc":{"start":{"line":59,"column":40},"end":{"line":62,"column":17}},"line":59},"9":{"name":"(anonymous_9)","decl":{"start":{"line":66,"column":4},"end":{"line":66,"column":5}},"loc":{"start":{"line":66,"column":25},"end":{"line":70,"column":5}},"line":66},"10":{"name":"(anonymous_10)","decl":{"start":{"line":71,"column":4},"end":{"line":71,"column":5}},"loc":{"start":{"line":71,"column":21},"end":{"line":77,"column":5}},"line":71},"11":{"name":"(anonymous_11)","decl":{"start":{"line":78,"column":4},"end":{"line":78,"column":5}},"loc":{"start":{"line":78,"column":31},"end":{"line":102,"column":5}},"line":78},"12":{"name":"(anonymous_12)","decl":{"start":{"line":103,"column":4},"end":{"line":103,"column":5}},"loc":{"start":{"line":103,"column":34},"end":{"line":123,"column":5}},"line":103},"13":{"name":"(anonymous_13)","decl":{"start":{"line":124,"column":4},"end":{"line":124,"column":5}},"loc":{"start":{"line":124,"column":36},"end":{"line":136,"column":5}},"line":124},"14":{"name":"(anonymous_14)","decl":{"start":{"line":137,"column":4},"end":{"line":137,"column":5}},"loc":{"start":{"line":137,"column":33},"end":{"line":147,"column":5}},"line":137},"15":{"name":"(anonymous_15)","decl":{"start":{"line":148,"column":4},"end":{"line":148,"column":5}},"loc":{"start":{"line":148,"column":26},"end":{"line":157,"column":5}},"line":148},"16":{"name":"(anonymous_16)","decl":{"start":{"line":158,"column":4},"end":{"line":158,"column":5}},"loc":{"start":{"line":158,"column":28},"end":{"line":165,"column":5}},"line":158}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":34,"column":12},"end":{"line":48,"column":13}},"type":"if","locations":[{"start":{"line":34,"column":12},"end":{"line":48,"column":13}},{"start":{"line":34,"column":12},"end":{"line":48,"column":13}}],"line":34},"4":{"loc":{"start":{"line":54,"column":12},"end":{"line":63,"column":13}},"type":"if","locations":[{"start":{"line":54,"column":12},"end":{"line":63,"column":13}},{"start":{"line":54,"column":12},"end":{"line":63,"column":13}}],"line":54},"5":{"loc":{"start":{"line":83,"column":12},"end":{"line":87,"column":13}},"type":"if","locations":[{"start":{"line":83,"column":12},"end":{"line":87,"column":13}},{"start":{"line":83,"column":12},"end":{"line":87,"column":13}}],"line":83},"6":{"loc":{"start":{"line":88,"column":12},"end":{"line":92,"column":13}},"type":"if","locations":[{"start":{"line":88,"column":12},"end":{"line":92,"column":13}},{"start":{"line":88,"column":12},"end":{"line":92,"column":13}}],"line":88},"7":{"loc":{"start":{"line":88,"column":16},"end":{"line":88,"column":58}},"type":"binary-expr","locations":[{"start":{"line":88,"column":16},"end":{"line":88,"column":25}},{"start":{"line":88,"column":29},"end":{"line":88,"column":58}}],"line":88},"8":{"loc":{"start":{"line":110,"column":12},"end":{"line":121,"column":13}},"type":"if","locations":[{"start":{"line":110,"column":12},"end":{"line":121,"column":13}},{"start":{"line":110,"column":12},"end":{"line":121,"column":13}}],"line":110},"9":{"loc":{"start":{"line":114,"column":17},"end":{"line":121,"column":13}},"type":"if","locations":[{"start":{"line":114,"column":17},"end":{"line":121,"column":13}},{"start":{"line":114,"column":17},"end":{"line":121,"column":13}}],"line":114},"10":{"loc":{"start":{"line":159,"column":8},"end":{"line":164,"column":9}},"type":"if","locations":[{"start":{"line":159,"column":8},"end":{"line":164,"column":9}},{"start":{"line":159,"column":8},"end":{"line":164,"column":9}}],"line":159},"11":{"loc":{"start":{"line":159,"column":12},"end":{"line":159,"column":54}},"type":"binary-expr","locations":[{"start":{"line":159,"column":12},"end":{"line":159,"column":38}},{"start":{"line":159,"column":42},"end":{"line":159,"column":54}}],"line":159}},"s":{"0":1,"1":4,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":0,"22":0,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":1,"31":0,"32":0,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":6,"45":6,"46":6,"47":6,"48":6,"49":6,"50":6,"51":6,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":3,"63":3,"64":3,"65":0,"66":3,"67":2,"68":2,"69":1,"70":1,"71":1,"72":0,"73":0,"74":1,"75":1,"76":1,"77":1,"78":0,"79":0,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":1},"f":{"0":4,"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":1,"8":1,"9":1,"10":1,"11":6,"12":3,"13":1,"14":1,"15":0,"16":0},"b":{"0":[1,1,1],"1":[2,2],"2":[4,4],"3":[0,1],"4":[0,1],"5":[6,0],"6":[0,0],"7":[0,0],"8":[2,1],"9":[1,0],"10":[0,0],"11":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/tarunn/project_team222/src/rest/Server.ts","sources":["/Users/tarunn/project_team222/src/rest/Server.ts"],"names":[],"mappings":"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","sourcesContent":["import express, { Application, Request, Response } from \"express\";\nimport { StatusCodes } from \"http-status-codes/build/cjs/status-codes\";\nimport Log from \"@ubccpsc310/folder-test/build/Log\";\nimport * as http from \"http\";\nimport cors from \"cors\";\nimport InsightFacade from \"../controller/InsightFacade\";\n\nimport { InsightDatasetKind, InsightError, NotFoundError } from \"../controller/IInsightFacade\";\n\nconst kindMap: Record<string, InsightDatasetKind> = {\n\tsection: InsightDatasetKind.Sections,\n\troom: InsightDatasetKind.Rooms,\n};\n\nexport default class Server {\n\tprivate readonly port: number;\n\tprivate express: Application;\n\tprivate server: http.Server | undefined;\n\tprivate static facade: InsightFacade;\n\n\tconstructor(port: number) {\n\t\tLog.info(`Server::<init>( ${port} )`);\n\t\tthis.port = port;\n\t\tthis.express = express();\n\t\tServer.facade = new InsightFacade();\n\n\t\tthis.registerMiddleware();\n\t\tthis.registerRoutes();\n\t\tServer.facade = new InsightFacade();\n\n\t\t// NOTE: you can serve static frontend files in from your express server\n\t\t// by uncommenting the line below. This makes files in ./frontend/public\n\t\t// accessible at http://localhost:<port>/\n\t\tthis.express.use(express.static(\"./frontend/public\"));\n\t}\n\n\t/**\n\t * Starts the server. Returns a promise that resolves if success. Promises are used\n\t * here because starting the server takes some time, and we want to know when it\n\t * is done (and if it worked).\n\t *\n\t * @returns {Promise<void>}\n\t */\n\tpublic async start(): Promise<void> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tLog.info(\"Server::start() - start\");\n\t\t\tif (this.server !== undefined) {\n\t\t\t\tLog.error(\"Server::start() - server already listening\");\n\t\t\t\treject();\n\t\t\t} else {\n\t\t\t\tthis.server = this.express\n\t\t\t\t\t.listen(this.port, () => {\n\t\t\t\t\t\tLog.info(`Server::start() - server listening on port: ${this.port}`);\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t})\n\t\t\t\t\t.on(\"error\", (err: Error) => {\n\t\t\t\t\t\t// catches errors in server start\n\t\t\t\t\t\tLog.error(`Server::start() - server ERROR: ${err.message}`);\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Stops the server. Again returns a promise, so we know when the connections have\n\t * actually been fully closed and the port has been released.\n\t *\n\t * @returns {Promise<void>}\n\t */\n\tpublic async stop(): Promise<void> {\n\t\tLog.info(\"Server::stop()\");\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (this.server === undefined) {\n\t\t\t\tLog.error(\"Server::stop() - ERROR: server not started\");\n\t\t\t\treject();\n\t\t\t} else {\n\t\t\t\tthis.server.close(() => {\n\t\t\t\t\tLog.info(\"Server::stop() - server closed\");\n\t\t\t\t\tresolve();\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t// Registers middleware to parse request before passing them to request handlers\n\tprivate registerMiddleware(): void {\n\t\t// JSON parser must be in place before raw parser because of wildcard matching done by raw parser below\n\t\tthis.express.use(express.json());\n\t\tthis.express.use(express.raw({ type: \"application/*\", limit: \"10mb\" }));\n\n\t\t// enable cors in request headers to allow cross-origin HTTP requests\n\t\tthis.express.use(cors());\n\t}\n\n\t// Registers all request handlers to routes\n\tprivate registerRoutes(): void {\n\t\t// This is an example endpoint this you can invoke by accessing this URL in your browser:\n\t\t// http://localhost:4321/echo/hello\n\t\tthis.express.get(\"/echo/:msg\", Server.echo);\n\t\tthis.express.put(\"/dataset/:id/:kind\", Server.add);\n\t\tthis.express.delete(\"/dataset/:id\", Server.remove);\n\t\tthis.express.post(\"/query\", Server.performQ);\n\t\tthis.express.get(\"/datasets\", Server.list);\n\t}\n\n\tprivate static async add(req: Request, res: Response): Promise<void> {\n\t\ttry {\n\t\t\t// Parse fields\n\t\t\tconst id = req.params.id;\n\t\t\tconst kindString = req.params.kind.toLowerCase();\n\t\t\tconst kind = kindMap[kindString];\n\n\t\t\t// Validate the kind\n\t\t\tif (!kind) {\n\t\t\t\tLog.error(\"Inputted kind type does not exist\");\n\t\t\t\tres.status(StatusCodes.BAD_REQUEST).json({ error: \"Inputted kind type does not exist\" });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Validate the file\n\t\t\tif (!req.body || !(req.body instanceof Buffer)) {\n\t\t\t\tLog.error(\"File data not received or not in the correct format\");\n\t\t\t\tres.status(StatusCodes.BAD_REQUEST).json({ error: \"File data is missing or invalid\" });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Convert the file buffer to Base64\n\t\t\tconst content = req.body.toString(\"base64\");\n\n\t\t\t// Process the dataset\n\t\t\tconst result = await Server.facade.addDataset(id, content, kind);\n\t\t\tLog.info(`Dataset: '${id}' has been successfully added`);\n\t\t\tres.status(StatusCodes.OK).json({ result: result });\n\t\t} catch (err) {\n\t\t\tLog.error(`${err}`);\n\t\t\tres.status(StatusCodes.BAD_REQUEST).json({ error: `${err}` });\n\t\t}\n\t}\n\n\tprivate static async remove(req: Request, res: Response): Promise<void> {\n\t\ttry {\n\t\t\tconst id = req.params.id;\n\t\t\tconst result = await Server.facade.removeDataset(id);\n\n\t\t\tres.status(StatusCodes.OK).json({ result: result });\n\t\t} catch (err) {\n\t\t\tif (err instanceof NotFoundError) {\n\t\t\t\tLog.error(`Dataset: '${req.params.id}' not found`);\n\t\t\t\tres.status(StatusCodes.NOT_FOUND).json({ error: `${err}` });\n\t\t\t} else if (err instanceof InsightError) {\n\t\t\t\tLog.error(`Error removing dataset: ${err}`);\n\t\t\t\tres.status(StatusCodes.BAD_REQUEST).json({ error: `${err}` });\n\t\t\t} else {\n\t\t\t\tLog.error(`Unexpected error: ${err}`);\n\t\t\t\tres.status(StatusCodes.BAD_REQUEST).json({ error: `${err}` });\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static async performQ(req: Request, res: Response): Promise<void> {\n\t\ttry {\n\t\t\tconst query = req.body;\n\t\t\tLog.info(query);\n\t\t\tconst result = await Server.facade.performQuery(query);\n\t\t\tLog.info(`Query has been successfully performed`);\n\t\t\tres.status(StatusCodes.OK).json({ result: result });\n\t\t} catch (err) {\n\t\t\tLog.error(`${err}`);\n\t\t\tres.status(StatusCodes.BAD_REQUEST).json({ error: `${err}` });\n\t\t}\n\t}\n\n\tprivate static async list(_req: Request, res: Response): Promise<void> {\n\t\ttry {\n\t\t\tconst result = await Server.facade.listDatasets();\n\t\t\tLog.info(\"List of datasets retrieved successfully\");\n\t\t\tres.status(StatusCodes.OK).json({ result: result });\n\t\t} catch (err) {\n\t\t\tLog.error(`Error listing datasets: ${err}`);\n\t\t\tres.status(StatusCodes.BAD_REQUEST).json({ error: `${err}` });\n\t\t}\n\t}\n\n\t// The next two methods handle the echo service.\n\t// These are almost certainly not the best place to put these, but are here for your reference.\n\t// By updating the Server.echo function pointer above, these methods can be easily moved.\n\tprivate static echo(req: Request, res: Response): void {\n\t\ttry {\n\t\t\tLog.info(`Server::echo(..) - params: ${JSON.stringify(req.params)}`);\n\t\t\tconst response = Server.performEcho(req.params.msg);\n\t\t\tres.status(StatusCodes.OK).json({ result: response });\n\t\t} catch (err) {\n\t\t\tres.status(StatusCodes.BAD_REQUEST).json({ error: err });\n\t\t}\n\t}\n\n\tprivate static performEcho(msg: string): string {\n\t\tif (typeof msg !== \"undefined\" && msg !== null) {\n\t\t\treturn `${msg}...${msg}`;\n\t\t} else {\n\t\t\treturn \"Message not provided\";\n\t\t}\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9e6d1d7fb2e76a0153b4fa479af9c068703570c9","contentHash":"f8f13f8f0918602c29cda8fa7e608869c5fe2e0d55351b45bc17c3277bf5eff6"}}